import * as $protobuf from "protobufjs";

/** Properties of a SYNC_OBJECT. */
export interface ISYNC_OBJECT {

    /** SYNC_OBJECT id */
    id?: (string|null);

    /** SYNC_OBJECT data */
    data?: (string|null);
}

/** Represents a SYNC_OBJECT. */
export class SYNC_OBJECT implements ISYNC_OBJECT {

    /**
     * Constructs a new SYNC_OBJECT.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISYNC_OBJECT);

    /** SYNC_OBJECT id. */
    public id: string;

    /** SYNC_OBJECT data. */
    public data: string;

    /**
     * Creates a new SYNC_OBJECT instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SYNC_OBJECT instance
     */
    public static create(properties?: ISYNC_OBJECT): SYNC_OBJECT;

    /**
     * Encodes the specified SYNC_OBJECT message. Does not implicitly {@link SYNC_OBJECT.verify|verify} messages.
     * @param message SYNC_OBJECT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISYNC_OBJECT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SYNC_OBJECT message, length delimited. Does not implicitly {@link SYNC_OBJECT.verify|verify} messages.
     * @param message SYNC_OBJECT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISYNC_OBJECT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SYNC_OBJECT message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SYNC_OBJECT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SYNC_OBJECT;

    /**
     * Decodes a SYNC_OBJECT message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SYNC_OBJECT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SYNC_OBJECT;

    /**
     * Verifies a SYNC_OBJECT message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SYNC_OBJECT message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SYNC_OBJECT
     */
    public static fromObject(object: { [k: string]: any }): SYNC_OBJECT;

    /**
     * Creates a plain object from a SYNC_OBJECT message. Also converts values to other types if specified.
     * @param message SYNC_OBJECT
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SYNC_OBJECT, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SYNC_OBJECT to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SYNC_OBJECT {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 996
    }
}

/** CLUB_TYPE enum. */
export enum CLUB_TYPE {
    CT_DEFAULT = 0,
    CT_UNION = 1
}

/** CLUB_ROLE_TYPE enum. */
export enum CLUB_ROLE_TYPE {
    CRT_NOT_MEMBER = 0,
    CRT_PLAYER = 1,
    CRT_PARTNER = 2,
    CRT_ADMIN = 3,
    CRT_BOSS = 4
}

/** SYNC_TYPE enum. */
export enum SYNC_TYPE {
    SYNC_NONE = 0,
    SYNC_ADD = 1,
    SYNC_DEL = 2,
    SYNC_UPDATE = 3
}

/** Properties of a PLAYER_BASE_INFO. */
export interface IPLAYER_BASE_INFO {

    /** PLAYER_BASE_INFO guid */
    guid?: (number|null);

    /** PLAYER_BASE_INFO icon */
    icon?: (string|null);

    /** PLAYER_BASE_INFO nickname */
    nickname?: (string|null);

    /** PLAYER_BASE_INFO sex */
    sex?: (number|null);
}

/** Represents a PLAYER_BASE_INFO. */
export class PLAYER_BASE_INFO implements IPLAYER_BASE_INFO {

    /**
     * Constructs a new PLAYER_BASE_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPLAYER_BASE_INFO);

    /** PLAYER_BASE_INFO guid. */
    public guid: number;

    /** PLAYER_BASE_INFO icon. */
    public icon: string;

    /** PLAYER_BASE_INFO nickname. */
    public nickname: string;

    /** PLAYER_BASE_INFO sex. */
    public sex: number;

    /**
     * Creates a new PLAYER_BASE_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PLAYER_BASE_INFO instance
     */
    public static create(properties?: IPLAYER_BASE_INFO): PLAYER_BASE_INFO;

    /**
     * Encodes the specified PLAYER_BASE_INFO message. Does not implicitly {@link PLAYER_BASE_INFO.verify|verify} messages.
     * @param message PLAYER_BASE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPLAYER_BASE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PLAYER_BASE_INFO message, length delimited. Does not implicitly {@link PLAYER_BASE_INFO.verify|verify} messages.
     * @param message PLAYER_BASE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPLAYER_BASE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PLAYER_BASE_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PLAYER_BASE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PLAYER_BASE_INFO;

    /**
     * Decodes a PLAYER_BASE_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PLAYER_BASE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PLAYER_BASE_INFO;

    /**
     * Verifies a PLAYER_BASE_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PLAYER_BASE_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PLAYER_BASE_INFO
     */
    public static fromObject(object: { [k: string]: any }): PLAYER_BASE_INFO;

    /**
     * Creates a plain object from a PLAYER_BASE_INFO message. Also converts values to other types if specified.
     * @param message PLAYER_BASE_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PLAYER_BASE_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PLAYER_BASE_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_BASE_INFO. */
export interface ICLUB_BASE_INFO {

    /** CLUB_BASE_INFO id */
    id?: (number|null);

    /** CLUB_BASE_INFO name */
    name?: (string|null);

    /** CLUB_BASE_INFO icon */
    icon?: (string|null);

    /** CLUB_BASE_INFO type */
    type?: (number|null);

    /** CLUB_BASE_INFO parent */
    parent?: (number|null);
}

/** Represents a CLUB_BASE_INFO. */
export class CLUB_BASE_INFO implements ICLUB_BASE_INFO {

    /**
     * Constructs a new CLUB_BASE_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_BASE_INFO);

    /** CLUB_BASE_INFO id. */
    public id: number;

    /** CLUB_BASE_INFO name. */
    public name: string;

    /** CLUB_BASE_INFO icon. */
    public icon: string;

    /** CLUB_BASE_INFO type. */
    public type: number;

    /** CLUB_BASE_INFO parent. */
    public parent: number;

    /**
     * Creates a new CLUB_BASE_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_BASE_INFO instance
     */
    public static create(properties?: ICLUB_BASE_INFO): CLUB_BASE_INFO;

    /**
     * Encodes the specified CLUB_BASE_INFO message. Does not implicitly {@link CLUB_BASE_INFO.verify|verify} messages.
     * @param message CLUB_BASE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_BASE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_BASE_INFO message, length delimited. Does not implicitly {@link CLUB_BASE_INFO.verify|verify} messages.
     * @param message CLUB_BASE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_BASE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_BASE_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_BASE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_BASE_INFO;

    /**
     * Decodes a CLUB_BASE_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_BASE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_BASE_INFO;

    /**
     * Verifies a CLUB_BASE_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_BASE_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_BASE_INFO
     */
    public static fromObject(object: { [k: string]: any }): CLUB_BASE_INFO;

    /**
     * Creates a plain object from a CLUB_BASE_INFO message. Also converts values to other types if specified.
     * @param message CLUB_BASE_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_BASE_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_BASE_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_STATUS_INFO. */
export interface ICLUB_STATUS_INFO {

    /** CLUB_STATUS_INFO status */
    status?: (number|null);

    /** CLUB_STATUS_INFO playerCount */
    playerCount?: (number|null);

    /** CLUB_STATUS_INFO onlinePlayerCount */
    onlinePlayerCount?: (number|null);

    /** CLUB_STATUS_INFO statusInClub */
    statusInClub?: (number|null);
}

/** Represents a CLUB_STATUS_INFO. */
export class CLUB_STATUS_INFO implements ICLUB_STATUS_INFO {

    /**
     * Constructs a new CLUB_STATUS_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_STATUS_INFO);

    /** CLUB_STATUS_INFO status. */
    public status: number;

    /** CLUB_STATUS_INFO playerCount. */
    public playerCount: number;

    /** CLUB_STATUS_INFO onlinePlayerCount. */
    public onlinePlayerCount: number;

    /** CLUB_STATUS_INFO statusInClub. */
    public statusInClub: number;

    /**
     * Creates a new CLUB_STATUS_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_STATUS_INFO instance
     */
    public static create(properties?: ICLUB_STATUS_INFO): CLUB_STATUS_INFO;

    /**
     * Encodes the specified CLUB_STATUS_INFO message. Does not implicitly {@link CLUB_STATUS_INFO.verify|verify} messages.
     * @param message CLUB_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_STATUS_INFO message, length delimited. Does not implicitly {@link CLUB_STATUS_INFO.verify|verify} messages.
     * @param message CLUB_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_STATUS_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_STATUS_INFO;

    /**
     * Decodes a CLUB_STATUS_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_STATUS_INFO;

    /**
     * Verifies a CLUB_STATUS_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_STATUS_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_STATUS_INFO
     */
    public static fromObject(object: { [k: string]: any }): CLUB_STATUS_INFO;

    /**
     * Creates a plain object from a CLUB_STATUS_INFO message. Also converts values to other types if specified.
     * @param message CLUB_STATUS_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_STATUS_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_STATUS_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MONEY_INFO. */
export interface IMONEY_INFO {

    /** MONEY_INFO moneyId */
    moneyId?: (number|null);

    /** MONEY_INFO count */
    count?: (number|null);
}

/** Represents a MONEY_INFO. */
export class MONEY_INFO implements IMONEY_INFO {

    /**
     * Constructs a new MONEY_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMONEY_INFO);

    /** MONEY_INFO moneyId. */
    public moneyId: number;

    /** MONEY_INFO count. */
    public count: number;

    /**
     * Creates a new MONEY_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MONEY_INFO instance
     */
    public static create(properties?: IMONEY_INFO): MONEY_INFO;

    /**
     * Encodes the specified MONEY_INFO message. Does not implicitly {@link MONEY_INFO.verify|verify} messages.
     * @param message MONEY_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMONEY_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MONEY_INFO message, length delimited. Does not implicitly {@link MONEY_INFO.verify|verify} messages.
     * @param message MONEY_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMONEY_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MONEY_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MONEY_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MONEY_INFO;

    /**
     * Decodes a MONEY_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MONEY_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MONEY_INFO;

    /**
     * Verifies a MONEY_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MONEY_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MONEY_INFO
     */
    public static fromObject(object: { [k: string]: any }): MONEY_INFO;

    /**
     * Creates a plain object from a MONEY_INFO message. Also converts values to other types if specified.
     * @param message MONEY_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MONEY_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MONEY_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_TEAM_INFO. */
export interface ICLUB_TEAM_INFO {

    /** CLUB_TEAM_INFO base */
    base?: (ICLUB_BASE_INFO|null);

    /** CLUB_TEAM_INFO boss */
    boss?: (IPLAYER_BASE_INFO|null);

    /** CLUB_TEAM_INFO moneyId */
    moneyId?: (number|null);

    /** CLUB_TEAM_INFO money */
    money?: (IMONEY_INFO[]|null);

    /** CLUB_TEAM_INFO commission */
    commission?: (number|null);

    /** CLUB_TEAM_INFO status */
    status?: (number|null);
}

/** Represents a CLUB_TEAM_INFO. */
export class CLUB_TEAM_INFO implements ICLUB_TEAM_INFO {

    /**
     * Constructs a new CLUB_TEAM_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_TEAM_INFO);

    /** CLUB_TEAM_INFO base. */
    public base?: (ICLUB_BASE_INFO|null);

    /** CLUB_TEAM_INFO boss. */
    public boss?: (IPLAYER_BASE_INFO|null);

    /** CLUB_TEAM_INFO moneyId. */
    public moneyId: number;

    /** CLUB_TEAM_INFO money. */
    public money: IMONEY_INFO[];

    /** CLUB_TEAM_INFO commission. */
    public commission: number;

    /** CLUB_TEAM_INFO status. */
    public status: number;

    /**
     * Creates a new CLUB_TEAM_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_TEAM_INFO instance
     */
    public static create(properties?: ICLUB_TEAM_INFO): CLUB_TEAM_INFO;

    /**
     * Encodes the specified CLUB_TEAM_INFO message. Does not implicitly {@link CLUB_TEAM_INFO.verify|verify} messages.
     * @param message CLUB_TEAM_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_TEAM_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_TEAM_INFO message, length delimited. Does not implicitly {@link CLUB_TEAM_INFO.verify|verify} messages.
     * @param message CLUB_TEAM_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_TEAM_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_TEAM_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_TEAM_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_TEAM_INFO;

    /**
     * Decodes a CLUB_TEAM_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_TEAM_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_TEAM_INFO;

    /**
     * Verifies a CLUB_TEAM_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_TEAM_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_TEAM_INFO
     */
    public static fromObject(object: { [k: string]: any }): CLUB_TEAM_INFO;

    /**
     * Creates a plain object from a CLUB_TEAM_INFO message. Also converts values to other types if specified.
     * @param message CLUB_TEAM_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_TEAM_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_TEAM_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TEAM_STATUS_INFO. */
export interface ITEAM_STATUS_INFO {

    /** TEAM_STATUS_INFO status */
    status?: (number|null);

    /** TEAM_STATUS_INFO canUnblock */
    canUnblock?: (boolean|null);

    /** TEAM_STATUS_INFO partnerId */
    partnerId?: (number|null);

    /** TEAM_STATUS_INFO clubId */
    clubId?: (number|null);
}

/** Represents a TEAM_STATUS_INFO. */
export class TEAM_STATUS_INFO implements ITEAM_STATUS_INFO {

    /**
     * Constructs a new TEAM_STATUS_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITEAM_STATUS_INFO);

    /** TEAM_STATUS_INFO status. */
    public status: number;

    /** TEAM_STATUS_INFO canUnblock. */
    public canUnblock: boolean;

    /** TEAM_STATUS_INFO partnerId. */
    public partnerId: number;

    /** TEAM_STATUS_INFO clubId. */
    public clubId: number;

    /**
     * Creates a new TEAM_STATUS_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TEAM_STATUS_INFO instance
     */
    public static create(properties?: ITEAM_STATUS_INFO): TEAM_STATUS_INFO;

    /**
     * Encodes the specified TEAM_STATUS_INFO message. Does not implicitly {@link TEAM_STATUS_INFO.verify|verify} messages.
     * @param message TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TEAM_STATUS_INFO message, length delimited. Does not implicitly {@link TEAM_STATUS_INFO.verify|verify} messages.
     * @param message TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TEAM_STATUS_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TEAM_STATUS_INFO;

    /**
     * Decodes a TEAM_STATUS_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TEAM_STATUS_INFO;

    /**
     * Verifies a TEAM_STATUS_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TEAM_STATUS_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TEAM_STATUS_INFO
     */
    public static fromObject(object: { [k: string]: any }): TEAM_STATUS_INFO;

    /**
     * Creates a plain object from a TEAM_STATUS_INFO message. Also converts values to other types if specified.
     * @param message TEAM_STATUS_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TEAM_STATUS_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TEAM_STATUS_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SEAT_INFO. */
export interface ISEAT_INFO {

    /** SEAT_INFO chairId */
    chairId?: (number|null);

    /** SEAT_INFO playerInfo */
    playerInfo?: (IPLAYER_BASE_INFO|null);

    /** SEAT_INFO ready */
    ready?: (boolean|null);

    /** SEAT_INFO money */
    money?: (IMONEY_INFO|null);

    /** SEAT_INFO longitude */
    longitude?: (number|null);

    /** SEAT_INFO latitude */
    latitude?: (number|null);

    /** SEAT_INFO online */
    online?: (boolean|null);

    /** SEAT_INFO isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SEAT_INFO. */
export class SEAT_INFO implements ISEAT_INFO {

    /**
     * Constructs a new SEAT_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISEAT_INFO);

    /** SEAT_INFO chairId. */
    public chairId: number;

    /** SEAT_INFO playerInfo. */
    public playerInfo?: (IPLAYER_BASE_INFO|null);

    /** SEAT_INFO ready. */
    public ready: boolean;

    /** SEAT_INFO money. */
    public money?: (IMONEY_INFO|null);

    /** SEAT_INFO longitude. */
    public longitude: number;

    /** SEAT_INFO latitude. */
    public latitude: number;

    /** SEAT_INFO online. */
    public online: boolean;

    /** SEAT_INFO isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SEAT_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SEAT_INFO instance
     */
    public static create(properties?: ISEAT_INFO): SEAT_INFO;

    /**
     * Encodes the specified SEAT_INFO message. Does not implicitly {@link SEAT_INFO.verify|verify} messages.
     * @param message SEAT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISEAT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SEAT_INFO message, length delimited. Does not implicitly {@link SEAT_INFO.verify|verify} messages.
     * @param message SEAT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISEAT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SEAT_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SEAT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SEAT_INFO;

    /**
     * Decodes a SEAT_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SEAT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SEAT_INFO;

    /**
     * Verifies a SEAT_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SEAT_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SEAT_INFO
     */
    public static fromObject(object: { [k: string]: any }): SEAT_INFO;

    /**
     * Creates a plain object from a SEAT_INFO message. Also converts values to other types if specified.
     * @param message SEAT_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SEAT_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SEAT_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TABLE_INFO. */
export interface ITABLE_INFO {

    /** TABLE_INFO gameType */
    gameType?: (number|null);

    /** TABLE_INFO owner */
    owner?: (number|null);

    /** TABLE_INFO clubId */
    clubId?: (number|null);

    /** TABLE_INFO tableId */
    tableId?: (number|null);

    /** TABLE_INFO rule */
    rule?: (string|null);
}

/** Represents a TABLE_INFO. */
export class TABLE_INFO implements ITABLE_INFO {

    /**
     * Constructs a new TABLE_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITABLE_INFO);

    /** TABLE_INFO gameType. */
    public gameType: number;

    /** TABLE_INFO owner. */
    public owner: number;

    /** TABLE_INFO clubId. */
    public clubId: number;

    /** TABLE_INFO tableId. */
    public tableId: number;

    /** TABLE_INFO rule. */
    public rule: string;

    /**
     * Creates a new TABLE_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TABLE_INFO instance
     */
    public static create(properties?: ITABLE_INFO): TABLE_INFO;

    /**
     * Encodes the specified TABLE_INFO message. Does not implicitly {@link TABLE_INFO.verify|verify} messages.
     * @param message TABLE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITABLE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TABLE_INFO message, length delimited. Does not implicitly {@link TABLE_INFO.verify|verify} messages.
     * @param message TABLE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITABLE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TABLE_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TABLE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TABLE_INFO;

    /**
     * Decodes a TABLE_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TABLE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TABLE_INFO;

    /**
     * Verifies a TABLE_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TABLE_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TABLE_INFO
     */
    public static fromObject(object: { [k: string]: any }): TABLE_INFO;

    /**
     * Creates a plain object from a TABLE_INFO message. Also converts values to other types if specified.
     * @param message TABLE_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TABLE_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TABLE_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TABLE_STATUS_INFO. */
export interface ITABLE_STATUS_INFO {

    /** TABLE_STATUS_INFO tableId */
    tableId?: (number|null);

    /** TABLE_STATUS_INFO seatList */
    seatList?: (ISEAT_INFO[]|null);

    /** TABLE_STATUS_INFO tableStatus */
    tableStatus?: (number|null);

    /** TABLE_STATUS_INFO roomCurRound */
    roomCurRound?: (number|null);

    /** TABLE_STATUS_INFO locked */
    locked?: (boolean|null);

    /** TABLE_STATUS_INFO rule */
    rule?: (string|null);

    /** TABLE_STATUS_INFO gameType */
    gameType?: (number|null);

    /** TABLE_STATUS_INFO templateId */
    templateId?: (number|null);
}

/** Represents a TABLE_STATUS_INFO. */
export class TABLE_STATUS_INFO implements ITABLE_STATUS_INFO {

    /**
     * Constructs a new TABLE_STATUS_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITABLE_STATUS_INFO);

    /** TABLE_STATUS_INFO tableId. */
    public tableId: number;

    /** TABLE_STATUS_INFO seatList. */
    public seatList: ISEAT_INFO[];

    /** TABLE_STATUS_INFO tableStatus. */
    public tableStatus: number;

    /** TABLE_STATUS_INFO roomCurRound. */
    public roomCurRound: number;

    /** TABLE_STATUS_INFO locked. */
    public locked: boolean;

    /** TABLE_STATUS_INFO rule. */
    public rule: string;

    /** TABLE_STATUS_INFO gameType. */
    public gameType: number;

    /** TABLE_STATUS_INFO templateId. */
    public templateId: number;

    /**
     * Creates a new TABLE_STATUS_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TABLE_STATUS_INFO instance
     */
    public static create(properties?: ITABLE_STATUS_INFO): TABLE_STATUS_INFO;

    /**
     * Encodes the specified TABLE_STATUS_INFO message. Does not implicitly {@link TABLE_STATUS_INFO.verify|verify} messages.
     * @param message TABLE_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITABLE_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TABLE_STATUS_INFO message, length delimited. Does not implicitly {@link TABLE_STATUS_INFO.verify|verify} messages.
     * @param message TABLE_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITABLE_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TABLE_STATUS_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TABLE_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TABLE_STATUS_INFO;

    /**
     * Decodes a TABLE_STATUS_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TABLE_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TABLE_STATUS_INFO;

    /**
     * Verifies a TABLE_STATUS_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TABLE_STATUS_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TABLE_STATUS_INFO
     */
    public static fromObject(object: { [k: string]: any }): TABLE_STATUS_INFO;

    /**
     * Creates a plain object from a TABLE_STATUS_INFO message. Also converts values to other types if specified.
     * @param message TABLE_STATUS_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TABLE_STATUS_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TABLE_STATUS_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TABLE_TEMPLATE. */
export interface ITABLE_TEMPLATE {

    /** TABLE_TEMPLATE templateId */
    templateId?: (number|null);

    /** TABLE_TEMPLATE gameId */
    gameId?: (number|null);

    /** TABLE_TEMPLATE description */
    description?: (string|null);

    /** TABLE_TEMPLATE rule */
    rule?: (string|null);
}

/** Represents a TABLE_TEMPLATE. */
export class TABLE_TEMPLATE implements ITABLE_TEMPLATE {

    /**
     * Constructs a new TABLE_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITABLE_TEMPLATE);

    /** TABLE_TEMPLATE templateId. */
    public templateId: number;

    /** TABLE_TEMPLATE gameId. */
    public gameId: number;

    /** TABLE_TEMPLATE description. */
    public description: string;

    /** TABLE_TEMPLATE rule. */
    public rule: string;

    /**
     * Creates a new TABLE_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TABLE_TEMPLATE instance
     */
    public static create(properties?: ITABLE_TEMPLATE): TABLE_TEMPLATE;

    /**
     * Encodes the specified TABLE_TEMPLATE message. Does not implicitly {@link TABLE_TEMPLATE.verify|verify} messages.
     * @param message TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TABLE_TEMPLATE message, length delimited. Does not implicitly {@link TABLE_TEMPLATE.verify|verify} messages.
     * @param message TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TABLE_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TABLE_TEMPLATE;

    /**
     * Decodes a TABLE_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TABLE_TEMPLATE;

    /**
     * Verifies a TABLE_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TABLE_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TABLE_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): TABLE_TEMPLATE;

    /**
     * Creates a plain object from a TABLE_TEMPLATE message. Also converts values to other types if specified.
     * @param message TABLE_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TABLE_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TABLE_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_TABLE_TEMPLATE. */
export interface ICLUB_TABLE_TEMPLATE {

    /** CLUB_TABLE_TEMPLATE template */
    template?: (ITABLE_TEMPLATE|null);

    /** CLUB_TABLE_TEMPLATE clubId */
    clubId?: (number|null);
}

/** Represents a CLUB_TABLE_TEMPLATE. */
export class CLUB_TABLE_TEMPLATE implements ICLUB_TABLE_TEMPLATE {

    /**
     * Constructs a new CLUB_TABLE_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_TABLE_TEMPLATE);

    /** CLUB_TABLE_TEMPLATE template. */
    public template?: (ITABLE_TEMPLATE|null);

    /** CLUB_TABLE_TEMPLATE clubId. */
    public clubId: number;

    /**
     * Creates a new CLUB_TABLE_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_TABLE_TEMPLATE instance
     */
    public static create(properties?: ICLUB_TABLE_TEMPLATE): CLUB_TABLE_TEMPLATE;

    /**
     * Encodes the specified CLUB_TABLE_TEMPLATE message. Does not implicitly {@link CLUB_TABLE_TEMPLATE.verify|verify} messages.
     * @param message CLUB_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_TABLE_TEMPLATE message, length delimited. Does not implicitly {@link CLUB_TABLE_TEMPLATE.verify|verify} messages.
     * @param message CLUB_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_TABLE_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_TABLE_TEMPLATE;

    /**
     * Decodes a CLUB_TABLE_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_TABLE_TEMPLATE;

    /**
     * Verifies a CLUB_TABLE_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_TABLE_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_TABLE_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): CLUB_TABLE_TEMPLATE;

    /**
     * Creates a plain object from a CLUB_TABLE_TEMPLATE message. Also converts values to other types if specified.
     * @param message CLUB_TABLE_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_TABLE_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_TABLE_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_MEMBER. */
export interface ICLUB_MEMBER {

    /** CLUB_MEMBER info */
    info?: (IPLAYER_BASE_INFO|null);

    /** CLUB_MEMBER role */
    role?: (number|null);

    /** CLUB_MEMBER money */
    money?: (IMONEY_INFO|null);

    /** CLUB_MEMBER extraData */
    extraData?: (string|null);

    /** CLUB_MEMBER parent */
    parent?: (number|null);

    /** CLUB_MEMBER blockGaming */
    blockGaming?: (boolean|null);

    /** CLUB_MEMBER teamMoney */
    teamMoney?: (IMONEY_INFO|null);

    /** CLUB_MEMBER commission */
    commission?: (number|null);

    /** CLUB_MEMBER parentInfo */
    parentInfo?: (IPLAYER_BASE_INFO|null);

    /** CLUB_MEMBER cansetpartner */
    cansetpartner?: (boolean|null);
}

/** Represents a CLUB_MEMBER. */
export class CLUB_MEMBER implements ICLUB_MEMBER {

    /**
     * Constructs a new CLUB_MEMBER.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_MEMBER);

    /** CLUB_MEMBER info. */
    public info?: (IPLAYER_BASE_INFO|null);

    /** CLUB_MEMBER role. */
    public role: number;

    /** CLUB_MEMBER money. */
    public money?: (IMONEY_INFO|null);

    /** CLUB_MEMBER extraData. */
    public extraData: string;

    /** CLUB_MEMBER parent. */
    public parent: number;

    /** CLUB_MEMBER blockGaming. */
    public blockGaming: boolean;

    /** CLUB_MEMBER teamMoney. */
    public teamMoney?: (IMONEY_INFO|null);

    /** CLUB_MEMBER commission. */
    public commission: number;

    /** CLUB_MEMBER parentInfo. */
    public parentInfo?: (IPLAYER_BASE_INFO|null);

    /** CLUB_MEMBER cansetpartner. */
    public cansetpartner: boolean;

    /**
     * Creates a new CLUB_MEMBER instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_MEMBER instance
     */
    public static create(properties?: ICLUB_MEMBER): CLUB_MEMBER;

    /**
     * Encodes the specified CLUB_MEMBER message. Does not implicitly {@link CLUB_MEMBER.verify|verify} messages.
     * @param message CLUB_MEMBER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_MEMBER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_MEMBER message, length delimited. Does not implicitly {@link CLUB_MEMBER.verify|verify} messages.
     * @param message CLUB_MEMBER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_MEMBER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_MEMBER message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_MEMBER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_MEMBER;

    /**
     * Decodes a CLUB_MEMBER message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_MEMBER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_MEMBER;

    /**
     * Verifies a CLUB_MEMBER message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_MEMBER message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_MEMBER
     */
    public static fromObject(object: { [k: string]: any }): CLUB_MEMBER;

    /**
     * Creates a plain object from a CLUB_MEMBER message. Also converts values to other types if specified.
     * @param message CLUB_MEMBER
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_MEMBER, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_MEMBER to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a REQUEST_INFO. */
export interface IREQUEST_INFO {

    /** REQUEST_INFO reqId */
    reqId?: (number|null);

    /** REQUEST_INFO type */
    type?: (string|null);

    /** REQUEST_INFO who */
    who?: (IPLAYER_BASE_INFO|null);
}

/** Represents a REQUEST_INFO. */
export class REQUEST_INFO implements IREQUEST_INFO {

    /**
     * Constructs a new REQUEST_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IREQUEST_INFO);

    /** REQUEST_INFO reqId. */
    public reqId: number;

    /** REQUEST_INFO type. */
    public type: string;

    /** REQUEST_INFO who. */
    public who?: (IPLAYER_BASE_INFO|null);

    /**
     * Creates a new REQUEST_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns REQUEST_INFO instance
     */
    public static create(properties?: IREQUEST_INFO): REQUEST_INFO;

    /**
     * Encodes the specified REQUEST_INFO message. Does not implicitly {@link REQUEST_INFO.verify|verify} messages.
     * @param message REQUEST_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IREQUEST_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified REQUEST_INFO message, length delimited. Does not implicitly {@link REQUEST_INFO.verify|verify} messages.
     * @param message REQUEST_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IREQUEST_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a REQUEST_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns REQUEST_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): REQUEST_INFO;

    /**
     * Decodes a REQUEST_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns REQUEST_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): REQUEST_INFO;

    /**
     * Verifies a REQUEST_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a REQUEST_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns REQUEST_INFO
     */
    public static fromObject(object: { [k: string]: any }): REQUEST_INFO;

    /**
     * Creates a plain object from a REQUEST_INFO message. Also converts values to other types if specified.
     * @param message REQUEST_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: REQUEST_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this REQUEST_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** OPERATION_TYPE enum. */
export enum OPERATION_TYPE {
    OT_NIL = 0,
    ADD = 1,
    DEL = 2,
    MODIFY = 3
}

/** PAY_OPTION enum. */
export enum PAY_OPTION {
    NIL = 0,
    AA = 1,
    BOSS = 2,
    ROOM_OWNER = 3
}

/** Properties of a COMMISSION_ITEM. */
export interface ICOMMISSION_ITEM {

    /** COMMISSION_ITEM range */
    range?: (number|null);

    /** COMMISSION_ITEM value */
    value?: (number|null);
}

/** Represents a COMMISSION_ITEM. */
export class COMMISSION_ITEM implements ICOMMISSION_ITEM {

    /**
     * Constructs a new COMMISSION_ITEM.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICOMMISSION_ITEM);

    /** COMMISSION_ITEM range. */
    public range: number;

    /** COMMISSION_ITEM value. */
    public value: number;

    /**
     * Creates a new COMMISSION_ITEM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns COMMISSION_ITEM instance
     */
    public static create(properties?: ICOMMISSION_ITEM): COMMISSION_ITEM;

    /**
     * Encodes the specified COMMISSION_ITEM message. Does not implicitly {@link COMMISSION_ITEM.verify|verify} messages.
     * @param message COMMISSION_ITEM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICOMMISSION_ITEM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified COMMISSION_ITEM message, length delimited. Does not implicitly {@link COMMISSION_ITEM.verify|verify} messages.
     * @param message COMMISSION_ITEM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICOMMISSION_ITEM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a COMMISSION_ITEM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns COMMISSION_ITEM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): COMMISSION_ITEM;

    /**
     * Decodes a COMMISSION_ITEM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns COMMISSION_ITEM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): COMMISSION_ITEM;

    /**
     * Verifies a COMMISSION_ITEM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a COMMISSION_ITEM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns COMMISSION_ITEM
     */
    public static fromObject(object: { [k: string]: any }): COMMISSION_ITEM;

    /**
     * Creates a plain object from a COMMISSION_ITEM message. Also converts values to other types if specified.
     * @param message COMMISSION_ITEM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: COMMISSION_ITEM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this COMMISSION_ITEM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_TEMPLATE_CONF. */
export interface ICLUB_TEMPLATE_CONF {

    /** CLUB_TEMPLATE_CONF templateId */
    templateId?: (number|null);

    /** CLUB_TEMPLATE_CONF teamId */
    teamId?: (number|null);

    /** CLUB_TEMPLATE_CONF partnerId */
    partnerId?: (number|null);

    /** CLUB_TEMPLATE_CONF myCommission */
    myCommission?: (number|null);

    /** CLUB_TEMPLATE_CONF myCommissionRate */
    myCommissionRate?: (number|null);

    /** CLUB_TEMPLATE_CONF teamCommissionRate */
    teamCommissionRate?: (number|null);

    /** CLUB_TEMPLATE_CONF teamCommissionConf */
    teamCommissionConf?: (ICOMMISSION_ITEM[]|null);
}

/** Represents a CLUB_TEMPLATE_CONF. */
export class CLUB_TEMPLATE_CONF implements ICLUB_TEMPLATE_CONF {

    /**
     * Constructs a new CLUB_TEMPLATE_CONF.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_TEMPLATE_CONF);

    /** CLUB_TEMPLATE_CONF templateId. */
    public templateId: number;

    /** CLUB_TEMPLATE_CONF teamId. */
    public teamId: number;

    /** CLUB_TEMPLATE_CONF partnerId. */
    public partnerId: number;

    /** CLUB_TEMPLATE_CONF myCommission. */
    public myCommission: number;

    /** CLUB_TEMPLATE_CONF myCommissionRate. */
    public myCommissionRate: number;

    /** CLUB_TEMPLATE_CONF teamCommissionRate. */
    public teamCommissionRate: number;

    /** CLUB_TEMPLATE_CONF teamCommissionConf. */
    public teamCommissionConf: ICOMMISSION_ITEM[];

    /**
     * Creates a new CLUB_TEMPLATE_CONF instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_TEMPLATE_CONF instance
     */
    public static create(properties?: ICLUB_TEMPLATE_CONF): CLUB_TEMPLATE_CONF;

    /**
     * Encodes the specified CLUB_TEMPLATE_CONF message. Does not implicitly {@link CLUB_TEMPLATE_CONF.verify|verify} messages.
     * @param message CLUB_TEMPLATE_CONF message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_TEMPLATE_CONF, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_TEMPLATE_CONF message, length delimited. Does not implicitly {@link CLUB_TEMPLATE_CONF.verify|verify} messages.
     * @param message CLUB_TEMPLATE_CONF message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_TEMPLATE_CONF, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_TEMPLATE_CONF message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_TEMPLATE_CONF
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_TEMPLATE_CONF;

    /**
     * Decodes a CLUB_TEMPLATE_CONF message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_TEMPLATE_CONF
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_TEMPLATE_CONF;

    /**
     * Verifies a CLUB_TEMPLATE_CONF message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_TEMPLATE_CONF message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_TEMPLATE_CONF
     */
    public static fromObject(object: { [k: string]: any }): CLUB_TEMPLATE_CONF;

    /**
     * Creates a plain object from a CLUB_TEMPLATE_CONF message. Also converts values to other types if specified.
     * @param message CLUB_TEMPLATE_CONF
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_TEMPLATE_CONF, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_TEMPLATE_CONF to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CLUB_TEAM_TEMPLATE_CONF. */
export interface ICLUB_TEAM_TEMPLATE_CONF {

    /** CLUB_TEAM_TEMPLATE_CONF templateId */
    templateId?: (number|null);

    /** CLUB_TEAM_TEMPLATE_CONF visual */
    visual?: (boolean|null);

    /** CLUB_TEAM_TEMPLATE_CONF myCommission */
    myCommission?: (number|null);

    /** CLUB_TEAM_TEMPLATE_CONF myCommissionRate */
    myCommissionRate?: (number|null);

    /** CLUB_TEAM_TEMPLATE_CONF teamCommissionRate */
    teamCommissionRate?: (number|null);

    /** CLUB_TEAM_TEMPLATE_CONF teamCommissionConf */
    teamCommissionConf?: (ICOMMISSION_ITEM[]|null);
}

/** Represents a CLUB_TEAM_TEMPLATE_CONF. */
export class CLUB_TEAM_TEMPLATE_CONF implements ICLUB_TEAM_TEMPLATE_CONF {

    /**
     * Constructs a new CLUB_TEAM_TEMPLATE_CONF.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICLUB_TEAM_TEMPLATE_CONF);

    /** CLUB_TEAM_TEMPLATE_CONF templateId. */
    public templateId: number;

    /** CLUB_TEAM_TEMPLATE_CONF visual. */
    public visual: boolean;

    /** CLUB_TEAM_TEMPLATE_CONF myCommission. */
    public myCommission: number;

    /** CLUB_TEAM_TEMPLATE_CONF myCommissionRate. */
    public myCommissionRate: number;

    /** CLUB_TEAM_TEMPLATE_CONF teamCommissionRate. */
    public teamCommissionRate: number;

    /** CLUB_TEAM_TEMPLATE_CONF teamCommissionConf. */
    public teamCommissionConf: ICOMMISSION_ITEM[];

    /**
     * Creates a new CLUB_TEAM_TEMPLATE_CONF instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CLUB_TEAM_TEMPLATE_CONF instance
     */
    public static create(properties?: ICLUB_TEAM_TEMPLATE_CONF): CLUB_TEAM_TEMPLATE_CONF;

    /**
     * Encodes the specified CLUB_TEAM_TEMPLATE_CONF message. Does not implicitly {@link CLUB_TEAM_TEMPLATE_CONF.verify|verify} messages.
     * @param message CLUB_TEAM_TEMPLATE_CONF message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICLUB_TEAM_TEMPLATE_CONF, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CLUB_TEAM_TEMPLATE_CONF message, length delimited. Does not implicitly {@link CLUB_TEAM_TEMPLATE_CONF.verify|verify} messages.
     * @param message CLUB_TEAM_TEMPLATE_CONF message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICLUB_TEAM_TEMPLATE_CONF, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CLUB_TEAM_TEMPLATE_CONF message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CLUB_TEAM_TEMPLATE_CONF
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CLUB_TEAM_TEMPLATE_CONF;

    /**
     * Decodes a CLUB_TEAM_TEMPLATE_CONF message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CLUB_TEAM_TEMPLATE_CONF
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CLUB_TEAM_TEMPLATE_CONF;

    /**
     * Verifies a CLUB_TEAM_TEMPLATE_CONF message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CLUB_TEAM_TEMPLATE_CONF message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CLUB_TEAM_TEMPLATE_CONF
     */
    public static fromObject(object: { [k: string]: any }): CLUB_TEAM_TEMPLATE_CONF;

    /**
     * Creates a plain object from a CLUB_TEAM_TEMPLATE_CONF message. Also converts values to other types if specified.
     * @param message CLUB_TEAM_TEMPLATE_CONF
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CLUB_TEAM_TEMPLATE_CONF, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CLUB_TEAM_TEMPLATE_CONF to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** NOTICE_WHERE enum. */
export enum NOTICE_WHERE {
    NW_NIL = 0,
    GLOBAL = 1,
    HALL = 2,
    CLUB = 4,
    GAME = 8
}

/** NOTICE_TYPE enum. */
export enum NOTICE_TYPE {
    NT_NIL = 0,
    NT_MARQUEE = 1,
    NT_PROMPT = 2
}

/** Properties of a NOTICE. */
export interface INOTICE {

    /** NOTICE id */
    id?: (string|null);

    /** NOTICE type */
    type?: (number|null);

    /** NOTICE where */
    where?: (number|null);

    /** NOTICE content */
    content?: (string|null);

    /** NOTICE clubId */
    clubId?: (number|null);

    /** NOTICE startTime */
    startTime?: (number|Long|null);

    /** NOTICE endTime */
    endTime?: (number|Long|null);

    /** NOTICE playCount */
    playCount?: (number|null);

    /** NOTICE interval */
    interval?: (number|null);
}

/** Represents a NOTICE. */
export class NOTICE implements INOTICE {

    /**
     * Constructs a new NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: INOTICE);

    /** NOTICE id. */
    public id: string;

    /** NOTICE type. */
    public type: number;

    /** NOTICE where. */
    public where: number;

    /** NOTICE content. */
    public content: string;

    /** NOTICE clubId. */
    public clubId: number;

    /** NOTICE startTime. */
    public startTime: (number|Long);

    /** NOTICE endTime. */
    public endTime: (number|Long);

    /** NOTICE playCount. */
    public playCount: number;

    /** NOTICE interval. */
    public interval: number;

    /**
     * Creates a new NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns NOTICE instance
     */
    public static create(properties?: INOTICE): NOTICE;

    /**
     * Encodes the specified NOTICE message. Does not implicitly {@link NOTICE.verify|verify} messages.
     * @param message NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: INOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified NOTICE message, length delimited. Does not implicitly {@link NOTICE.verify|verify} messages.
     * @param message NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: INOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): NOTICE;

    /**
     * Decodes a NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): NOTICE;

    /**
     * Verifies a NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns NOTICE
     */
    public static fromObject(object: { [k: string]: any }): NOTICE;

    /**
     * Creates a plain object from a NOTICE message. Also converts values to other types if specified.
     * @param message NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ROUND_INFO. */
export interface IROUND_INFO {

    /** ROUND_INFO roundId */
    roundId?: (string|null);
}

/** Represents a ROUND_INFO. */
export class ROUND_INFO implements IROUND_INFO {

    /**
     * Constructs a new ROUND_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IROUND_INFO);

    /** ROUND_INFO roundId. */
    public roundId: string;

    /**
     * Creates a new ROUND_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ROUND_INFO instance
     */
    public static create(properties?: IROUND_INFO): ROUND_INFO;

    /**
     * Encodes the specified ROUND_INFO message. Does not implicitly {@link ROUND_INFO.verify|verify} messages.
     * @param message ROUND_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IROUND_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ROUND_INFO message, length delimited. Does not implicitly {@link ROUND_INFO.verify|verify} messages.
     * @param message ROUND_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IROUND_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ROUND_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ROUND_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ROUND_INFO;

    /**
     * Decodes a ROUND_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ROUND_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ROUND_INFO;

    /**
     * Verifies a ROUND_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ROUND_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ROUND_INFO
     */
    public static fromObject(object: { [k: string]: any }): ROUND_INFO;

    /**
     * Creates a plain object from a ROUND_INFO message. Also converts values to other types if specified.
     * @param message ROUND_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ROUND_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ROUND_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** EXT_ROUND_STATUS enum. */
export enum EXT_ROUND_STATUS {
    ERS_NONE = 0,
    ERS_FREE = 1,
    ERS_GAMING = 2,
    ERS_END = 3
}

/** IMPORT_ERROR_CODE enum. */
export enum IMPORT_ERROR_CODE {
    IEC_NIL = 0,
    IEC_IN_GAME = 1,
    IEC_IN_CLUB = 2,
    IEC_ROLE = 4,
    IEC_PARTNER = 8
}

/** REG_ACCOUNT_RESULT enum. */
export enum REG_ACCOUNT_RESULT {
    REG_ACCOUNT_RESULT_SUCCESS = 0,
    REG_ACCOUNT_RESULT_FAILED = 1
}

/** LOGIN_RESULT enum. */
export enum LOGIN_RESULT {
    LOGIN_RESULT_SUCCESS = 0,
    LOGIN_RESULT_REPEAT_LOGIN = 1,
    LOGIN_RESULT_DB_ERR = 2,
    LOGIN_RESULT_ACCOUNT_PASSWORD_ERR = 3,
    LOGIN_RESULT_NO_DEFAULT_LOBBY = 4,
    LOGIN_RESULT_SMS_CLOSED = 5,
    LOGIN_RESULT_SMS_REPEATED = 6,
    LOGIN_RESULT_RESET_ACCOUNT_FAILED = 7,
    LOGIN_RESULT_SMS_FAILED = 8,
    LOGIN_RESULT_ALIYUN_FAILED = 9,
    LOGIN_RESULT_SET_PASSWORD_FAILED = 10,
    LOGIN_RESULT_SET_NICKNAME_FAILED = 11,
    LOGIN_RESULT_SET_PASSWORD_GUEST = 12,
    LOGIN_RESULT_SAME_PASSWORD = 13,
    LOGIN_RESULT_LOGIN_VALIDATEBOX_FAIL = 14,
    LOGIN_RESULT_ACCOUNT_DISABLED = 15,
    LOGIN_RESULT_RESET_ACCOUNT_DUP_ACC = 16,
    LOGIN_RESULT_RESET_ACCOUNT_DUP_NICKNAME = 17,
    LOGIN_RESULT_SET_NICKNAME_DUP_NICKNAME = 18,
    LOGIN_RESULT_SET_ACCOUNT_OR_PASSWORD_EMPTY = 19,
    LOGIN_RESULT_PASSWORD_SIZE_LIMIT = 20,
    LOGIN_RESULT_PASSWORD_CHAR_LIMIT = 21,
    LOGIN_RESULT_ACCOUNT_SIZE_LIMIT = 22,
    LOGIN_RESULT_ACCOUNT_CHAR_LIMIT = 23,
    LOGIN_RESULT_SMS_ERR = 24,
    LOGIN_RESULT_NICKNAME_EMPTY = 25,
    LOGIN_RESULT_NICKNAME_LIMIT = 26,
    LOGIN_RESULT_ACCOUNT_EMPTY = 27,
    LOGIN_RESULT_TEL_LEN_ERR = 28,
    LOGIN_RESULT_TEL_ERR = 29,
    LOGIN_RESULT_TEL_USED = 30,
    LOGIN_RESULT_REDIS_ERROR = 31,
    LOGIN_RESULT_MAINTAIN = 32,
    LOGIN_RESULT_FREQUENTLY_LOGIN = 33,
    LOGIN_RESULT_UNCOMPLETED_LOGIN = 34,
    LOGIN_RESULT_LOGIN_QUQUE = 35,
    LOGIN_RESULT_CREATE_MAX = 36,
    LOGIN_RESULT_AGENT_CANNOT_IN_GAME = 37,
    LOGIN_RESULT_INPUT_OLD_PASSWORD_ERROR = 38,
    LOGIN_RESULT_IMEI_HAS_ACCOUNT = 39,
    LOGIN_RESULT_IP_CREATE_ACCOUNT_LIMIT = 40,
    LOGIN_RESULT_IP_CONTROL = 41,
    LOGIN_RESULT_POTATO_CHECK_ERROR = 42,
    LOGIN_RESULT_NEED_INVITE_CODE = 43,
    LOGIN_RESULT_AUTH_CHECK_ERROR = 44,
    LOGIN_RESULT_ACCOUNT_NOT_EXISTS = 45,
    LOGIN_RESULT_ACCOUNT_IP_LIMIT = 46,
    LOGIN_RESULT_ACCOUNT_IMEI_LIMIT = 47,
    LOGIN_RESULT_ACCOUNT_PASSWOLD_ERRPR_LIMIT = 48,
    LOGIN_RESULT_OLD_PACKAGE_VERSION = 49
}

/** BANK_OPT_RESULT enum. */
export enum BANK_OPT_RESULT {
    BANK_OPT_RESULT_SUCCESS = 0,
    BANK_OPT_RESULT_PASSWORD_HAS_BEEN_SET = 1,
    BANK_OPT_RESULT_PASSWORD_IS_NOT_SET = 2,
    BANK_OPT_RESULT_OLD_PASSWORD_ERR = 3,
    BANK_OPT_RESULT_ALREADY_LOGGED = 4,
    BANK_OPT_RESULT_LOGIN_FAILED = 5,
    BANK_OPT_RESULT_NOT_LOGIN = 6,
    BANK_OPT_RESULT_MONEY_ERR = 7,
    BANK_OPT_RESULT_TRANSFER_ACCOUNT = 8,
    BANK_OPT_RESULT_FORBID_IN_GAMEING = 9,
    BANK_OPT_RESULT_BANK_MAINTAIN = 10
}

/** BANK_STATEMENT_OPT_TYPE enum. */
export enum BANK_STATEMENT_OPT_TYPE {
    BANK_STATEMENT_OPT_TYPE_DEPOSIT = 0,
    BANK_STATEMENT_OPT_TYPE_DRAW = 1,
    BANK_STATEMENT_OPT_TYPE_TRANSFER_OUT = 2,
    BANK_STATEMENT_OPT_TYPE_TRANSFER_IN = 3,
    BANK_STATEMENT_OPT_TYPE_REWARD_LOGIN = 4,
    BANK_STATEMENT_OPT_TYPE_REWARD_ONLINE = 5,
    BANK_STATEMENT_OPT_TYPE_RELIEF_PAYMENT = 6
}

/** ITEM_OPERATE_RESULT enum. */
export enum ITEM_OPERATE_RESULT {
    ITEM_OPERATE_RESULT_SUCCESS = 0,
    ITEM_OPERATE_RESULT_ITEMID_ERR = 1,
    ITEM_OPERATE_RESULT_NUM_ERR = 2,
    ITEM_OPERATE_RESULT_MONEY_NOT_ENOUGH = 3,
    ITEM_OPERATE_RESULT_DEL_FAILED = 4,
    ITEM_OPERATE_RESULT_USE_FAILED = 5
}

/** MONEY_TYPE enum. */
export enum MONEY_TYPE {
    MONEY_TYPE_GOLD = 0,
    MONEY_TYPE_ROOM_CARD = 1,
    MONEY_TYPE_DIAMOND = 2
}

/** ITEM_PRICE_TYPE enum. */
export enum ITEM_PRICE_TYPE {
    ITEM_PRICE_TYPE_GOLD = 0,
    ITEM_PRICE_TYPE_ROOM_CARD = 1,
    ITEM_PRICE_TYPE_DIAMOND = 2
}

/** MONEY_CONST_ID enum. */
export enum MONEY_CONST_ID {
    ROOM_CARD = 0
}

/** ITEM_TYPE enum. */
export enum ITEM_TYPE {
    ITEM_TYPE_MONEY = 0,
    ITEM_TYPE_BOX = 1
}

/** RECEIVE_REWARD_RESULT enum. */
export enum RECEIVE_REWARD_RESULT {
    RECEIVE_REWARD_RESULT_SUCCESS = 0,
    RECEIVE_REWARD_RESULT_ERR_MONEY = 1,
    RECEIVE_REWARD_RESULT_ERR_REPEATED = 2,
    RECEIVE_REWARD_RESULT_ERR_FIND_LOGIN_AWARD = 3,
    RECEIVE_REWARD_RESULT_ERR_FIND_ONLINE_AWARD = 4,
    RECEIVE_REWARD_RESULT_ERR_ONLINE_AWARD_CD = 5,
    RECEIVE_REWARD_RESULT_ERR_COUNT_LIMIT = 6,
    RECEIVE_REWARD_RESULT_ERR_MONEY_LIMIT = 7
}

/** MAIL_OPT_RESULT enum. */
export enum MAIL_OPT_RESULT {
    MAIL_OPT_RESULT_SUCCESS = 0,
    MAIL_OPT_RESULT_FIND_FAILED = 1,
    MAIL_OPT_RESULT_NO_RECEIVER = 2,
    MAIL_OPT_RESULT_EXPIRATION = 3,
    MAIL_OPT_RESULT_NO_ATTACHMENT = 4,
    MAIL_OPT_RESULT_HAS_ATTACHMENT = 5
}

/** RANK_TYPE enum. */
export enum RANK_TYPE {
    RANK_TYPE_NIL = 0,
    RANK_TYPE_FORTUNE = 1,
    RANK_TYPE_DAILY_EARNINGS = 2,
    RANK_TYPE_WEEKLY_EARNINGS = 3,
    RANK_TYPE_MONTHLY_EARNINGS = 4
}

/** GAME_SERVER_RESULT enum. */
export enum GAME_SERVER_RESULT {
    GAME_SERVER_RESULT_SUCCESS = 0,
    GAME_SERVER_RESULT_IN_GAME = 51,
    GAME_SERVER_RESULT_IN_ROOM = 52,
    GAME_SERVER_RESULT_OUT_ROOM = 53,
    GAME_SERVER_RESULT_NOT_FIND_ROOM = 54,
    GAME_SERVER_RESULT_NOT_FIND_TABLE = 55,
    GAME_SERVER_RESULT_NOT_FIND_CHAIR = 56,
    GAME_SERVER_RESULT_PLAYER_ON_CHAIR = 57,
    GAME_SERVER_RESULT_CHAIR_HAVE_PLAYER = 58,
    GAME_SERVER_RESULT_PLAYER_NO_CHAIR = 59,
    GAME_SERVER_RESULT_OHTER_ON_CHAIR = 60,
    GAME_SERVER_RESULT_NO_GAME_SERVER = 61,
    GAME_SERVER_RESULT_ROOM_LIMIT = 62,
    GAME_SERVER_RESULT_FREEZEACCOUNT = 63,
    GAME_SERVER_RESULT_MAINTAIN = 64,
    GAME_SERVER_RESULT_CREATE_PRIVATE_ROOM_CHAIR = 65,
    GAME_SERVER_RESULT_CREATE_PRIVATE_ROOM_ALL = 66,
    GAME_SERVER_RESULT_CREATE_PRIVATE_ROOM_BANK = 67,
    GAME_SERVER_RESULT_CREATE_PRIVATE_ROOM_MONEY = 68,
    GAME_SERVER_RESULT_JOIN_PRIVATE_ROOM_ALL = 69,
    GAME_SERVER_RESULT_JOIN_PRIVATE_ROOM_BANK = 70,
    GAME_SERVER_RESULT_JOIN_PRIVATE_ROOM_MONEY = 71,
    GAME_SERVER_RESULT_PRIVATE_ROOM_NOT_FOUND = 72,
    GAME_SERVER_RESULT_PRIVATE_ROOM_NO_FREE_CHAIR = 73,
    GAME_SERVER_RESULT_RECONNECT_NOT_ONLINE = 74,
    GAME_SERVER_RESULT_WAIT_LATER = 75
}

/** LOG_MONEY_OPT_TYPE enum. */
export enum LOG_MONEY_OPT_TYPE {
    LOG_MONEY_OPT_TYPE_NIL = 0,
    LOG_MONEY_OPT_TYPE_BUY_ITEM = 1,
    LOG_MONEY_OPT_TYPE_BOX = 2,
    LOG_MONEY_OPT_TYPE_REWARD_LOGIN = 3,
    LOG_MONEY_OPT_TYPE_REWARD_ONLINE = 4,
    LOG_MONEY_OPT_TYPE_RELIEF_PAYMENT = 5,
    LOG_MONEY_OPT_TYPE_LAND = 6,
    LOG_MONEY_OPT_TYPE_ZHAJINHUA = 7,
    LOG_MONEY_OPT_TYPE_SHOWHAND = 8,
    LOG_MONEY_OPT_TYPE_OX = 9,
    LOG_MONEY_OPT_TYPE_FURIT = 10,
    LOG_MONEY_OPT_TYPE_BENZ_BMW = 11,
    LOG_MONEY_OPT_TYPE_TEXAS = 12,
    LOG_MONEY_OPT_TYPE_BUYU = 13,
    LOG_MONEY_OPT_TYPE_SLOTMA = 14,
    LOG_MONEY_OPT_TYPE_RESET_ACCOUNT = 15,
    LOG_MONEY_OPT_TYPE_CASH_MONEY = 16,
    LOG_MONEY_OPT_TYPE_RECHARGE_MONEY = 17,
    LOG_MONEY_OPT_TYPE_GM = 18,
    LOG_MONEY_OPT_TYPE_INVITE = 19,
    LOG_MONEY_OPT_TYPE_CASH_MONEY_FALSE = 20,
    LOG_MONEY_OPT_TYPE_CREATE_PRIVATE_ROOM = 21,
    LOG_MONEY_OPT_TYPE_BANKER_OX = 22,
    LOG_MONEY_OPT_TYPE_CLASSICS_OX = 23,
    LOG_MONEY_OPT_TYPE_THIRTEEN_WATER = 24,
    LOG_MONEY_OPT_TYPE_AGENTTOAGENT_MONEY = 25,
    LOG_MONEY_OPT_TYPE_AGENTTOPLAYER_MONEY = 26,
    LOG_MONEY_OPT_TYPE_PLAYERTOAGENT_MONEY = 27,
    LOG_MONEY_OPT_TYPE_AGENTBANKTOPLAYER_MONEY = 28,
    LOG_MONEY_OPT_TYPE_BANKDRAW = 29,
    LOG_MONEY_OPT_TYPE_BANKDEPOSIT = 30,
    LOG_MONEY_OPT_TYPE_BANKDRAWBACK = 31,
    LOG_MONEY_OPT_TYPE_BANKTRANSFER = 32,
    LOG_MONEY_OPT_TYPE_REDBLACK = 33,
    LOG_MONEY_OPT_TYPE_SANGONG = 34,
    LOG_MONEY_OPT_TYPE_BIGTWO = 35,
    LOG_MONEY_OPT_TYPE_BACCARAT = 36,
    LOG_MONEY_OPT_TYPE_SAVE_BACK = 37,
    LOG_MONEY_OPT_TYPE_TWENTY_ONE = 38,
    LOG_MONEY_OPT_TYPE_SHAIBAO = 39,
    LOG_MONEY_OPT_TYPE_FIVESTAR = 40,
    LOG_MONEY_OPT_TYPE_TORADORA = 41,
    LOG_MONEY_OPT_TYPE_REDBLACK_PRIZEPOOL = 42,
    LOG_MONEY_OPT_TYPE_BONUS_HONGBAO = 43,
    LOG_MONEY_OPT_TYPE_SHAIBAO_PRIZEPOOL = 44,
    LOG_MONEY_OPT_TYPE_SHELONGMEN = 45,
    LOG_MONEY_OPT_TYPE_PROXY_CASH_MONEY = 46,
    LOG_MONEY_OPT_TYPE_MAAJAN_MENHU = 47,
    LOG_MONEY_OPT_TYPE_CASH_MONEY_IN_CLUB = 48,
    LOG_MONEY_OPT_TYPE_RECHAGE_MONEY_IN_CLUB = 49,
    LOG_MONEY_OPT_TYPE_ROOM_FEE = 50,
    LOG_MONEY_OPT_TYPE_CLUB_COMMISSION = 51,
    LOG_MONEY_OPT_TYPE_GAME_TAX = 52,
    LOG_MONEY_OPT_TYPE_INIT_GIFT = 53,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN = 54,
    LOG_MONEY_OPT_TYPE_PDK = 55,
    LOG_MONEY_OPT_TYPE_MAAJAN_LIANGFANG = 56,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN_ER_YI = 57,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN_ER_ER = 58,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN_ER_SAN = 59,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN_SAN_ER = 60,
    LOG_MONEY_OPT_TYPE_MAAJAN_XUEZHAN_SI_ER = 61,
    LOG_MONEY_OPT_TYPE_PDK_ER_REN = 62,
    LOG_MONEY_OPT_TYPE_PDK_SC = 63,
    LOG_MONEY_OPT_TYPE_AUTO_CLUB_COMMISSION = 64,
    LOG_MONEY_OPT_TYPE_MAAJAN_YAOJI = 65,
    LOG_MONEY_OPT_TYPE_MAAJAN_HONGZHONG = 66,
    LOG_MONEY_OPT_TYPE_OX_DIANZI = 67,
    LOG_MONEY_OPT_TYPE_CHANGPAI_ZIGONG = 68,
    LOG_MONEY_OPT_TYPE_MAAJAN_ZIGONG = 69
}

/** GAME_READY_MODE enum. */
export enum GAME_READY_MODE {
    GAME_READY_MODE_NIL = 0,
    GAME_READY_MODE_NONE = 1,
    GAME_READY_MODE_ALL = 2,
    GAME_READY_MODE_PART = 3
}

/** STANDUP_REASON enum. */
export enum STANDUP_REASON {
    STANDUP_REASON_NORMAL = 0,
    STANDUP_REASON_DISMISS = 1,
    STANDUP_REASON_OFFLINE = 2,
    STANDUP_REASON_FORCE = 3,
    STANDUP_REASON_ADMIN_DISMISS_FORCE = 4,
    STANDUP_REASON_DISMISS_REQUEST = 5,
    STANDUP_REASON_DISMISS_TRUSTEE = 6,
    STANDUP_REASON_BANKRUPCY = 7,
    STANDUP_REASON_TABLE_TIMEOUT = 8,
    STANDUP_REASON_NO_READY_TIMEOUT = 9,
    STANDUP_REASON_MAINTAIN = 10,
    STANDUP_REASON_ROUND_END = 11,
    STANDUP_REASON_BLOCK_GAMING = 12,
    STANDUP_REASON_CLUB_CLOSE = 13,
    STANDUP_REASON_DELAY_KICKOUT_TIMEOUT = 14,
    STANDUP_REASON_LESS_ROOM_FEE = 15
}

/** DISMISS_REASON enum. */
export enum DISMISS_REASON {
    DISMISS_REASON_NORMAL = 0,
    DISMISS_REASON_REQUEST = 1,
    DISMISS_REASON_ADMIN_FORCE = 2,
    DISMISS_REASON_BANKRUPCY = 3,
    DISMISS_REASON_TRUSTEE_AUTO = 4,
    DISMISS_REASON_TIMEOUT = 5,
    DISMISS_REASON_MAINTAIN = 6,
    DISMISS_REASON_ROUND_END = 7,
    DISMISS_REASON_LESS_ROOM_FEE = 8
}

/** ANTI_CHEAT_TYPE enum. */
export enum ANTI_CHEAT_TYPE {
    ANTI_CHEAT_NORMAL = 0,
    ANTI_CHEAT_DESKMATE = 1,
    ANTI_CHEAT_PINGHU = 2,
    ANTI_CHEAT_PENGGANG = 3
}

/** CLUB_ACTION_TYPE enum. */
export enum CLUB_ACTION_TYPE {
    CLUB_CTION_NIL = 0,
    CLUB_ACTION_JOIN = 1,
    CLUB_ACTION_EXIT = 2,
    CLUB_ACTION_CREATE_PARTNER = 3,
    CLUB_ACTION_DISMISS_PARTNER = 4
}

/** CLUB_STATUS enum. */
export enum CLUB_STATUS {
    CLUB_STATUS_NORMAL = 0,
    CLUB_STATUS_CLOSE = 1,
    CLUB_STATUS_BLOCK = 2
}

/** REDDOT_TYPE enum. */
export enum REDDOT_TYPE {
    RT_NIL = 0,
    RT_MAIL = 1001,
    RT_REQUEST_CLUB = 1011,
    RT_REQUEST_PLAYER = 1012
}

/** TABLE_SYNC_OPCODE enum. */
export enum TABLE_SYNC_OPCODE {
    TSO_NIL = 0,
    TSO_CREATE = 1,
    TSO_DELETE = 2,
    TSO_JOIN = 3,
    TSO_LEAVE = 4,
    TSO_STATUS_CHANGE = 5,
    TSO_SEAT_CHANGE = 6
}

/** ERROR_CODE enum. */
export enum ERROR_CODE {
    ERROR_NONE = 0,
    ERROR_INTERNAL_UNKOWN = 79,
    ERROR_CLUB_OVERFLOW_MAX = 80,
    ERROR_CLUB_NOT_FOUND = 82,
    ERROR_NOT_MEMBER = 83,
    ERROR_TABLE_NOT_EXISTS = 100,
    ERROR_TABLE_STATUS_GAMING = 102,
    ERROR_OPERATION_EXPIRE = 103,
    ERROR_REQUEST_REPEATED = 105,
    ERROR_LESS_GOLD = 106,
    ERROR_LESS_ROOM_CARD = 107,
    ERROR_OPERATION_REPEATED = 108,
    ERROR_TEMPLATE_NOT_EXISTS = 109,
    ERROR_PLAYER_IS_LOCKED = 224,
    ERROR_GAME_MAINTAIN = 225,
    ERROR_PLAYER_NOT_EXIST = 230,
    ERROR_AREADY_MEMBER = 232,
    ERROR_PLAYER_NOT_IN_GAME = 233,
    ERROR_PLAYER_IN_GAME = 234,
    ERROR_MORE_MAX_LIMIT = 237,
    ERROR_LESS_MIN_LIMIT = 238,
    ERROR_OPERATION_INVALID = 240,
    ERROR_PARAMETER_ERROR = 251,
    ERROR_TABLE_TEMPLATE_NOT_FOUND = 252,
    ERROR_IP_TREAT = 253,
    ERROR_GPS_TREAT = 254,
    ERROR_CLUB_TABLE_JOIN_BLOCK = 255,
    ERROR_CLUB_TEAM_IS_LOCKED = 256,
    ERROR_BLOCK_GAMING = 257,
    ERROR_CLUB_BLOCK = 258,
    ERROR_CLUB_CLOSE = 259,
    ERROR_BLOCK_JOIN_WHEN_GAMING = 260,
    ERROR_LESS_READY_PLAYER = 261,
    ERROR_CLUB_TEAM_CLOSE = 262,
    ERROR_CLUB_TEAM_NOT_CLOSED = 263,
    ERROR_BANKRUPTCY_WARNING = 500,
    ERROR_PLAYER_NO_RIGHT = 502,
    ERROR_PLAYER_NOT_AGENCY = 503,
    ERROR_BIND_ALREADY = 504,
    ERROR_LOGIN_NO_BINDING = 505,
    ERROR_REQUEST_SMS_FAILED = 506,
    ERROR_CLUB_SIZE_LIMIT = 507
}

/** ALTER_CODE enum. */
export enum ALTER_CODE {
    AC_NONE = 0,
    AC_UPGRADE = 1,
    AC_NEW_VERSION = 2
}

/** CP_HU_TYPE enum. */
export enum CP_HU_TYPE {
    WEI_HU = 0,
    PING_HU = 1,
    TIAN_HU = 2,
    DI_HU = 3,
    TUOTUO_HONG = 4,
    BABA_HEI = 5,
    HEI_LONG = 6,
    SI_ZHANG = 7,
    CHONGFAN_PENG = 8,
    CHONGFAN_TOU = 9,
    CHONGFAN_CHI_3 = 10,
    TUO_24 = 11
}

/** CP_ACTION enum. */
export enum CP_ACTION {
    ACTION_NIL = 0,
    ACTION_TRUSTEE = 1,
    ACTION_PENG = 2,
    ACTION_TOU = 4,
    ACTION_BA_GANG = 16,
    ACTION_HU = 32,
    ACTION_PASS = 64,
    ACTION_CHI = 128,
    ACTION_TING = 1024,
    ACTION_JIA_BEI = 2048,
    ACTION_CHU_PAI = 4096,
    ACTION_ZI_MO = 8192,
    ACTION_MO_PAI = 32768,
    ACTION_TUO = 131072,
    ACTION_QIANG_GANG_HU = 2097152,
    ACTION_FAN_PAI = 6291456,
    ACTION_ROUND = 8388608
}

/** CP_SECTION_TYPE enum. */
export enum CP_SECTION_TYPE {
    Gang = 0,
    Peng = 1,
    Tou = 2,
    Chi = 3,
    Chi3 = 4,
    Sizhang = 5,
    Tuo24 = 6
}

/** CP_FSM_STATE enum. */
export enum CP_FSM_STATE {
    PER_BEGIN = 0,
    XI_PAI = 1,
    WAIT_MO_PAI = 2,
    WAIT_CHU_PAI = 3,
    WAIT_ACTION_AFTER_CHU_PAI = 4,
    WAIT_ACTION_AFTER_FIRSTFIRST_TOU_PAI = 5,
    WAIT_ACTION_AFTER_TIAN_HU = 7,
    WAIT_ACTION_AFTER_JIN_PAI = 8,
    WAIT_ACTION_AFTER_FAN_PAI = 9,
    WAIT_QIANG_GANG_HU = 10,
    GAME_BALANCE = 11,
    GAME_CLOSE = 12,
    HUAN_PAI = 13,
    TOU_PAI = 14,
    FAN_PAI = 15,
    DING_QUE = 16,
    GAME_IDLE_HEAD = 17,
    FAST_START_VOTE = 18,
    WAIT_BAO_TING = 19,
    FINAL_END = 4096
}

/** CP_HUAN_PAI_ORDER enum. */
export enum CP_HUAN_PAI_ORDER {
    CLOCK_WISE = 0,
    COUNTER_CLOCK_WISE = 1,
    DIAGONAL = 2
}

/** Properties of a Changpai_Tiles. */
export interface IChangpai_Tiles {

    /** Changpai_Tiles tiles */
    tiles?: (number[]|null);
}

/** Represents a Changpai_Tiles. */
export class Changpai_Tiles implements IChangpai_Tiles {

    /**
     * Constructs a new Changpai_Tiles.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Tiles);

    /** Changpai_Tiles tiles. */
    public tiles: number[];

    /**
     * Creates a new Changpai_Tiles instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Tiles instance
     */
    public static create(properties?: IChangpai_Tiles): Changpai_Tiles;

    /**
     * Encodes the specified Changpai_Tiles message. Does not implicitly {@link Changpai_Tiles.verify|verify} messages.
     * @param message Changpai_Tiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Tiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Tiles message, length delimited. Does not implicitly {@link Changpai_Tiles.verify|verify} messages.
     * @param message Changpai_Tiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Tiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Tiles message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Tiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Tiles;

    /**
     * Decodes a Changpai_Tiles message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Tiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Tiles;

    /**
     * Verifies a Changpai_Tiles message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Tiles message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Tiles
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Tiles;

    /**
     * Creates a plain object from a Changpai_Tiles message. Also converts values to other types if specified.
     * @param message Changpai_Tiles
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Tiles, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Tiles to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Changpai_MingPai. */
export interface IChangpai_MingPai {

    /** Changpai_MingPai tile */
    tile?: (number|null);

    /** Changpai_MingPai othertile */
    othertile?: (number|null);

    /** Changpai_MingPai type */
    type?: (number|null);

    /** Changpai_MingPai substituteNum */
    substituteNum?: (number|null);

    /** Changpai_MingPai baopai */
    baopai?: (number|null);
}

/** Represents a Changpai_MingPai. */
export class Changpai_MingPai implements IChangpai_MingPai {

    /**
     * Constructs a new Changpai_MingPai.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_MingPai);

    /** Changpai_MingPai tile. */
    public tile: number;

    /** Changpai_MingPai othertile. */
    public othertile: number;

    /** Changpai_MingPai type. */
    public type: number;

    /** Changpai_MingPai substituteNum. */
    public substituteNum: number;

    /** Changpai_MingPai baopai. */
    public baopai: number;

    /**
     * Creates a new Changpai_MingPai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_MingPai instance
     */
    public static create(properties?: IChangpai_MingPai): Changpai_MingPai;

    /**
     * Encodes the specified Changpai_MingPai message. Does not implicitly {@link Changpai_MingPai.verify|verify} messages.
     * @param message Changpai_MingPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_MingPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_MingPai message, length delimited. Does not implicitly {@link Changpai_MingPai.verify|verify} messages.
     * @param message Changpai_MingPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_MingPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_MingPai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_MingPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_MingPai;

    /**
     * Decodes a Changpai_MingPai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_MingPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_MingPai;

    /**
     * Verifies a Changpai_MingPai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_MingPai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_MingPai
     */
    public static fromObject(object: { [k: string]: any }): Changpai_MingPai;

    /**
     * Creates a plain object from a Changpai_MingPai message. Also converts values to other types if specified.
     * @param message Changpai_MingPai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_MingPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_MingPai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Changpai_Player_Info. */
export interface IChangpai_Player_Info {

    /** Changpai_Player_Info pbMingPai */
    pbMingPai?: (IChangpai_MingPai[]|null);

    /** Changpai_Player_Info shouPai */
    shouPai?: (number[]|null);

    /** Changpai_Player_Info deskPai */
    deskPai?: (number[]|null);

    /** Changpai_Player_Info chairId */
    chairId?: (number|null);

    /** Changpai_Player_Info isHu */
    isHu?: (boolean|null);

    /** Changpai_Player_Info huFan */
    huFan?: (number|null);

    /** Changpai_Player_Info tuos */
    tuos?: (number|null);

    /** Changpai_Player_Info jiabei */
    jiabei?: (number|null);

    /** Changpai_Player_Info describe */
    describe?: (string|null);

    /** Changpai_Player_Info winMoney */
    winMoney?: (number|null);

    /** Changpai_Player_Info taxes */
    taxes?: (number|null);

    /** Changpai_Player_Info finishTask */
    finishTask?: (boolean|null);

    /** Changpai_Player_Info isTing */
    isTing?: (boolean|null);

    /** Changpai_Player_Info totalScore */
    totalScore?: (number|null);

    /** Changpai_Player_Info roundScore */
    roundScore?: (number|null);

    /** Changpai_Player_Info moPai */
    moPai?: (number|null);

    /** Changpai_Player_Info isChipiao */
    isChipiao?: (boolean|null);

    /** Changpai_Player_Info isDianpao */
    isDianpao?: (boolean|null);

    /** Changpai_Player_Info isXiaohu */
    isXiaohu?: (boolean|null);

    /** Changpai_Player_Info unusablecard */
    unusablecard?: (number[]|null);

    /** Changpai_Player_Info isBaopai */
    isBaopai?: (boolean|null);
}

/** Represents a Changpai_Player_Info. */
export class Changpai_Player_Info implements IChangpai_Player_Info {

    /**
     * Constructs a new Changpai_Player_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Player_Info);

    /** Changpai_Player_Info pbMingPai. */
    public pbMingPai: IChangpai_MingPai[];

    /** Changpai_Player_Info shouPai. */
    public shouPai: number[];

    /** Changpai_Player_Info deskPai. */
    public deskPai: number[];

    /** Changpai_Player_Info chairId. */
    public chairId: number;

    /** Changpai_Player_Info isHu. */
    public isHu: boolean;

    /** Changpai_Player_Info huFan. */
    public huFan: number;

    /** Changpai_Player_Info tuos. */
    public tuos: number;

    /** Changpai_Player_Info jiabei. */
    public jiabei: number;

    /** Changpai_Player_Info describe. */
    public describe: string;

    /** Changpai_Player_Info winMoney. */
    public winMoney: number;

    /** Changpai_Player_Info taxes. */
    public taxes: number;

    /** Changpai_Player_Info finishTask. */
    public finishTask: boolean;

    /** Changpai_Player_Info isTing. */
    public isTing: boolean;

    /** Changpai_Player_Info totalScore. */
    public totalScore: number;

    /** Changpai_Player_Info roundScore. */
    public roundScore: number;

    /** Changpai_Player_Info moPai. */
    public moPai: number;

    /** Changpai_Player_Info isChipiao. */
    public isChipiao: boolean;

    /** Changpai_Player_Info isDianpao. */
    public isDianpao: boolean;

    /** Changpai_Player_Info isXiaohu. */
    public isXiaohu: boolean;

    /** Changpai_Player_Info unusablecard. */
    public unusablecard: number[];

    /** Changpai_Player_Info isBaopai. */
    public isBaopai: boolean;

    /**
     * Creates a new Changpai_Player_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Player_Info instance
     */
    public static create(properties?: IChangpai_Player_Info): Changpai_Player_Info;

    /**
     * Encodes the specified Changpai_Player_Info message. Does not implicitly {@link Changpai_Player_Info.verify|verify} messages.
     * @param message Changpai_Player_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Player_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Player_Info message, length delimited. Does not implicitly {@link Changpai_Player_Info.verify|verify} messages.
     * @param message Changpai_Player_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Player_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Player_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Player_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Player_Info;

    /**
     * Decodes a Changpai_Player_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Player_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Player_Info;

    /**
     * Verifies a Changpai_Player_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Player_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Player_Info
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Player_Info;

    /**
     * Creates a plain object from a Changpai_Player_Info message. Also converts values to other types if specified.
     * @param message Changpai_Player_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Player_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Player_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Changpai_Reconnect_Data. */
export interface IChangpai_Reconnect_Data {

    /** Changpai_Reconnect_Data actLeftTime */
    actLeftTime?: (number|null);

    /** Changpai_Reconnect_Data lastChuPaiChair */
    lastChuPaiChair?: (number|null);

    /** Changpai_Reconnect_Data lastChuPai */
    lastChuPai?: (number|null);

    /** Changpai_Reconnect_Data totalScores */
    totalScores?: ({ [k: string]: string }|null);

    /** Changpai_Reconnect_Data totalMoney */
    totalMoney?: ({ [k: string]: string }|null);
}

/** Represents a Changpai_Reconnect_Data. */
export class Changpai_Reconnect_Data implements IChangpai_Reconnect_Data {

    /**
     * Constructs a new Changpai_Reconnect_Data.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Reconnect_Data);

    /** Changpai_Reconnect_Data actLeftTime. */
    public actLeftTime: number;

    /** Changpai_Reconnect_Data lastChuPaiChair. */
    public lastChuPaiChair: number;

    /** Changpai_Reconnect_Data lastChuPai. */
    public lastChuPai: number;

    /** Changpai_Reconnect_Data totalScores. */
    public totalScores: { [k: string]: string };

    /** Changpai_Reconnect_Data totalMoney. */
    public totalMoney: { [k: string]: string };

    /**
     * Creates a new Changpai_Reconnect_Data instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Reconnect_Data instance
     */
    public static create(properties?: IChangpai_Reconnect_Data): Changpai_Reconnect_Data;

    /**
     * Encodes the specified Changpai_Reconnect_Data message. Does not implicitly {@link Changpai_Reconnect_Data.verify|verify} messages.
     * @param message Changpai_Reconnect_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Reconnect_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Reconnect_Data message, length delimited. Does not implicitly {@link Changpai_Reconnect_Data.verify|verify} messages.
     * @param message Changpai_Reconnect_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Reconnect_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Reconnect_Data message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Reconnect_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Reconnect_Data;

    /**
     * Decodes a Changpai_Reconnect_Data message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Reconnect_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Reconnect_Data;

    /**
     * Verifies a Changpai_Reconnect_Data message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Reconnect_Data message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Reconnect_Data
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Reconnect_Data;

    /**
     * Creates a plain object from a Changpai_Reconnect_Data message. Also converts values to other types if specified.
     * @param message Changpai_Reconnect_Data
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Reconnect_Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Reconnect_Data to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Changpai_Task_Data. */
export interface IChangpai_Task_Data {

    /** Changpai_Task_Data taskType */
    taskType?: (number|null);

    /** Changpai_Task_Data taskTile */
    taskTile?: (number|null);

    /** Changpai_Task_Data taskScale */
    taskScale?: (number|null);
}

/** Represents a Changpai_Task_Data. */
export class Changpai_Task_Data implements IChangpai_Task_Data {

    /**
     * Constructs a new Changpai_Task_Data.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Task_Data);

    /** Changpai_Task_Data taskType. */
    public taskType: number;

    /** Changpai_Task_Data taskTile. */
    public taskTile: number;

    /** Changpai_Task_Data taskScale. */
    public taskScale: number;

    /**
     * Creates a new Changpai_Task_Data instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Task_Data instance
     */
    public static create(properties?: IChangpai_Task_Data): Changpai_Task_Data;

    /**
     * Encodes the specified Changpai_Task_Data message. Does not implicitly {@link Changpai_Task_Data.verify|verify} messages.
     * @param message Changpai_Task_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Task_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Task_Data message, length delimited. Does not implicitly {@link Changpai_Task_Data.verify|verify} messages.
     * @param message Changpai_Task_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Task_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Task_Data message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Task_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Task_Data;

    /**
     * Decodes a Changpai_Task_Data message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Task_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Task_Data;

    /**
     * Verifies a Changpai_Task_Data message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Task_Data message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Task_Data
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Task_Data;

    /**
     * Creates a plain object from a Changpai_Task_Data message. Also converts values to other types if specified.
     * @param message Changpai_Task_Data
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Task_Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Task_Data to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a User_card. */
export interface IUser_card {

    /** User_card chairId */
    chairId?: (number|null);

    /** User_card card */
    card?: (number|null);
}

/** Represents a User_card. */
export class User_card implements IUser_card {

    /**
     * Constructs a new User_card.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUser_card);

    /** User_card chairId. */
    public chairId: number;

    /** User_card card. */
    public card: number;

    /**
     * Creates a new User_card instance using the specified properties.
     * @param [properties] Properties to set
     * @returns User_card instance
     */
    public static create(properties?: IUser_card): User_card;

    /**
     * Encodes the specified User_card message. Does not implicitly {@link User_card.verify|verify} messages.
     * @param message User_card message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUser_card, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified User_card message, length delimited. Does not implicitly {@link User_card.verify|verify} messages.
     * @param message User_card message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUser_card, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a User_card message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns User_card
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): User_card;

    /**
     * Decodes a User_card message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns User_card
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): User_card;

    /**
     * Verifies a User_card message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a User_card message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns User_card
     */
    public static fromObject(object: { [k: string]: any }): User_card;

    /**
     * Creates a plain object from a User_card message. Also converts values to other types if specified.
     * @param message User_card
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: User_card, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this User_card to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_Changpai_Desk_Enter. */
export interface ISC_Changpai_Desk_Enter {

    /** SC_Changpai_Desk_Enter pbPlayers */
    pbPlayers?: (IChangpai_Player_Info[]|null);

    /** SC_Changpai_Desk_Enter state */
    state?: (number|null);

    /** SC_Changpai_Desk_Enter zhuang */
    zhuang?: (number|null);

    /** SC_Changpai_Desk_Enter selfChairId */
    selfChairId?: (number|null);

    /** SC_Changpai_Desk_Enter actTimeLimit */
    actTimeLimit?: (number|null);

    /** SC_Changpai_Desk_Enter decisionTimeLimit */
    decisionTimeLimit?: (number|null);

    /** SC_Changpai_Desk_Enter pbRecData */
    pbRecData?: (IChangpai_Reconnect_Data|null);

    /** SC_Changpai_Desk_Enter pbTaskData */
    pbTaskData?: (IChangpai_Task_Data|null);

    /** SC_Changpai_Desk_Enter round */
    round?: (number|null);

    /** SC_Changpai_Desk_Enter isReconnect */
    isReconnect?: (boolean|null);

    /** SC_Changpai_Desk_Enter zhuangPai */
    zhuangPai?: (number|null);

    /** SC_Changpai_Desk_Enter qiePai */
    qiePai?: (number[]|null);

    /** SC_Changpai_Desk_Enter lastFanPai */
    lastFanPai?: (IUser_card|null);

    /** SC_Changpai_Desk_Enter lastChuPai */
    lastChuPai?: (IUser_card|null);
}

/** Represents a SC_Changpai_Desk_Enter. */
export class SC_Changpai_Desk_Enter implements ISC_Changpai_Desk_Enter {

    /**
     * Constructs a new SC_Changpai_Desk_Enter.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Desk_Enter);

    /** SC_Changpai_Desk_Enter pbPlayers. */
    public pbPlayers: IChangpai_Player_Info[];

    /** SC_Changpai_Desk_Enter state. */
    public state: number;

    /** SC_Changpai_Desk_Enter zhuang. */
    public zhuang: number;

    /** SC_Changpai_Desk_Enter selfChairId. */
    public selfChairId: number;

    /** SC_Changpai_Desk_Enter actTimeLimit. */
    public actTimeLimit: number;

    /** SC_Changpai_Desk_Enter decisionTimeLimit. */
    public decisionTimeLimit: number;

    /** SC_Changpai_Desk_Enter pbRecData. */
    public pbRecData?: (IChangpai_Reconnect_Data|null);

    /** SC_Changpai_Desk_Enter pbTaskData. */
    public pbTaskData?: (IChangpai_Task_Data|null);

    /** SC_Changpai_Desk_Enter round. */
    public round: number;

    /** SC_Changpai_Desk_Enter isReconnect. */
    public isReconnect: boolean;

    /** SC_Changpai_Desk_Enter zhuangPai. */
    public zhuangPai: number;

    /** SC_Changpai_Desk_Enter qiePai. */
    public qiePai: number[];

    /** SC_Changpai_Desk_Enter lastFanPai. */
    public lastFanPai?: (IUser_card|null);

    /** SC_Changpai_Desk_Enter lastChuPai. */
    public lastChuPai?: (IUser_card|null);

    /**
     * Creates a new SC_Changpai_Desk_Enter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Desk_Enter instance
     */
    public static create(properties?: ISC_Changpai_Desk_Enter): SC_Changpai_Desk_Enter;

    /**
     * Encodes the specified SC_Changpai_Desk_Enter message. Does not implicitly {@link SC_Changpai_Desk_Enter.verify|verify} messages.
     * @param message SC_Changpai_Desk_Enter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Desk_Enter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Desk_Enter message, length delimited. Does not implicitly {@link SC_Changpai_Desk_Enter.verify|verify} messages.
     * @param message SC_Changpai_Desk_Enter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Desk_Enter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Desk_Enter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Desk_Enter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Desk_Enter;

    /**
     * Decodes a SC_Changpai_Desk_Enter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Desk_Enter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Desk_Enter;

    /**
     * Verifies a SC_Changpai_Desk_Enter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Desk_Enter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Desk_Enter
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Desk_Enter;

    /**
     * Creates a plain object from a SC_Changpai_Desk_Enter message. Also converts values to other types if specified.
     * @param message SC_Changpai_Desk_Enter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Desk_Enter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Desk_Enter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Desk_Enter {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33100
    }
}

/** Properties of a SC_Changpai_Tile_Left. */
export interface ISC_Changpai_Tile_Left {

    /** SC_Changpai_Tile_Left tileLeft */
    tileLeft?: (number|null);
}

/** Represents a SC_Changpai_Tile_Left. */
export class SC_Changpai_Tile_Left implements ISC_Changpai_Tile_Left {

    /**
     * Constructs a new SC_Changpai_Tile_Left.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Tile_Left);

    /** SC_Changpai_Tile_Left tileLeft. */
    public tileLeft: number;

    /**
     * Creates a new SC_Changpai_Tile_Left instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Tile_Left instance
     */
    public static create(properties?: ISC_Changpai_Tile_Left): SC_Changpai_Tile_Left;

    /**
     * Encodes the specified SC_Changpai_Tile_Left message. Does not implicitly {@link SC_Changpai_Tile_Left.verify|verify} messages.
     * @param message SC_Changpai_Tile_Left message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Tile_Left, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Tile_Left message, length delimited. Does not implicitly {@link SC_Changpai_Tile_Left.verify|verify} messages.
     * @param message SC_Changpai_Tile_Left message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Tile_Left, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Tile_Left message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Tile_Left
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Tile_Left;

    /**
     * Decodes a SC_Changpai_Tile_Left message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Tile_Left
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Tile_Left;

    /**
     * Verifies a SC_Changpai_Tile_Left message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Tile_Left message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Tile_Left
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Tile_Left;

    /**
     * Creates a plain object from a SC_Changpai_Tile_Left message. Also converts values to other types if specified.
     * @param message SC_Changpai_Tile_Left
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Tile_Left, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Tile_Left to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Tile_Left {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33108
    }
}

/** Properties of a SC_Changpai_Discard_Round. */
export interface ISC_Changpai_Discard_Round {

    /** SC_Changpai_Discard_Round chairId */
    chairId?: (number|null);
}

/** Represents a SC_Changpai_Discard_Round. */
export class SC_Changpai_Discard_Round implements ISC_Changpai_Discard_Round {

    /**
     * Constructs a new SC_Changpai_Discard_Round.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Discard_Round);

    /** SC_Changpai_Discard_Round chairId. */
    public chairId: number;

    /**
     * Creates a new SC_Changpai_Discard_Round instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Discard_Round instance
     */
    public static create(properties?: ISC_Changpai_Discard_Round): SC_Changpai_Discard_Round;

    /**
     * Encodes the specified SC_Changpai_Discard_Round message. Does not implicitly {@link SC_Changpai_Discard_Round.verify|verify} messages.
     * @param message SC_Changpai_Discard_Round message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Discard_Round, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Discard_Round message, length delimited. Does not implicitly {@link SC_Changpai_Discard_Round.verify|verify} messages.
     * @param message SC_Changpai_Discard_Round message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Discard_Round, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Discard_Round message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Discard_Round
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Discard_Round;

    /**
     * Decodes a SC_Changpai_Discard_Round message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Discard_Round
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Discard_Round;

    /**
     * Verifies a SC_Changpai_Discard_Round message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Discard_Round message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Discard_Round
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Discard_Round;

    /**
     * Creates a plain object from a SC_Changpai_Discard_Round message. Also converts values to other types if specified.
     * @param message SC_Changpai_Discard_Round
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Discard_Round, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Discard_Round to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Discard_Round {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33109
    }
}

/** Properties of a SC_Changpai_Desk_State. */
export interface ISC_Changpai_Desk_State {

    /** SC_Changpai_Desk_State state */
    state?: (number|null);
}

/** Represents a SC_Changpai_Desk_State. */
export class SC_Changpai_Desk_State implements ISC_Changpai_Desk_State {

    /**
     * Constructs a new SC_Changpai_Desk_State.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Desk_State);

    /** SC_Changpai_Desk_State state. */
    public state: number;

    /**
     * Creates a new SC_Changpai_Desk_State instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Desk_State instance
     */
    public static create(properties?: ISC_Changpai_Desk_State): SC_Changpai_Desk_State;

    /**
     * Encodes the specified SC_Changpai_Desk_State message. Does not implicitly {@link SC_Changpai_Desk_State.verify|verify} messages.
     * @param message SC_Changpai_Desk_State message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Desk_State, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Desk_State message, length delimited. Does not implicitly {@link SC_Changpai_Desk_State.verify|verify} messages.
     * @param message SC_Changpai_Desk_State message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Desk_State, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Desk_State message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Desk_State
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Desk_State;

    /**
     * Decodes a SC_Changpai_Desk_State message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Desk_State
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Desk_State;

    /**
     * Verifies a SC_Changpai_Desk_State message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Desk_State message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Desk_State
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Desk_State;

    /**
     * Creates a plain object from a SC_Changpai_Desk_State message. Also converts values to other types if specified.
     * @param message SC_Changpai_Desk_State
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Desk_State, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Desk_State to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Desk_State {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33110
    }
}

/** Properties of a SC_Changpai_Draw. */
export interface ISC_Changpai_Draw {

    /** SC_Changpai_Draw chairId */
    chairId?: (number|null);

    /** SC_Changpai_Draw tile */
    tile?: (number|null);
}

/** Represents a SC_Changpai_Draw. */
export class SC_Changpai_Draw implements ISC_Changpai_Draw {

    /**
     * Constructs a new SC_Changpai_Draw.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Draw);

    /** SC_Changpai_Draw chairId. */
    public chairId: number;

    /** SC_Changpai_Draw tile. */
    public tile: number;

    /**
     * Creates a new SC_Changpai_Draw instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Draw instance
     */
    public static create(properties?: ISC_Changpai_Draw): SC_Changpai_Draw;

    /**
     * Encodes the specified SC_Changpai_Draw message. Does not implicitly {@link SC_Changpai_Draw.verify|verify} messages.
     * @param message SC_Changpai_Draw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Draw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Draw message, length delimited. Does not implicitly {@link SC_Changpai_Draw.verify|verify} messages.
     * @param message SC_Changpai_Draw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Draw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Draw message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Draw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Draw;

    /**
     * Decodes a SC_Changpai_Draw message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Draw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Draw;

    /**
     * Verifies a SC_Changpai_Draw message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Draw message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Draw
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Draw;

    /**
     * Creates a plain object from a SC_Changpai_Draw message. Also converts values to other types if specified.
     * @param message SC_Changpai_Draw
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Draw, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Draw to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Draw {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33111
    }
}

/** Properties of a SC_Changpai_Fan. */
export interface ISC_Changpai_Fan {

    /** SC_Changpai_Fan chairId */
    chairId?: (number|null);

    /** SC_Changpai_Fan tile */
    tile?: (number|null);
}

/** Represents a SC_Changpai_Fan. */
export class SC_Changpai_Fan implements ISC_Changpai_Fan {

    /**
     * Constructs a new SC_Changpai_Fan.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Fan);

    /** SC_Changpai_Fan chairId. */
    public chairId: number;

    /** SC_Changpai_Fan tile. */
    public tile: number;

    /**
     * Creates a new SC_Changpai_Fan instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Fan instance
     */
    public static create(properties?: ISC_Changpai_Fan): SC_Changpai_Fan;

    /**
     * Encodes the specified SC_Changpai_Fan message. Does not implicitly {@link SC_Changpai_Fan.verify|verify} messages.
     * @param message SC_Changpai_Fan message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Fan, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Fan message, length delimited. Does not implicitly {@link SC_Changpai_Fan.verify|verify} messages.
     * @param message SC_Changpai_Fan message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Fan, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Fan message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Fan
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Fan;

    /**
     * Decodes a SC_Changpai_Fan message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Fan
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Fan;

    /**
     * Verifies a SC_Changpai_Fan message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Fan message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Fan
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Fan;

    /**
     * Creates a plain object from a SC_Changpai_Fan message. Also converts values to other types if specified.
     * @param message SC_Changpai_Fan
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Fan, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Fan to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Fan {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33112
    }
}

/** Properties of a SC_Changpai_Act_Trustee. */
export interface ISC_Changpai_Act_Trustee {

    /** SC_Changpai_Act_Trustee chairId */
    chairId?: (number|null);

    /** SC_Changpai_Act_Trustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SC_Changpai_Act_Trustee. */
export class SC_Changpai_Act_Trustee implements ISC_Changpai_Act_Trustee {

    /**
     * Constructs a new SC_Changpai_Act_Trustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Act_Trustee);

    /** SC_Changpai_Act_Trustee chairId. */
    public chairId: number;

    /** SC_Changpai_Act_Trustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SC_Changpai_Act_Trustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Act_Trustee instance
     */
    public static create(properties?: ISC_Changpai_Act_Trustee): SC_Changpai_Act_Trustee;

    /**
     * Encodes the specified SC_Changpai_Act_Trustee message. Does not implicitly {@link SC_Changpai_Act_Trustee.verify|verify} messages.
     * @param message SC_Changpai_Act_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Act_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Act_Trustee message, length delimited. Does not implicitly {@link SC_Changpai_Act_Trustee.verify|verify} messages.
     * @param message SC_Changpai_Act_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Act_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Act_Trustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Act_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Act_Trustee;

    /**
     * Decodes a SC_Changpai_Act_Trustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Act_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Act_Trustee;

    /**
     * Verifies a SC_Changpai_Act_Trustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Act_Trustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Act_Trustee
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Act_Trustee;

    /**
     * Creates a plain object from a SC_Changpai_Act_Trustee message. Also converts values to other types if specified.
     * @param message SC_Changpai_Act_Trustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Act_Trustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Act_Trustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Act_Trustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33113
    }
}

/** Properties of a CP_Action. */
export interface ICP_Action {

    /** CP_Action action */
    action?: (number|null);

    /** CP_Action tile */
    tile?: (number|null);

    /** CP_Action otherTile */
    otherTile?: (number|null);

    /** CP_Action substituteNum */
    substituteNum?: (number|null);
}

/** Represents a CP_Action. */
export class CP_Action implements ICP_Action {

    /**
     * Constructs a new CP_Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_Action);

    /** CP_Action action. */
    public action: number;

    /** CP_Action tile. */
    public tile: number;

    /** CP_Action otherTile. */
    public otherTile: number;

    /** CP_Action substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new CP_Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_Action instance
     */
    public static create(properties?: ICP_Action): CP_Action;

    /**
     * Encodes the specified CP_Action message. Does not implicitly {@link CP_Action.verify|verify} messages.
     * @param message CP_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_Action message, length delimited. Does not implicitly {@link CP_Action.verify|verify} messages.
     * @param message CP_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_Action;

    /**
     * Decodes a CP_Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_Action;

    /**
     * Verifies a CP_Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_Action
     */
    public static fromObject(object: { [k: string]: any }): CP_Action;

    /**
     * Creates a plain object from a CP_Action message. Also converts values to other types if specified.
     * @param message CP_Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CP_WaitingDoActions. */
export interface ISC_CP_WaitingDoActions {

    /** SC_CP_WaitingDoActions chairId */
    chairId?: (number|null);

    /** SC_CP_WaitingDoActions actions */
    actions?: (ICP_Action[]|null);

    /** SC_CP_WaitingDoActions sessionId */
    sessionId?: (number|null);
}

/** Represents a SC_CP_WaitingDoActions. */
export class SC_CP_WaitingDoActions implements ISC_CP_WaitingDoActions {

    /**
     * Constructs a new SC_CP_WaitingDoActions.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_WaitingDoActions);

    /** SC_CP_WaitingDoActions chairId. */
    public chairId: number;

    /** SC_CP_WaitingDoActions actions. */
    public actions: ICP_Action[];

    /** SC_CP_WaitingDoActions sessionId. */
    public sessionId: number;

    /**
     * Creates a new SC_CP_WaitingDoActions instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_WaitingDoActions instance
     */
    public static create(properties?: ISC_CP_WaitingDoActions): SC_CP_WaitingDoActions;

    /**
     * Encodes the specified SC_CP_WaitingDoActions message. Does not implicitly {@link SC_CP_WaitingDoActions.verify|verify} messages.
     * @param message SC_CP_WaitingDoActions message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_WaitingDoActions, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_WaitingDoActions message, length delimited. Does not implicitly {@link SC_CP_WaitingDoActions.verify|verify} messages.
     * @param message SC_CP_WaitingDoActions message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_WaitingDoActions, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_WaitingDoActions message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_WaitingDoActions
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_WaitingDoActions;

    /**
     * Decodes a SC_CP_WaitingDoActions message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_WaitingDoActions
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_WaitingDoActions;

    /**
     * Verifies a SC_CP_WaitingDoActions message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_WaitingDoActions message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_WaitingDoActions
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_WaitingDoActions;

    /**
     * Creates a plain object from a SC_CP_WaitingDoActions message. Also converts values to other types if specified.
     * @param message SC_CP_WaitingDoActions
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_WaitingDoActions, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_WaitingDoActions to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_WaitingDoActions {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33116
    }
}

/** Properties of a CS_Changpai_Do_Action. */
export interface ICS_Changpai_Do_Action {

    /** CS_Changpai_Do_Action action */
    action?: (number|null);

    /** CS_Changpai_Do_Action valueTile */
    valueTile?: (number|null);

    /** CS_Changpai_Do_Action otherTile */
    otherTile?: (number|null);

    /** CS_Changpai_Do_Action sessionId */
    sessionId?: (number|null);

    /** CS_Changpai_Do_Action substituteNum */
    substituteNum?: (number|null);

    /** CS_Changpai_Do_Action isSure */
    isSure?: (boolean|null);
}

/** Represents a CS_Changpai_Do_Action. */
export class CS_Changpai_Do_Action implements ICS_Changpai_Do_Action {

    /**
     * Constructs a new CS_Changpai_Do_Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Changpai_Do_Action);

    /** CS_Changpai_Do_Action action. */
    public action: number;

    /** CS_Changpai_Do_Action valueTile. */
    public valueTile: number;

    /** CS_Changpai_Do_Action otherTile. */
    public otherTile: number;

    /** CS_Changpai_Do_Action sessionId. */
    public sessionId: number;

    /** CS_Changpai_Do_Action substituteNum. */
    public substituteNum: number;

    /** CS_Changpai_Do_Action isSure. */
    public isSure: boolean;

    /**
     * Creates a new CS_Changpai_Do_Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Changpai_Do_Action instance
     */
    public static create(properties?: ICS_Changpai_Do_Action): CS_Changpai_Do_Action;

    /**
     * Encodes the specified CS_Changpai_Do_Action message. Does not implicitly {@link CS_Changpai_Do_Action.verify|verify} messages.
     * @param message CS_Changpai_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Changpai_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Changpai_Do_Action message, length delimited. Does not implicitly {@link CS_Changpai_Do_Action.verify|verify} messages.
     * @param message CS_Changpai_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Changpai_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Changpai_Do_Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Changpai_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Changpai_Do_Action;

    /**
     * Decodes a CS_Changpai_Do_Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Changpai_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Changpai_Do_Action;

    /**
     * Verifies a CS_Changpai_Do_Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Changpai_Do_Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Changpai_Do_Action
     */
    public static fromObject(object: { [k: string]: any }): CS_Changpai_Do_Action;

    /**
     * Creates a plain object from a CS_Changpai_Do_Action message. Also converts values to other types if specified.
     * @param message CS_Changpai_Do_Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Changpai_Do_Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Changpai_Do_Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Changpai_Do_Action {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33002
    }
}

/** Properties of a SC_Changpai_Do_Action_Commit. */
export interface ISC_Changpai_Do_Action_Commit {

    /** SC_Changpai_Do_Action_Commit chairId */
    chairId?: (number|null);

    /** SC_Changpai_Do_Action_Commit action */
    action?: (number|null);

    /** SC_Changpai_Do_Action_Commit valueTile */
    valueTile?: (number|null);

    /** SC_Changpai_Do_Action_Commit otherTile */
    otherTile?: (number|null);

    /** SC_Changpai_Do_Action_Commit targetChairId */
    targetChairId?: (number|null);

    /** SC_Changpai_Do_Action_Commit sessionId */
    sessionId?: (number|null);

    /** SC_Changpai_Do_Action_Commit substituteNum */
    substituteNum?: (number|null);
}

/** Represents a SC_Changpai_Do_Action_Commit. */
export class SC_Changpai_Do_Action_Commit implements ISC_Changpai_Do_Action_Commit {

    /**
     * Constructs a new SC_Changpai_Do_Action_Commit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Do_Action_Commit);

    /** SC_Changpai_Do_Action_Commit chairId. */
    public chairId: number;

    /** SC_Changpai_Do_Action_Commit action. */
    public action: number;

    /** SC_Changpai_Do_Action_Commit valueTile. */
    public valueTile: number;

    /** SC_Changpai_Do_Action_Commit otherTile. */
    public otherTile: number;

    /** SC_Changpai_Do_Action_Commit targetChairId. */
    public targetChairId: number;

    /** SC_Changpai_Do_Action_Commit sessionId. */
    public sessionId: number;

    /** SC_Changpai_Do_Action_Commit substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new SC_Changpai_Do_Action_Commit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Do_Action_Commit instance
     */
    public static create(properties?: ISC_Changpai_Do_Action_Commit): SC_Changpai_Do_Action_Commit;

    /**
     * Encodes the specified SC_Changpai_Do_Action_Commit message. Does not implicitly {@link SC_Changpai_Do_Action_Commit.verify|verify} messages.
     * @param message SC_Changpai_Do_Action_Commit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Do_Action_Commit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Do_Action_Commit message, length delimited. Does not implicitly {@link SC_Changpai_Do_Action_Commit.verify|verify} messages.
     * @param message SC_Changpai_Do_Action_Commit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Do_Action_Commit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Do_Action_Commit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Do_Action_Commit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Do_Action_Commit;

    /**
     * Decodes a SC_Changpai_Do_Action_Commit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Do_Action_Commit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Do_Action_Commit;

    /**
     * Verifies a SC_Changpai_Do_Action_Commit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Do_Action_Commit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Do_Action_Commit
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Do_Action_Commit;

    /**
     * Creates a plain object from a SC_Changpai_Do_Action_Commit message. Also converts values to other types if specified.
     * @param message SC_Changpai_Do_Action_Commit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Do_Action_Commit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Do_Action_Commit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Do_Action_Commit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33004
    }
}

/** Properties of a SC_Changpai_Do_Action. */
export interface ISC_Changpai_Do_Action {

    /** SC_Changpai_Do_Action chairId */
    chairId?: (number|null);

    /** SC_Changpai_Do_Action action */
    action?: (number|null);

    /** SC_Changpai_Do_Action valueTile */
    valueTile?: (number|null);

    /** SC_Changpai_Do_Action otherTile */
    otherTile?: (number|null);

    /** SC_Changpai_Do_Action targetChairId */
    targetChairId?: (number|null);

    /** SC_Changpai_Do_Action sessionId */
    sessionId?: (number|null);

    /** SC_Changpai_Do_Action substituteNum */
    substituteNum?: (number|null);

    /** SC_Changpai_Do_Action unusablecard */
    unusablecard?: (number[]|null);
}

/** Represents a SC_Changpai_Do_Action. */
export class SC_Changpai_Do_Action implements ISC_Changpai_Do_Action {

    /**
     * Constructs a new SC_Changpai_Do_Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Do_Action);

    /** SC_Changpai_Do_Action chairId. */
    public chairId: number;

    /** SC_Changpai_Do_Action action. */
    public action: number;

    /** SC_Changpai_Do_Action valueTile. */
    public valueTile: number;

    /** SC_Changpai_Do_Action otherTile. */
    public otherTile: number;

    /** SC_Changpai_Do_Action targetChairId. */
    public targetChairId: number;

    /** SC_Changpai_Do_Action sessionId. */
    public sessionId: number;

    /** SC_Changpai_Do_Action substituteNum. */
    public substituteNum: number;

    /** SC_Changpai_Do_Action unusablecard. */
    public unusablecard: number[];

    /**
     * Creates a new SC_Changpai_Do_Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Do_Action instance
     */
    public static create(properties?: ISC_Changpai_Do_Action): SC_Changpai_Do_Action;

    /**
     * Encodes the specified SC_Changpai_Do_Action message. Does not implicitly {@link SC_Changpai_Do_Action.verify|verify} messages.
     * @param message SC_Changpai_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Do_Action message, length delimited. Does not implicitly {@link SC_Changpai_Do_Action.verify|verify} messages.
     * @param message SC_Changpai_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Do_Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Do_Action;

    /**
     * Decodes a SC_Changpai_Do_Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Do_Action;

    /**
     * Verifies a SC_Changpai_Do_Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Do_Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Do_Action
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Do_Action;

    /**
     * Creates a plain object from a SC_Changpai_Do_Action message. Also converts values to other types if specified.
     * @param message SC_Changpai_Do_Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Do_Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Do_Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Do_Action {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33118
    }
}

/** Properties of a CS_Changpai_Action_Discard. */
export interface ICS_Changpai_Action_Discard {

    /** CS_Changpai_Action_Discard tile */
    tile?: (number|null);

    /** CS_Changpai_Action_Discard isSure */
    isSure?: (boolean|null);
}

/** Represents a CS_Changpai_Action_Discard. */
export class CS_Changpai_Action_Discard implements ICS_Changpai_Action_Discard {

    /**
     * Constructs a new CS_Changpai_Action_Discard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Changpai_Action_Discard);

    /** CS_Changpai_Action_Discard tile. */
    public tile: number;

    /** CS_Changpai_Action_Discard isSure. */
    public isSure: boolean;

    /**
     * Creates a new CS_Changpai_Action_Discard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Changpai_Action_Discard instance
     */
    public static create(properties?: ICS_Changpai_Action_Discard): CS_Changpai_Action_Discard;

    /**
     * Encodes the specified CS_Changpai_Action_Discard message. Does not implicitly {@link CS_Changpai_Action_Discard.verify|verify} messages.
     * @param message CS_Changpai_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Changpai_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Changpai_Action_Discard message, length delimited. Does not implicitly {@link CS_Changpai_Action_Discard.verify|verify} messages.
     * @param message CS_Changpai_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Changpai_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Changpai_Action_Discard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Changpai_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Changpai_Action_Discard;

    /**
     * Decodes a CS_Changpai_Action_Discard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Changpai_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Changpai_Action_Discard;

    /**
     * Verifies a CS_Changpai_Action_Discard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Changpai_Action_Discard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Changpai_Action_Discard
     */
    public static fromObject(object: { [k: string]: any }): CS_Changpai_Action_Discard;

    /**
     * Creates a plain object from a CS_Changpai_Action_Discard message. Also converts values to other types if specified.
     * @param message CS_Changpai_Action_Discard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Changpai_Action_Discard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Changpai_Action_Discard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Changpai_Action_Discard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33003
    }
}

/** Properties of a SC_Changpai_Action_Discard. */
export interface ISC_Changpai_Action_Discard {

    /** SC_Changpai_Action_Discard chairId */
    chairId?: (number|null);

    /** SC_Changpai_Action_Discard tile */
    tile?: (number|null);
}

/** Represents a SC_Changpai_Action_Discard. */
export class SC_Changpai_Action_Discard implements ISC_Changpai_Action_Discard {

    /**
     * Constructs a new SC_Changpai_Action_Discard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Action_Discard);

    /** SC_Changpai_Action_Discard chairId. */
    public chairId: number;

    /** SC_Changpai_Action_Discard tile. */
    public tile: number;

    /**
     * Creates a new SC_Changpai_Action_Discard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Action_Discard instance
     */
    public static create(properties?: ISC_Changpai_Action_Discard): SC_Changpai_Action_Discard;

    /**
     * Encodes the specified SC_Changpai_Action_Discard message. Does not implicitly {@link SC_Changpai_Action_Discard.verify|verify} messages.
     * @param message SC_Changpai_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Action_Discard message, length delimited. Does not implicitly {@link SC_Changpai_Action_Discard.verify|verify} messages.
     * @param message SC_Changpai_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Action_Discard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Action_Discard;

    /**
     * Decodes a SC_Changpai_Action_Discard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Action_Discard;

    /**
     * Verifies a SC_Changpai_Action_Discard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Action_Discard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Action_Discard
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Action_Discard;

    /**
     * Creates a plain object from a SC_Changpai_Action_Discard message. Also converts values to other types if specified.
     * @param message SC_Changpai_Action_Discard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Action_Discard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Action_Discard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Action_Discard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33119
    }
}

/** Properties of a Changpai_Player_Score. */
export interface IChangpai_Player_Score {

    /** Changpai_Player_Score chairId */
    chairId?: (number|null);

    /** Changpai_Player_Score guid */
    guid?: (number|null);

    /** Changpai_Player_Score score */
    score?: (number|null);

    /** Changpai_Player_Score money */
    money?: (number|null);

    /** Changpai_Player_Score hucount */
    hucount?: (number|null);

    /** Changpai_Player_Score dianpaonum */
    dianpaonum?: (number|null);
}

/** Represents a Changpai_Player_Score. */
export class Changpai_Player_Score implements IChangpai_Player_Score {

    /**
     * Constructs a new Changpai_Player_Score.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Player_Score);

    /** Changpai_Player_Score chairId. */
    public chairId: number;

    /** Changpai_Player_Score guid. */
    public guid: number;

    /** Changpai_Player_Score score. */
    public score: number;

    /** Changpai_Player_Score money. */
    public money: number;

    /** Changpai_Player_Score hucount. */
    public hucount: number;

    /** Changpai_Player_Score dianpaonum. */
    public dianpaonum: number;

    /**
     * Creates a new Changpai_Player_Score instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Player_Score instance
     */
    public static create(properties?: IChangpai_Player_Score): Changpai_Player_Score;

    /**
     * Encodes the specified Changpai_Player_Score message. Does not implicitly {@link Changpai_Player_Score.verify|verify} messages.
     * @param message Changpai_Player_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Player_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Player_Score message, length delimited. Does not implicitly {@link Changpai_Player_Score.verify|verify} messages.
     * @param message Changpai_Player_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Player_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Player_Score message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Player_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Player_Score;

    /**
     * Decodes a Changpai_Player_Score message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Player_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Player_Score;

    /**
     * Verifies a Changpai_Player_Score message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Player_Score message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Player_Score
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Player_Score;

    /**
     * Creates a plain object from a Changpai_Player_Score message. Also converts values to other types if specified.
     * @param message Changpai_Player_Score
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Player_Score, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Player_Score to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_Changpai_Final_Game_Over. */
export interface ISC_Changpai_Final_Game_Over {

    /** SC_Changpai_Final_Game_Over playerScores */
    playerScores?: (IChangpai_Player_Score[]|null);
}

/** Represents a SC_Changpai_Final_Game_Over. */
export class SC_Changpai_Final_Game_Over implements ISC_Changpai_Final_Game_Over {

    /**
     * Constructs a new SC_Changpai_Final_Game_Over.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_Final_Game_Over);

    /** SC_Changpai_Final_Game_Over playerScores. */
    public playerScores: IChangpai_Player_Score[];

    /**
     * Creates a new SC_Changpai_Final_Game_Over instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_Final_Game_Over instance
     */
    public static create(properties?: ISC_Changpai_Final_Game_Over): SC_Changpai_Final_Game_Over;

    /**
     * Encodes the specified SC_Changpai_Final_Game_Over message. Does not implicitly {@link SC_Changpai_Final_Game_Over.verify|verify} messages.
     * @param message SC_Changpai_Final_Game_Over message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_Final_Game_Over, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_Final_Game_Over message, length delimited. Does not implicitly {@link SC_Changpai_Final_Game_Over.verify|verify} messages.
     * @param message SC_Changpai_Final_Game_Over message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_Final_Game_Over, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_Final_Game_Over message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_Final_Game_Over
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_Final_Game_Over;

    /**
     * Decodes a SC_Changpai_Final_Game_Over message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_Final_Game_Over
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_Final_Game_Over;

    /**
     * Verifies a SC_Changpai_Final_Game_Over message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_Final_Game_Over message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_Final_Game_Over
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_Final_Game_Over;

    /**
     * Creates a plain object from a SC_Changpai_Final_Game_Over message. Also converts values to other types if specified.
     * @param message SC_Changpai_Final_Game_Over
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_Final_Game_Over, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_Final_Game_Over to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_Final_Game_Over {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33120
    }
}

/** Properties of a SC_Changpai_StopAction. */
export interface ISC_Changpai_StopAction {

    /** SC_Changpai_StopAction chairId */
    chairId?: (number|null);
}

/** Represents a SC_Changpai_StopAction. */
export class SC_Changpai_StopAction implements ISC_Changpai_StopAction {

    /**
     * Constructs a new SC_Changpai_StopAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Changpai_StopAction);

    /** SC_Changpai_StopAction chairId. */
    public chairId: number;

    /**
     * Creates a new SC_Changpai_StopAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Changpai_StopAction instance
     */
    public static create(properties?: ISC_Changpai_StopAction): SC_Changpai_StopAction;

    /**
     * Encodes the specified SC_Changpai_StopAction message. Does not implicitly {@link SC_Changpai_StopAction.verify|verify} messages.
     * @param message SC_Changpai_StopAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Changpai_StopAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Changpai_StopAction message, length delimited. Does not implicitly {@link SC_Changpai_StopAction.verify|verify} messages.
     * @param message SC_Changpai_StopAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Changpai_StopAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Changpai_StopAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Changpai_StopAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Changpai_StopAction;

    /**
     * Decodes a SC_Changpai_StopAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Changpai_StopAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Changpai_StopAction;

    /**
     * Verifies a SC_Changpai_StopAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Changpai_StopAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Changpai_StopAction
     */
    public static fromObject(object: { [k: string]: any }): SC_Changpai_StopAction;

    /**
     * Creates a plain object from a SC_Changpai_StopAction message. Also converts values to other types if specified.
     * @param message SC_Changpai_StopAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Changpai_StopAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Changpai_StopAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Changpai_StopAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33121
    }
}

/** Properties of a CP_TingTiles. */
export interface ICP_TingTiles {

    /** CP_TingTiles discard */
    discard?: (number|null);

    /** CP_TingTiles tiles */
    tiles?: (number[]|null);
}

/** Represents a CP_TingTiles. */
export class CP_TingTiles implements ICP_TingTiles {

    /**
     * Constructs a new CP_TingTiles.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_TingTiles);

    /** CP_TingTiles discard. */
    public discard: number;

    /** CP_TingTiles tiles. */
    public tiles: number[];

    /**
     * Creates a new CP_TingTiles instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_TingTiles instance
     */
    public static create(properties?: ICP_TingTiles): CP_TingTiles;

    /**
     * Encodes the specified CP_TingTiles message. Does not implicitly {@link CP_TingTiles.verify|verify} messages.
     * @param message CP_TingTiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_TingTiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_TingTiles message, length delimited. Does not implicitly {@link CP_TingTiles.verify|verify} messages.
     * @param message CP_TingTiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_TingTiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_TingTiles message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_TingTiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_TingTiles;

    /**
     * Decodes a CP_TingTiles message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_TingTiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_TingTiles;

    /**
     * Verifies a CP_TingTiles message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_TingTiles message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_TingTiles
     */
    public static fromObject(object: { [k: string]: any }): CP_TingTiles;

    /**
     * Creates a plain object from a CP_TingTiles message. Also converts values to other types if specified.
     * @param message CP_TingTiles
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_TingTiles, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_TingTiles to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CP_WaitingTing. */
export interface ISC_CP_WaitingTing {

    /** SC_CP_WaitingTing ting */
    ting?: (ICP_TingTiles[]|null);
}

/** Represents a SC_CP_WaitingTing. */
export class SC_CP_WaitingTing implements ISC_CP_WaitingTing {

    /**
     * Constructs a new SC_CP_WaitingTing.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_WaitingTing);

    /** SC_CP_WaitingTing ting. */
    public ting: ICP_TingTiles[];

    /**
     * Creates a new SC_CP_WaitingTing instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_WaitingTing instance
     */
    public static create(properties?: ISC_CP_WaitingTing): SC_CP_WaitingTing;

    /**
     * Encodes the specified SC_CP_WaitingTing message. Does not implicitly {@link SC_CP_WaitingTing.verify|verify} messages.
     * @param message SC_CP_WaitingTing message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_WaitingTing, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_WaitingTing message, length delimited. Does not implicitly {@link SC_CP_WaitingTing.verify|verify} messages.
     * @param message SC_CP_WaitingTing message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_WaitingTing, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_WaitingTing message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_WaitingTing
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_WaitingTing;

    /**
     * Decodes a SC_CP_WaitingTing message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_WaitingTing
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_WaitingTing;

    /**
     * Verifies a SC_CP_WaitingTing message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_WaitingTing message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_WaitingTing
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_WaitingTing;

    /**
     * Creates a plain object from a SC_CP_WaitingTing message. Also converts values to other types if specified.
     * @param message SC_CP_WaitingTing
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_WaitingTing, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_WaitingTing to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_WaitingTing {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33122
    }
}

/** Properties of a ChangpaiBalanceType. */
export interface IChangpaiBalanceType {

    /** ChangpaiBalanceType type */
    type?: (number|null);

    /** ChangpaiBalanceType count */
    count?: (number|null);
}

/** Represents a ChangpaiBalanceType. */
export class ChangpaiBalanceType implements IChangpaiBalanceType {

    /**
     * Constructs a new ChangpaiBalanceType.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpaiBalanceType);

    /** ChangpaiBalanceType type. */
    public type: number;

    /** ChangpaiBalanceType count. */
    public count: number;

    /**
     * Creates a new ChangpaiBalanceType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ChangpaiBalanceType instance
     */
    public static create(properties?: IChangpaiBalanceType): ChangpaiBalanceType;

    /**
     * Encodes the specified ChangpaiBalanceType message. Does not implicitly {@link ChangpaiBalanceType.verify|verify} messages.
     * @param message ChangpaiBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpaiBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ChangpaiBalanceType message, length delimited. Does not implicitly {@link ChangpaiBalanceType.verify|verify} messages.
     * @param message ChangpaiBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpaiBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ChangpaiBalanceType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ChangpaiBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ChangpaiBalanceType;

    /**
     * Decodes a ChangpaiBalanceType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ChangpaiBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ChangpaiBalanceType;

    /**
     * Verifies a ChangpaiBalanceType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ChangpaiBalanceType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ChangpaiBalanceType
     */
    public static fromObject(object: { [k: string]: any }): ChangpaiBalanceType;

    /**
     * Creates a plain object from a ChangpaiBalanceType message. Also converts values to other types if specified.
     * @param message ChangpaiBalanceType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ChangpaiBalanceType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ChangpaiBalanceType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ChangpaiBlanacePlayer. */
export interface IChangpaiBlanacePlayer {

    /** ChangpaiBlanacePlayer chairId */
    chairId?: (number|null);

    /** ChangpaiBlanacePlayer hu */
    hu?: (number|null);

    /** ChangpaiBlanacePlayer huFan */
    huFan?: (number|null);

    /** ChangpaiBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** ChangpaiBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** ChangpaiBlanacePlayer items */
    items?: (IChangpaiBalanceType[]|null);

    /** ChangpaiBlanacePlayer status */
    status?: (number|null);

    /** ChangpaiBlanacePlayer huTile */
    huTile?: (number|null);

    /** ChangpaiBlanacePlayer huIndex */
    huIndex?: (number|null);

    /** ChangpaiBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** ChangpaiBlanacePlayer totalMoney */
    totalMoney?: (number|null);

    /** ChangpaiBlanacePlayer baoting */
    baoting?: (boolean|null);
}

/** Represents a ChangpaiBlanacePlayer. */
export class ChangpaiBlanacePlayer implements IChangpaiBlanacePlayer {

    /**
     * Constructs a new ChangpaiBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpaiBlanacePlayer);

    /** ChangpaiBlanacePlayer chairId. */
    public chairId: number;

    /** ChangpaiBlanacePlayer hu. */
    public hu: number;

    /** ChangpaiBlanacePlayer huFan. */
    public huFan: number;

    /** ChangpaiBlanacePlayer totalScore. */
    public totalScore: number;

    /** ChangpaiBlanacePlayer roundScore. */
    public roundScore: number;

    /** ChangpaiBlanacePlayer items. */
    public items: IChangpaiBalanceType[];

    /** ChangpaiBlanacePlayer status. */
    public status: number;

    /** ChangpaiBlanacePlayer huTile. */
    public huTile: number;

    /** ChangpaiBlanacePlayer huIndex. */
    public huIndex: number;

    /** ChangpaiBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** ChangpaiBlanacePlayer totalMoney. */
    public totalMoney: number;

    /** ChangpaiBlanacePlayer baoting. */
    public baoting: boolean;

    /**
     * Creates a new ChangpaiBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ChangpaiBlanacePlayer instance
     */
    public static create(properties?: IChangpaiBlanacePlayer): ChangpaiBlanacePlayer;

    /**
     * Encodes the specified ChangpaiBlanacePlayer message. Does not implicitly {@link ChangpaiBlanacePlayer.verify|verify} messages.
     * @param message ChangpaiBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpaiBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ChangpaiBlanacePlayer message, length delimited. Does not implicitly {@link ChangpaiBlanacePlayer.verify|verify} messages.
     * @param message ChangpaiBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpaiBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ChangpaiBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ChangpaiBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ChangpaiBlanacePlayer;

    /**
     * Decodes a ChangpaiBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ChangpaiBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ChangpaiBlanacePlayer;

    /**
     * Verifies a ChangpaiBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ChangpaiBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ChangpaiBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): ChangpaiBlanacePlayer;

    /**
     * Creates a plain object from a ChangpaiBlanacePlayer message. Also converts values to other types if specified.
     * @param message ChangpaiBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ChangpaiBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ChangpaiBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_ChangpaiGameFinish. */
export interface ISC_ChangpaiGameFinish {

    /** SC_ChangpaiGameFinish players */
    players?: (IChangpai_Player_Info[]|null);

    /** SC_ChangpaiGameFinish playerBalance */
    playerBalance?: (IChangpaiBlanacePlayer[]|null);

    /** SC_ChangpaiGameFinish leftpai */
    leftpai?: (number[]|null);
}

/** Represents a SC_ChangpaiGameFinish. */
export class SC_ChangpaiGameFinish implements ISC_ChangpaiGameFinish {

    /**
     * Constructs a new SC_ChangpaiGameFinish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChangpaiGameFinish);

    /** SC_ChangpaiGameFinish players. */
    public players: IChangpai_Player_Info[];

    /** SC_ChangpaiGameFinish playerBalance. */
    public playerBalance: IChangpaiBlanacePlayer[];

    /** SC_ChangpaiGameFinish leftpai. */
    public leftpai: number[];

    /**
     * Creates a new SC_ChangpaiGameFinish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChangpaiGameFinish instance
     */
    public static create(properties?: ISC_ChangpaiGameFinish): SC_ChangpaiGameFinish;

    /**
     * Encodes the specified SC_ChangpaiGameFinish message. Does not implicitly {@link SC_ChangpaiGameFinish.verify|verify} messages.
     * @param message SC_ChangpaiGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChangpaiGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChangpaiGameFinish message, length delimited. Does not implicitly {@link SC_ChangpaiGameFinish.verify|verify} messages.
     * @param message SC_ChangpaiGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChangpaiGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChangpaiGameFinish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChangpaiGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChangpaiGameFinish;

    /**
     * Decodes a SC_ChangpaiGameFinish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChangpaiGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChangpaiGameFinish;

    /**
     * Verifies a SC_ChangpaiGameFinish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChangpaiGameFinish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChangpaiGameFinish
     */
    public static fromObject(object: { [k: string]: any }): SC_ChangpaiGameFinish;

    /**
     * Creates a plain object from a SC_ChangpaiGameFinish message. Also converts values to other types if specified.
     * @param message SC_ChangpaiGameFinish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChangpaiGameFinish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChangpaiGameFinish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChangpaiGameFinish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33133
    }
}

/** Properties of a CP_TingTilesInfo. */
export interface ICP_TingTilesInfo {

    /** CP_TingTilesInfo tile */
    tile?: (number|null);

    /** CP_TingTilesInfo fan */
    fan?: (number|null);
}

/** Represents a CP_TingTilesInfo. */
export class CP_TingTilesInfo implements ICP_TingTilesInfo {

    /**
     * Constructs a new CP_TingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_TingTilesInfo);

    /** CP_TingTilesInfo tile. */
    public tile: number;

    /** CP_TingTilesInfo fan. */
    public fan: number;

    /**
     * Creates a new CP_TingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_TingTilesInfo instance
     */
    public static create(properties?: ICP_TingTilesInfo): CP_TingTilesInfo;

    /**
     * Encodes the specified CP_TingTilesInfo message. Does not implicitly {@link CP_TingTilesInfo.verify|verify} messages.
     * @param message CP_TingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_TingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_TingTilesInfo message, length delimited. Does not implicitly {@link CP_TingTilesInfo.verify|verify} messages.
     * @param message CP_TingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_TingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_TingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_TingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_TingTilesInfo;

    /**
     * Decodes a CP_TingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_TingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_TingTilesInfo;

    /**
     * Verifies a CP_TingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_TingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_TingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): CP_TingTilesInfo;

    /**
     * Creates a plain object from a CP_TingTilesInfo message. Also converts values to other types if specified.
     * @param message CP_TingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_TingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_TingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CP_TingTips. */
export interface ICP_TingTips {

    /** CP_TingTips discard */
    discard?: (number|null);

    /** CP_TingTips tilesInfo */
    tilesInfo?: (ICP_TingTilesInfo[]|null);
}

/** Represents a CP_TingTips. */
export class CP_TingTips implements ICP_TingTips {

    /**
     * Constructs a new CP_TingTips.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_TingTips);

    /** CP_TingTips discard. */
    public discard: number;

    /** CP_TingTips tilesInfo. */
    public tilesInfo: ICP_TingTilesInfo[];

    /**
     * Creates a new CP_TingTips instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_TingTips instance
     */
    public static create(properties?: ICP_TingTips): CP_TingTips;

    /**
     * Encodes the specified CP_TingTips message. Does not implicitly {@link CP_TingTips.verify|verify} messages.
     * @param message CP_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_TingTips message, length delimited. Does not implicitly {@link CP_TingTips.verify|verify} messages.
     * @param message CP_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_TingTips message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_TingTips;

    /**
     * Decodes a CP_TingTips message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_TingTips;

    /**
     * Verifies a CP_TingTips message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_TingTips message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_TingTips
     */
    public static fromObject(object: { [k: string]: any }): CP_TingTips;

    /**
     * Creates a plain object from a CP_TingTips message. Also converts values to other types if specified.
     * @param message CP_TingTips
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_TingTips, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_TingTips to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CP_TingTips. */
export interface ISC_CP_TingTips {

    /** SC_CP_TingTips ting */
    ting?: (ICP_TingTips[]|null);
}

/** Represents a SC_CP_TingTips. */
export class SC_CP_TingTips implements ISC_CP_TingTips {

    /**
     * Constructs a new SC_CP_TingTips.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_TingTips);

    /** SC_CP_TingTips ting. */
    public ting: ICP_TingTips[];

    /**
     * Creates a new SC_CP_TingTips instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_TingTips instance
     */
    public static create(properties?: ISC_CP_TingTips): SC_CP_TingTips;

    /**
     * Encodes the specified SC_CP_TingTips message. Does not implicitly {@link SC_CP_TingTips.verify|verify} messages.
     * @param message SC_CP_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_TingTips message, length delimited. Does not implicitly {@link SC_CP_TingTips.verify|verify} messages.
     * @param message SC_CP_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_TingTips message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_TingTips;

    /**
     * Decodes a SC_CP_TingTips message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_TingTips;

    /**
     * Verifies a SC_CP_TingTips message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_TingTips message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_TingTips
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_TingTips;

    /**
     * Creates a plain object from a SC_CP_TingTips message. Also converts values to other types if specified.
     * @param message SC_CP_TingTips
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_TingTips, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_TingTips to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_TingTips {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33134
    }
}

/** Properties of a SC_CP_PlayerHuStatus. */
export interface ISC_CP_PlayerHuStatus {

    /** SC_CP_PlayerHuStatus chairId */
    chairId?: (number|null);

    /** SC_CP_PlayerHuStatus hu */
    hu?: (number|null);

    /** SC_CP_PlayerHuStatus huTile */
    huTile?: (number|null);

    /** SC_CP_PlayerHuStatus huIndex */
    huIndex?: (number|null);
}

/** Represents a SC_CP_PlayerHuStatus. */
export class SC_CP_PlayerHuStatus implements ISC_CP_PlayerHuStatus {

    /**
     * Constructs a new SC_CP_PlayerHuStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_PlayerHuStatus);

    /** SC_CP_PlayerHuStatus chairId. */
    public chairId: number;

    /** SC_CP_PlayerHuStatus hu. */
    public hu: number;

    /** SC_CP_PlayerHuStatus huTile. */
    public huTile: number;

    /** SC_CP_PlayerHuStatus huIndex. */
    public huIndex: number;

    /**
     * Creates a new SC_CP_PlayerHuStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_PlayerHuStatus instance
     */
    public static create(properties?: ISC_CP_PlayerHuStatus): SC_CP_PlayerHuStatus;

    /**
     * Encodes the specified SC_CP_PlayerHuStatus message. Does not implicitly {@link SC_CP_PlayerHuStatus.verify|verify} messages.
     * @param message SC_CP_PlayerHuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_PlayerHuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_PlayerHuStatus message, length delimited. Does not implicitly {@link SC_CP_PlayerHuStatus.verify|verify} messages.
     * @param message SC_CP_PlayerHuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_PlayerHuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_PlayerHuStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_PlayerHuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_PlayerHuStatus;

    /**
     * Decodes a SC_CP_PlayerHuStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_PlayerHuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_PlayerHuStatus;

    /**
     * Verifies a SC_CP_PlayerHuStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_PlayerHuStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_PlayerHuStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_PlayerHuStatus;

    /**
     * Creates a plain object from a SC_CP_PlayerHuStatus message. Also converts values to other types if specified.
     * @param message SC_CP_PlayerHuStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_PlayerHuStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_PlayerHuStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_PlayerHuStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33135
    }
}

/** Properties of a SC_CP_HuStatus. */
export interface ISC_CP_HuStatus {

    /** SC_CP_HuStatus status */
    status?: (ISC_CP_PlayerHuStatus[]|null);
}

/** Represents a SC_CP_HuStatus. */
export class SC_CP_HuStatus implements ISC_CP_HuStatus {

    /**
     * Constructs a new SC_CP_HuStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_HuStatus);

    /** SC_CP_HuStatus status. */
    public status: ISC_CP_PlayerHuStatus[];

    /**
     * Creates a new SC_CP_HuStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_HuStatus instance
     */
    public static create(properties?: ISC_CP_HuStatus): SC_CP_HuStatus;

    /**
     * Encodes the specified SC_CP_HuStatus message. Does not implicitly {@link SC_CP_HuStatus.verify|verify} messages.
     * @param message SC_CP_HuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_HuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_HuStatus message, length delimited. Does not implicitly {@link SC_CP_HuStatus.verify|verify} messages.
     * @param message SC_CP_HuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_HuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_HuStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_HuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_HuStatus;

    /**
     * Decodes a SC_CP_HuStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_HuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_HuStatus;

    /**
     * Verifies a SC_CP_HuStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_HuStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_HuStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_HuStatus;

    /**
     * Creates a plain object from a SC_CP_HuStatus message. Also converts values to other types if specified.
     * @param message SC_CP_HuStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_HuStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_HuStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_HuStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33136
    }
}

/** Properties of a CS_ChangpaiGetTingTilesInfo. */
export interface ICS_ChangpaiGetTingTilesInfo {
}

/** Represents a CS_ChangpaiGetTingTilesInfo. */
export class CS_ChangpaiGetTingTilesInfo implements ICS_ChangpaiGetTingTilesInfo {

    /**
     * Constructs a new CS_ChangpaiGetTingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChangpaiGetTingTilesInfo);

    /**
     * Creates a new CS_ChangpaiGetTingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChangpaiGetTingTilesInfo instance
     */
    public static create(properties?: ICS_ChangpaiGetTingTilesInfo): CS_ChangpaiGetTingTilesInfo;

    /**
     * Encodes the specified CS_ChangpaiGetTingTilesInfo message. Does not implicitly {@link CS_ChangpaiGetTingTilesInfo.verify|verify} messages.
     * @param message CS_ChangpaiGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChangpaiGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChangpaiGetTingTilesInfo message, length delimited. Does not implicitly {@link CS_ChangpaiGetTingTilesInfo.verify|verify} messages.
     * @param message CS_ChangpaiGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChangpaiGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChangpaiGetTingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChangpaiGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChangpaiGetTingTilesInfo;

    /**
     * Decodes a CS_ChangpaiGetTingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChangpaiGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChangpaiGetTingTilesInfo;

    /**
     * Verifies a CS_ChangpaiGetTingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChangpaiGetTingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChangpaiGetTingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): CS_ChangpaiGetTingTilesInfo;

    /**
     * Creates a plain object from a CS_ChangpaiGetTingTilesInfo message. Also converts values to other types if specified.
     * @param message CS_ChangpaiGetTingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChangpaiGetTingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChangpaiGetTingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChangpaiGetTingTilesInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33143
    }
}

/** Properties of a SC_ChangpaiGetTingTilesInfo. */
export interface ISC_ChangpaiGetTingTilesInfo {

    /** SC_ChangpaiGetTingTilesInfo result */
    result?: (number|null);

    /** SC_ChangpaiGetTingTilesInfo tilesInfo */
    tilesInfo?: (ICP_TingTilesInfo[]|null);
}

/** Represents a SC_ChangpaiGetTingTilesInfo. */
export class SC_ChangpaiGetTingTilesInfo implements ISC_ChangpaiGetTingTilesInfo {

    /**
     * Constructs a new SC_ChangpaiGetTingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChangpaiGetTingTilesInfo);

    /** SC_ChangpaiGetTingTilesInfo result. */
    public result: number;

    /** SC_ChangpaiGetTingTilesInfo tilesInfo. */
    public tilesInfo: ICP_TingTilesInfo[];

    /**
     * Creates a new SC_ChangpaiGetTingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChangpaiGetTingTilesInfo instance
     */
    public static create(properties?: ISC_ChangpaiGetTingTilesInfo): SC_ChangpaiGetTingTilesInfo;

    /**
     * Encodes the specified SC_ChangpaiGetTingTilesInfo message. Does not implicitly {@link SC_ChangpaiGetTingTilesInfo.verify|verify} messages.
     * @param message SC_ChangpaiGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChangpaiGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChangpaiGetTingTilesInfo message, length delimited. Does not implicitly {@link SC_ChangpaiGetTingTilesInfo.verify|verify} messages.
     * @param message SC_ChangpaiGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChangpaiGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChangpaiGetTingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChangpaiGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChangpaiGetTingTilesInfo;

    /**
     * Decodes a SC_ChangpaiGetTingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChangpaiGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChangpaiGetTingTilesInfo;

    /**
     * Verifies a SC_ChangpaiGetTingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChangpaiGetTingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChangpaiGetTingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_ChangpaiGetTingTilesInfo;

    /**
     * Creates a plain object from a SC_ChangpaiGetTingTilesInfo message. Also converts values to other types if specified.
     * @param message SC_ChangpaiGetTingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChangpaiGetTingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChangpaiGetTingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChangpaiGetTingTilesInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33144
    }
}

/** Properties of a Changpai_Toupaistate. */
export interface IChangpai_Toupaistate {

    /** Changpai_Toupaistate status */
    status?: (number|null);
}

/** Represents a Changpai_Toupaistate. */
export class Changpai_Toupaistate implements IChangpai_Toupaistate {

    /**
     * Constructs a new Changpai_Toupaistate.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangpai_Toupaistate);

    /** Changpai_Toupaistate status. */
    public status: number;

    /**
     * Creates a new Changpai_Toupaistate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Changpai_Toupaistate instance
     */
    public static create(properties?: IChangpai_Toupaistate): Changpai_Toupaistate;

    /**
     * Encodes the specified Changpai_Toupaistate message. Does not implicitly {@link Changpai_Toupaistate.verify|verify} messages.
     * @param message Changpai_Toupaistate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangpai_Toupaistate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Changpai_Toupaistate message, length delimited. Does not implicitly {@link Changpai_Toupaistate.verify|verify} messages.
     * @param message Changpai_Toupaistate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangpai_Toupaistate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Changpai_Toupaistate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Changpai_Toupaistate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Changpai_Toupaistate;

    /**
     * Decodes a Changpai_Toupaistate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Changpai_Toupaistate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Changpai_Toupaistate;

    /**
     * Verifies a Changpai_Toupaistate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Changpai_Toupaistate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Changpai_Toupaistate
     */
    public static fromObject(object: { [k: string]: any }): Changpai_Toupaistate;

    /**
     * Creates a plain object from a Changpai_Toupaistate message. Also converts values to other types if specified.
     * @param message Changpai_Toupaistate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Changpai_Toupaistate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Changpai_Toupaistate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace Changpai_Toupaistate {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33145
    }
}

/** Properties of a SC_CP_Canbe_Baopai. */
export interface ISC_CP_Canbe_Baopai {

    /** SC_CP_Canbe_Baopai tile */
    tile?: (number|null);

    /** SC_CP_Canbe_Baopai number */
    number?: (number|null);
}

/** Represents a SC_CP_Canbe_Baopai. */
export class SC_CP_Canbe_Baopai implements ISC_CP_Canbe_Baopai {

    /**
     * Constructs a new SC_CP_Canbe_Baopai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_Canbe_Baopai);

    /** SC_CP_Canbe_Baopai tile. */
    public tile: number;

    /** SC_CP_Canbe_Baopai number. */
    public number: number;

    /**
     * Creates a new SC_CP_Canbe_Baopai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_Canbe_Baopai instance
     */
    public static create(properties?: ISC_CP_Canbe_Baopai): SC_CP_Canbe_Baopai;

    /**
     * Encodes the specified SC_CP_Canbe_Baopai message. Does not implicitly {@link SC_CP_Canbe_Baopai.verify|verify} messages.
     * @param message SC_CP_Canbe_Baopai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_Canbe_Baopai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_Canbe_Baopai message, length delimited. Does not implicitly {@link SC_CP_Canbe_Baopai.verify|verify} messages.
     * @param message SC_CP_Canbe_Baopai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_Canbe_Baopai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_Canbe_Baopai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_Canbe_Baopai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_Canbe_Baopai;

    /**
     * Decodes a SC_CP_Canbe_Baopai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_Canbe_Baopai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_Canbe_Baopai;

    /**
     * Verifies a SC_CP_Canbe_Baopai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_Canbe_Baopai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_Canbe_Baopai
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_Canbe_Baopai;

    /**
     * Creates a plain object from a SC_CP_Canbe_Baopai message. Also converts values to other types if specified.
     * @param message SC_CP_Canbe_Baopai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_Canbe_Baopai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_Canbe_Baopai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_Canbe_Baopai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33146
    }
}

/** Properties of a SC_CP_Tuo_Num. */
export interface ISC_CP_Tuo_Num {

    /** SC_CP_Tuo_Num tuos */
    tuos?: (number[]|null);
}

/** Represents a SC_CP_Tuo_Num. */
export class SC_CP_Tuo_Num implements ISC_CP_Tuo_Num {

    /**
     * Constructs a new SC_CP_Tuo_Num.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_Tuo_Num);

    /** SC_CP_Tuo_Num tuos. */
    public tuos: number[];

    /**
     * Creates a new SC_CP_Tuo_Num instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_Tuo_Num instance
     */
    public static create(properties?: ISC_CP_Tuo_Num): SC_CP_Tuo_Num;

    /**
     * Encodes the specified SC_CP_Tuo_Num message. Does not implicitly {@link SC_CP_Tuo_Num.verify|verify} messages.
     * @param message SC_CP_Tuo_Num message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_Tuo_Num, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_Tuo_Num message, length delimited. Does not implicitly {@link SC_CP_Tuo_Num.verify|verify} messages.
     * @param message SC_CP_Tuo_Num message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_Tuo_Num, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_Tuo_Num message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_Tuo_Num
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_Tuo_Num;

    /**
     * Decodes a SC_CP_Tuo_Num message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_Tuo_Num
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_Tuo_Num;

    /**
     * Verifies a SC_CP_Tuo_Num message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_Tuo_Num message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_Tuo_Num
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_Tuo_Num;

    /**
     * Creates a plain object from a SC_CP_Tuo_Num message. Also converts values to other types if specified.
     * @param message SC_CP_Tuo_Num
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_Tuo_Num, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_Tuo_Num to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_Tuo_Num {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33147
    }
}

/** Properties of a CP_BaotingInfo. */
export interface ICP_BaotingInfo {

    /** CP_BaotingInfo chairId */
    chairId?: (number|null);

    /** CP_BaotingInfo baoting */
    baoting?: (boolean|null);
}

/** Represents a CP_BaotingInfo. */
export class CP_BaotingInfo implements ICP_BaotingInfo {

    /**
     * Constructs a new CP_BaotingInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_BaotingInfo);

    /** CP_BaotingInfo chairId. */
    public chairId: number;

    /** CP_BaotingInfo baoting. */
    public baoting: boolean;

    /**
     * Creates a new CP_BaotingInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_BaotingInfo instance
     */
    public static create(properties?: ICP_BaotingInfo): CP_BaotingInfo;

    /**
     * Encodes the specified CP_BaotingInfo message. Does not implicitly {@link CP_BaotingInfo.verify|verify} messages.
     * @param message CP_BaotingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_BaotingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_BaotingInfo message, length delimited. Does not implicitly {@link CP_BaotingInfo.verify|verify} messages.
     * @param message CP_BaotingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_BaotingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_BaotingInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_BaotingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_BaotingInfo;

    /**
     * Decodes a CP_BaotingInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_BaotingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_BaotingInfo;

    /**
     * Verifies a CP_BaotingInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_BaotingInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_BaotingInfo
     */
    public static fromObject(object: { [k: string]: any }): CP_BaotingInfo;

    /**
     * Creates a plain object from a CP_BaotingInfo message. Also converts values to other types if specified.
     * @param message CP_BaotingInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_BaotingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_BaotingInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CP_BaotingStatus. */
export interface ICP_BaotingStatus {

    /** CP_BaotingStatus chairId */
    chairId?: (number|null);

    /** CP_BaotingStatus done */
    done?: (boolean|null);
}

/** Represents a CP_BaotingStatus. */
export class CP_BaotingStatus implements ICP_BaotingStatus {

    /**
     * Constructs a new CP_BaotingStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICP_BaotingStatus);

    /** CP_BaotingStatus chairId. */
    public chairId: number;

    /** CP_BaotingStatus done. */
    public done: boolean;

    /**
     * Creates a new CP_BaotingStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CP_BaotingStatus instance
     */
    public static create(properties?: ICP_BaotingStatus): CP_BaotingStatus;

    /**
     * Encodes the specified CP_BaotingStatus message. Does not implicitly {@link CP_BaotingStatus.verify|verify} messages.
     * @param message CP_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICP_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CP_BaotingStatus message, length delimited. Does not implicitly {@link CP_BaotingStatus.verify|verify} messages.
     * @param message CP_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICP_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CP_BaotingStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CP_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CP_BaotingStatus;

    /**
     * Decodes a CP_BaotingStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CP_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CP_BaotingStatus;

    /**
     * Verifies a CP_BaotingStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CP_BaotingStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CP_BaotingStatus
     */
    public static fromObject(object: { [k: string]: any }): CP_BaotingStatus;

    /**
     * Creates a plain object from a CP_BaotingStatus message. Also converts values to other types if specified.
     * @param message CP_BaotingStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CP_BaotingStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CP_BaotingStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CP_AllowBaoting. */
export interface ISC_CP_AllowBaoting {
}

/** Represents a SC_CP_AllowBaoting. */
export class SC_CP_AllowBaoting implements ISC_CP_AllowBaoting {

    /**
     * Constructs a new SC_CP_AllowBaoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_AllowBaoting);

    /**
     * Creates a new SC_CP_AllowBaoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_AllowBaoting instance
     */
    public static create(properties?: ISC_CP_AllowBaoting): SC_CP_AllowBaoting;

    /**
     * Encodes the specified SC_CP_AllowBaoting message. Does not implicitly {@link SC_CP_AllowBaoting.verify|verify} messages.
     * @param message SC_CP_AllowBaoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_AllowBaoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_AllowBaoting message, length delimited. Does not implicitly {@link SC_CP_AllowBaoting.verify|verify} messages.
     * @param message SC_CP_AllowBaoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_AllowBaoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_AllowBaoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_AllowBaoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_AllowBaoting;

    /**
     * Decodes a SC_CP_AllowBaoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_AllowBaoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_AllowBaoting;

    /**
     * Verifies a SC_CP_AllowBaoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_AllowBaoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_AllowBaoting
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_AllowBaoting;

    /**
     * Creates a plain object from a SC_CP_AllowBaoting message. Also converts values to other types if specified.
     * @param message SC_CP_AllowBaoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_AllowBaoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_AllowBaoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_AllowBaoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33148
    }
}

/** Properties of a CS_CP_Baoting. */
export interface ICS_CP_Baoting {

    /** CS_CP_Baoting baoting */
    baoting?: (number|null);
}

/** Represents a CS_CP_Baoting. */
export class CS_CP_Baoting implements ICS_CP_Baoting {

    /**
     * Constructs a new CS_CP_Baoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CP_Baoting);

    /** CS_CP_Baoting baoting. */
    public baoting: number;

    /**
     * Creates a new CS_CP_Baoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CP_Baoting instance
     */
    public static create(properties?: ICS_CP_Baoting): CS_CP_Baoting;

    /**
     * Encodes the specified CS_CP_Baoting message. Does not implicitly {@link CS_CP_Baoting.verify|verify} messages.
     * @param message CS_CP_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CP_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CP_Baoting message, length delimited. Does not implicitly {@link CS_CP_Baoting.verify|verify} messages.
     * @param message CS_CP_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CP_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CP_Baoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CP_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CP_Baoting;

    /**
     * Decodes a CS_CP_Baoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CP_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CP_Baoting;

    /**
     * Verifies a CS_CP_Baoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CP_Baoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CP_Baoting
     */
    public static fromObject(object: { [k: string]: any }): CS_CP_Baoting;

    /**
     * Creates a plain object from a CS_CP_Baoting message. Also converts values to other types if specified.
     * @param message CS_CP_Baoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CP_Baoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CP_Baoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CP_Baoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33149
    }
}

/** Properties of a SC_CP_Baoting. */
export interface ISC_CP_Baoting {

    /** SC_CP_Baoting result */
    result?: (number|null);

    /** SC_CP_Baoting status */
    status?: (ICP_BaotingStatus|null);
}

/** Represents a SC_CP_Baoting. */
export class SC_CP_Baoting implements ISC_CP_Baoting {

    /**
     * Constructs a new SC_CP_Baoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_Baoting);

    /** SC_CP_Baoting result. */
    public result: number;

    /** SC_CP_Baoting status. */
    public status?: (ICP_BaotingStatus|null);

    /**
     * Creates a new SC_CP_Baoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_Baoting instance
     */
    public static create(properties?: ISC_CP_Baoting): SC_CP_Baoting;

    /**
     * Encodes the specified SC_CP_Baoting message. Does not implicitly {@link SC_CP_Baoting.verify|verify} messages.
     * @param message SC_CP_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_Baoting message, length delimited. Does not implicitly {@link SC_CP_Baoting.verify|verify} messages.
     * @param message SC_CP_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_Baoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_Baoting;

    /**
     * Decodes a SC_CP_Baoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_Baoting;

    /**
     * Verifies a SC_CP_Baoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_Baoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_Baoting
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_Baoting;

    /**
     * Creates a plain object from a SC_CP_Baoting message. Also converts values to other types if specified.
     * @param message SC_CP_Baoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_Baoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_Baoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_Baoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33150
    }
}

/** Properties of a SC_CP_BaotingStatus. */
export interface ISC_CP_BaotingStatus {

    /** SC_CP_BaotingStatus baotingStatus */
    baotingStatus?: (ICP_BaotingStatus[]|null);

    /** SC_CP_BaotingStatus baotingInfo */
    baotingInfo?: (ICP_BaotingInfo[]|null);
}

/** Represents a SC_CP_BaotingStatus. */
export class SC_CP_BaotingStatus implements ISC_CP_BaotingStatus {

    /**
     * Constructs a new SC_CP_BaotingStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_BaotingStatus);

    /** SC_CP_BaotingStatus baotingStatus. */
    public baotingStatus: ICP_BaotingStatus[];

    /** SC_CP_BaotingStatus baotingInfo. */
    public baotingInfo: ICP_BaotingInfo[];

    /**
     * Creates a new SC_CP_BaotingStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_BaotingStatus instance
     */
    public static create(properties?: ISC_CP_BaotingStatus): SC_CP_BaotingStatus;

    /**
     * Encodes the specified SC_CP_BaotingStatus message. Does not implicitly {@link SC_CP_BaotingStatus.verify|verify} messages.
     * @param message SC_CP_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_BaotingStatus message, length delimited. Does not implicitly {@link SC_CP_BaotingStatus.verify|verify} messages.
     * @param message SC_CP_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_BaotingStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_BaotingStatus;

    /**
     * Decodes a SC_CP_BaotingStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_BaotingStatus;

    /**
     * Verifies a SC_CP_BaotingStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_BaotingStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_BaotingStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_BaotingStatus;

    /**
     * Creates a plain object from a SC_CP_BaotingStatus message. Also converts values to other types if specified.
     * @param message SC_CP_BaotingStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_BaotingStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_BaotingStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_BaotingStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33151
    }
}

/** Properties of a SC_CP_BaotingCommit. */
export interface ISC_CP_BaotingCommit {

    /** SC_CP_BaotingCommit baotings */
    baotings?: (ICP_BaotingInfo[]|null);
}

/** Represents a SC_CP_BaotingCommit. */
export class SC_CP_BaotingCommit implements ISC_CP_BaotingCommit {

    /**
     * Constructs a new SC_CP_BaotingCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_BaotingCommit);

    /** SC_CP_BaotingCommit baotings. */
    public baotings: ICP_BaotingInfo[];

    /**
     * Creates a new SC_CP_BaotingCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_BaotingCommit instance
     */
    public static create(properties?: ISC_CP_BaotingCommit): SC_CP_BaotingCommit;

    /**
     * Encodes the specified SC_CP_BaotingCommit message. Does not implicitly {@link SC_CP_BaotingCommit.verify|verify} messages.
     * @param message SC_CP_BaotingCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_BaotingCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_BaotingCommit message, length delimited. Does not implicitly {@link SC_CP_BaotingCommit.verify|verify} messages.
     * @param message SC_CP_BaotingCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_BaotingCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_BaotingCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_BaotingCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_BaotingCommit;

    /**
     * Decodes a SC_CP_BaotingCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_BaotingCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_BaotingCommit;

    /**
     * Verifies a SC_CP_BaotingCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_BaotingCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_BaotingCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_BaotingCommit;

    /**
     * Creates a plain object from a SC_CP_BaotingCommit message. Also converts values to other types if specified.
     * @param message SC_CP_BaotingCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_BaotingCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_BaotingCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_BaotingCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33152
    }
}

/** Properties of a SC_CP_BaoTingInfos. */
export interface ISC_CP_BaoTingInfos {

    /** SC_CP_BaoTingInfos canbaoting */
    canbaoting?: (number|null);

    /** SC_CP_BaoTingInfos ting */
    ting?: (ICP_TingTips[]|null);
}

/** Represents a SC_CP_BaoTingInfos. */
export class SC_CP_BaoTingInfos implements ISC_CP_BaoTingInfos {

    /**
     * Constructs a new SC_CP_BaoTingInfos.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CP_BaoTingInfos);

    /** SC_CP_BaoTingInfos canbaoting. */
    public canbaoting: number;

    /** SC_CP_BaoTingInfos ting. */
    public ting: ICP_TingTips[];

    /**
     * Creates a new SC_CP_BaoTingInfos instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CP_BaoTingInfos instance
     */
    public static create(properties?: ISC_CP_BaoTingInfos): SC_CP_BaoTingInfos;

    /**
     * Encodes the specified SC_CP_BaoTingInfos message. Does not implicitly {@link SC_CP_BaoTingInfos.verify|verify} messages.
     * @param message SC_CP_BaoTingInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CP_BaoTingInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CP_BaoTingInfos message, length delimited. Does not implicitly {@link SC_CP_BaoTingInfos.verify|verify} messages.
     * @param message SC_CP_BaoTingInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CP_BaoTingInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CP_BaoTingInfos message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CP_BaoTingInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CP_BaoTingInfos;

    /**
     * Decodes a SC_CP_BaoTingInfos message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CP_BaoTingInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CP_BaoTingInfos;

    /**
     * Verifies a SC_CP_BaoTingInfos message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CP_BaoTingInfos message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CP_BaoTingInfos
     */
    public static fromObject(object: { [k: string]: any }): SC_CP_BaoTingInfos;

    /**
     * Creates a plain object from a SC_CP_BaoTingInfos message. Also converts values to other types if specified.
     * @param message SC_CP_BaoTingInfos
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CP_BaoTingInfos, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CP_BaoTingInfos to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CP_BaoTingInfos {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 33153
    }
}

/** Properties of a C2S_CLUBLIST_REQ. */
export interface IC2S_CLUBLIST_REQ {

    /** C2S_CLUBLIST_REQ type */
    type?: (number|null);

    /** C2S_CLUBLIST_REQ ownedMyself */
    ownedMyself?: (boolean|null);
}

/** Represents a C2S_CLUBLIST_REQ. */
export class C2S_CLUBLIST_REQ implements IC2S_CLUBLIST_REQ {

    /**
     * Constructs a new C2S_CLUBLIST_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUBLIST_REQ);

    /** C2S_CLUBLIST_REQ type. */
    public type: number;

    /** C2S_CLUBLIST_REQ ownedMyself. */
    public ownedMyself: boolean;

    /**
     * Creates a new C2S_CLUBLIST_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUBLIST_REQ instance
     */
    public static create(properties?: IC2S_CLUBLIST_REQ): C2S_CLUBLIST_REQ;

    /**
     * Encodes the specified C2S_CLUBLIST_REQ message. Does not implicitly {@link C2S_CLUBLIST_REQ.verify|verify} messages.
     * @param message C2S_CLUBLIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUBLIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUBLIST_REQ message, length delimited. Does not implicitly {@link C2S_CLUBLIST_REQ.verify|verify} messages.
     * @param message C2S_CLUBLIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUBLIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUBLIST_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUBLIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUBLIST_REQ;

    /**
     * Decodes a C2S_CLUBLIST_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUBLIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUBLIST_REQ;

    /**
     * Verifies a C2S_CLUBLIST_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUBLIST_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUBLIST_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUBLIST_REQ;

    /**
     * Creates a plain object from a C2S_CLUBLIST_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUBLIST_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUBLIST_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUBLIST_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUBLIST_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14004
    }
}

/** Properties of a S2C_CLUBLIST_RES. */
export interface IS2C_CLUBLIST_RES {

    /** S2C_CLUBLIST_RES result */
    result?: (number|null);

    /** S2C_CLUBLIST_RES clubs */
    clubs?: (ICLUB_BASE_INFO[]|null);
}

/** Represents a S2C_CLUBLIST_RES. */
export class S2C_CLUBLIST_RES implements IS2C_CLUBLIST_RES {

    /**
     * Constructs a new S2C_CLUBLIST_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUBLIST_RES);

    /** S2C_CLUBLIST_RES result. */
    public result: number;

    /** S2C_CLUBLIST_RES clubs. */
    public clubs: ICLUB_BASE_INFO[];

    /**
     * Creates a new S2C_CLUBLIST_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUBLIST_RES instance
     */
    public static create(properties?: IS2C_CLUBLIST_RES): S2C_CLUBLIST_RES;

    /**
     * Encodes the specified S2C_CLUBLIST_RES message. Does not implicitly {@link S2C_CLUBLIST_RES.verify|verify} messages.
     * @param message S2C_CLUBLIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUBLIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUBLIST_RES message, length delimited. Does not implicitly {@link S2C_CLUBLIST_RES.verify|verify} messages.
     * @param message S2C_CLUBLIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUBLIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUBLIST_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUBLIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUBLIST_RES;

    /**
     * Decodes a S2C_CLUBLIST_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUBLIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUBLIST_RES;

    /**
     * Verifies a S2C_CLUBLIST_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUBLIST_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUBLIST_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUBLIST_RES;

    /**
     * Creates a plain object from a S2C_CLUBLIST_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUBLIST_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUBLIST_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUBLIST_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUBLIST_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14005
    }
}

/** Properties of a C2S_CREATE_CLUB_REQ. */
export interface IC2S_CREATE_CLUB_REQ {

    /** C2S_CREATE_CLUB_REQ info */
    info?: (ICLUB_BASE_INFO|null);
}

/** Represents a C2S_CREATE_CLUB_REQ. */
export class C2S_CREATE_CLUB_REQ implements IC2S_CREATE_CLUB_REQ {

    /**
     * Constructs a new C2S_CREATE_CLUB_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CREATE_CLUB_REQ);

    /** C2S_CREATE_CLUB_REQ info. */
    public info?: (ICLUB_BASE_INFO|null);

    /**
     * Creates a new C2S_CREATE_CLUB_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CREATE_CLUB_REQ instance
     */
    public static create(properties?: IC2S_CREATE_CLUB_REQ): C2S_CREATE_CLUB_REQ;

    /**
     * Encodes the specified C2S_CREATE_CLUB_REQ message. Does not implicitly {@link C2S_CREATE_CLUB_REQ.verify|verify} messages.
     * @param message C2S_CREATE_CLUB_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CREATE_CLUB_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CREATE_CLUB_REQ message, length delimited. Does not implicitly {@link C2S_CREATE_CLUB_REQ.verify|verify} messages.
     * @param message C2S_CREATE_CLUB_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CREATE_CLUB_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CREATE_CLUB_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CREATE_CLUB_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CREATE_CLUB_REQ;

    /**
     * Decodes a C2S_CREATE_CLUB_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CREATE_CLUB_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CREATE_CLUB_REQ;

    /**
     * Verifies a C2S_CREATE_CLUB_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CREATE_CLUB_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CREATE_CLUB_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CREATE_CLUB_REQ;

    /**
     * Creates a plain object from a C2S_CREATE_CLUB_REQ message. Also converts values to other types if specified.
     * @param message C2S_CREATE_CLUB_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CREATE_CLUB_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CREATE_CLUB_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CREATE_CLUB_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14006
    }
}

/** Properties of a S2C_CREATE_CLUB_RES. */
export interface IS2C_CREATE_CLUB_RES {

    /** S2C_CREATE_CLUB_RES result */
    result?: (number|null);

    /** S2C_CREATE_CLUB_RES clubId */
    clubId?: (number|null);
}

/** Represents a S2C_CREATE_CLUB_RES. */
export class S2C_CREATE_CLUB_RES implements IS2C_CREATE_CLUB_RES {

    /**
     * Constructs a new S2C_CREATE_CLUB_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CREATE_CLUB_RES);

    /** S2C_CREATE_CLUB_RES result. */
    public result: number;

    /** S2C_CREATE_CLUB_RES clubId. */
    public clubId: number;

    /**
     * Creates a new S2C_CREATE_CLUB_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CREATE_CLUB_RES instance
     */
    public static create(properties?: IS2C_CREATE_CLUB_RES): S2C_CREATE_CLUB_RES;

    /**
     * Encodes the specified S2C_CREATE_CLUB_RES message. Does not implicitly {@link S2C_CREATE_CLUB_RES.verify|verify} messages.
     * @param message S2C_CREATE_CLUB_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CREATE_CLUB_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CREATE_CLUB_RES message, length delimited. Does not implicitly {@link S2C_CREATE_CLUB_RES.verify|verify} messages.
     * @param message S2C_CREATE_CLUB_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CREATE_CLUB_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CREATE_CLUB_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CREATE_CLUB_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CREATE_CLUB_RES;

    /**
     * Decodes a S2C_CREATE_CLUB_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CREATE_CLUB_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CREATE_CLUB_RES;

    /**
     * Verifies a S2C_CREATE_CLUB_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CREATE_CLUB_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CREATE_CLUB_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CREATE_CLUB_RES;

    /**
     * Creates a plain object from a S2C_CREATE_CLUB_RES message. Also converts values to other types if specified.
     * @param message S2C_CREATE_CLUB_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CREATE_CLUB_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CREATE_CLUB_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CREATE_CLUB_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14007
    }
}

/** Properties of a C2S_JOIN_CLUB_REQ. */
export interface IC2S_JOIN_CLUB_REQ {

    /** C2S_JOIN_CLUB_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_JOIN_CLUB_REQ. */
export class C2S_JOIN_CLUB_REQ implements IC2S_JOIN_CLUB_REQ {

    /**
     * Constructs a new C2S_JOIN_CLUB_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_JOIN_CLUB_REQ);

    /** C2S_JOIN_CLUB_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_JOIN_CLUB_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_JOIN_CLUB_REQ instance
     */
    public static create(properties?: IC2S_JOIN_CLUB_REQ): C2S_JOIN_CLUB_REQ;

    /**
     * Encodes the specified C2S_JOIN_CLUB_REQ message. Does not implicitly {@link C2S_JOIN_CLUB_REQ.verify|verify} messages.
     * @param message C2S_JOIN_CLUB_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_JOIN_CLUB_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_JOIN_CLUB_REQ message, length delimited. Does not implicitly {@link C2S_JOIN_CLUB_REQ.verify|verify} messages.
     * @param message C2S_JOIN_CLUB_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_JOIN_CLUB_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_JOIN_CLUB_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_JOIN_CLUB_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_JOIN_CLUB_REQ;

    /**
     * Decodes a C2S_JOIN_CLUB_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_JOIN_CLUB_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_JOIN_CLUB_REQ;

    /**
     * Verifies a C2S_JOIN_CLUB_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_JOIN_CLUB_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_JOIN_CLUB_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_JOIN_CLUB_REQ;

    /**
     * Creates a plain object from a C2S_JOIN_CLUB_REQ message. Also converts values to other types if specified.
     * @param message C2S_JOIN_CLUB_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_JOIN_CLUB_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_JOIN_CLUB_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_JOIN_CLUB_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14010
    }
}

/** Properties of a S2C_JOIN_CLUB_RES. */
export interface IS2C_JOIN_CLUB_RES {

    /** S2C_JOIN_CLUB_RES result */
    result?: (number|null);
}

/** Represents a S2C_JOIN_CLUB_RES. */
export class S2C_JOIN_CLUB_RES implements IS2C_JOIN_CLUB_RES {

    /**
     * Constructs a new S2C_JOIN_CLUB_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_JOIN_CLUB_RES);

    /** S2C_JOIN_CLUB_RES result. */
    public result: number;

    /**
     * Creates a new S2C_JOIN_CLUB_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_JOIN_CLUB_RES instance
     */
    public static create(properties?: IS2C_JOIN_CLUB_RES): S2C_JOIN_CLUB_RES;

    /**
     * Encodes the specified S2C_JOIN_CLUB_RES message. Does not implicitly {@link S2C_JOIN_CLUB_RES.verify|verify} messages.
     * @param message S2C_JOIN_CLUB_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_JOIN_CLUB_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_JOIN_CLUB_RES message, length delimited. Does not implicitly {@link S2C_JOIN_CLUB_RES.verify|verify} messages.
     * @param message S2C_JOIN_CLUB_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_JOIN_CLUB_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_JOIN_CLUB_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_JOIN_CLUB_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_JOIN_CLUB_RES;

    /**
     * Decodes a S2C_JOIN_CLUB_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_JOIN_CLUB_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_JOIN_CLUB_RES;

    /**
     * Verifies a S2C_JOIN_CLUB_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_JOIN_CLUB_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_JOIN_CLUB_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_JOIN_CLUB_RES;

    /**
     * Creates a plain object from a S2C_JOIN_CLUB_RES message. Also converts values to other types if specified.
     * @param message S2C_JOIN_CLUB_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_JOIN_CLUB_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_JOIN_CLUB_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_JOIN_CLUB_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14011
    }
}

/** Properties of a C2S_CLUB_INFO_REQ. */
export interface IC2S_CLUB_INFO_REQ {

    /** C2S_CLUB_INFO_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_INFO_REQ. */
export class C2S_CLUB_INFO_REQ implements IC2S_CLUB_INFO_REQ {

    /**
     * Constructs a new C2S_CLUB_INFO_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_INFO_REQ);

    /** C2S_CLUB_INFO_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_INFO_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_INFO_REQ instance
     */
    public static create(properties?: IC2S_CLUB_INFO_REQ): C2S_CLUB_INFO_REQ;

    /**
     * Encodes the specified C2S_CLUB_INFO_REQ message. Does not implicitly {@link C2S_CLUB_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_INFO_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_INFO_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_INFO_REQ;

    /**
     * Decodes a C2S_CLUB_INFO_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_INFO_REQ;

    /**
     * Verifies a C2S_CLUB_INFO_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_INFO_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_INFO_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_INFO_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_INFO_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_INFO_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_INFO_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_INFO_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_INFO_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14016
    }
}

/** Properties of a S2C_CLUB_INFO_RES. */
export interface IS2C_CLUB_INFO_RES {

    /** S2C_CLUB_INFO_RES result */
    result?: (number|null);

    /** S2C_CLUB_INFO_RES selfInfo */
    selfInfo?: (ICLUB_TEAM_INFO|null);

    /** S2C_CLUB_INFO_RES myTeamInfo */
    myTeamInfo?: (ICLUB_MEMBER|null);

    /** S2C_CLUB_INFO_RES status */
    status?: (ICLUB_STATUS_INFO|null);

    /** S2C_CLUB_INFO_RES tableList */
    tableList?: (ITABLE_STATUS_INFO[]|null);

    /** S2C_CLUB_INFO_RES tableTemplates */
    tableTemplates?: (ICLUB_TABLE_TEMPLATE[]|null);

    /** S2C_CLUB_INFO_RES gamelist */
    gamelist?: (number[]|null);

    /** S2C_CLUB_INFO_RES root */
    root?: (number|null);

    /** S2C_CLUB_INFO_RES fastTemplates */
    fastTemplates?: ({ [k: string]: number }|null);

    /** S2C_CLUB_INFO_RES teamStatus */
    teamStatus?: (ITEAM_STATUS_INFO|null);

    /** S2C_CLUB_INFO_RES teamTemplateIds */
    teamTemplateIds?: (number[]|null);
}

/** Represents a S2C_CLUB_INFO_RES. */
export class S2C_CLUB_INFO_RES implements IS2C_CLUB_INFO_RES {

    /**
     * Constructs a new S2C_CLUB_INFO_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_INFO_RES);

    /** S2C_CLUB_INFO_RES result. */
    public result: number;

    /** S2C_CLUB_INFO_RES selfInfo. */
    public selfInfo?: (ICLUB_TEAM_INFO|null);

    /** S2C_CLUB_INFO_RES myTeamInfo. */
    public myTeamInfo?: (ICLUB_MEMBER|null);

    /** S2C_CLUB_INFO_RES status. */
    public status?: (ICLUB_STATUS_INFO|null);

    /** S2C_CLUB_INFO_RES tableList. */
    public tableList: ITABLE_STATUS_INFO[];

    /** S2C_CLUB_INFO_RES tableTemplates. */
    public tableTemplates: ICLUB_TABLE_TEMPLATE[];

    /** S2C_CLUB_INFO_RES gamelist. */
    public gamelist: number[];

    /** S2C_CLUB_INFO_RES root. */
    public root: number;

    /** S2C_CLUB_INFO_RES fastTemplates. */
    public fastTemplates: { [k: string]: number };

    /** S2C_CLUB_INFO_RES teamStatus. */
    public teamStatus?: (ITEAM_STATUS_INFO|null);

    /** S2C_CLUB_INFO_RES teamTemplateIds. */
    public teamTemplateIds: number[];

    /**
     * Creates a new S2C_CLUB_INFO_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_INFO_RES instance
     */
    public static create(properties?: IS2C_CLUB_INFO_RES): S2C_CLUB_INFO_RES;

    /**
     * Encodes the specified S2C_CLUB_INFO_RES message. Does not implicitly {@link S2C_CLUB_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_INFO_RES message, length delimited. Does not implicitly {@link S2C_CLUB_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_INFO_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_INFO_RES;

    /**
     * Decodes a S2C_CLUB_INFO_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_INFO_RES;

    /**
     * Verifies a S2C_CLUB_INFO_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_INFO_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_INFO_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_INFO_RES;

    /**
     * Creates a plain object from a S2C_CLUB_INFO_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_INFO_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_INFO_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_INFO_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_INFO_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14017
    }
}

/** Properties of a C2S_CLUB_PLAYER_LIST_REQ. */
export interface IC2S_CLUB_PLAYER_LIST_REQ {

    /** C2S_CLUB_PLAYER_LIST_REQ clubId */
    clubId?: (number|null);

    /** C2S_CLUB_PLAYER_LIST_REQ partner */
    partner?: (number|null);

    /** C2S_CLUB_PLAYER_LIST_REQ role */
    role?: (number|null);

    /** C2S_CLUB_PLAYER_LIST_REQ pageNum */
    pageNum?: (number|null);

    /** C2S_CLUB_PLAYER_LIST_REQ pageSize */
    pageSize?: (number|null);
}

/** Represents a C2S_CLUB_PLAYER_LIST_REQ. */
export class C2S_CLUB_PLAYER_LIST_REQ implements IC2S_CLUB_PLAYER_LIST_REQ {

    /**
     * Constructs a new C2S_CLUB_PLAYER_LIST_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_PLAYER_LIST_REQ);

    /** C2S_CLUB_PLAYER_LIST_REQ clubId. */
    public clubId: number;

    /** C2S_CLUB_PLAYER_LIST_REQ partner. */
    public partner: number;

    /** C2S_CLUB_PLAYER_LIST_REQ role. */
    public role: number;

    /** C2S_CLUB_PLAYER_LIST_REQ pageNum. */
    public pageNum: number;

    /** C2S_CLUB_PLAYER_LIST_REQ pageSize. */
    public pageSize: number;

    /**
     * Creates a new C2S_CLUB_PLAYER_LIST_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_PLAYER_LIST_REQ instance
     */
    public static create(properties?: IC2S_CLUB_PLAYER_LIST_REQ): C2S_CLUB_PLAYER_LIST_REQ;

    /**
     * Encodes the specified C2S_CLUB_PLAYER_LIST_REQ message. Does not implicitly {@link C2S_CLUB_PLAYER_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_PLAYER_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_PLAYER_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_PLAYER_LIST_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_PLAYER_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_PLAYER_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_PLAYER_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_PLAYER_LIST_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_PLAYER_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_PLAYER_LIST_REQ;

    /**
     * Decodes a C2S_CLUB_PLAYER_LIST_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_PLAYER_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_PLAYER_LIST_REQ;

    /**
     * Verifies a C2S_CLUB_PLAYER_LIST_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_PLAYER_LIST_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_PLAYER_LIST_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_PLAYER_LIST_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_PLAYER_LIST_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_PLAYER_LIST_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_PLAYER_LIST_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_PLAYER_LIST_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_PLAYER_LIST_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14024
    }
}

/** Properties of a S2C_CLUB_PLAYER_LIST_RES. */
export interface IS2C_CLUB_PLAYER_LIST_RES {

    /** S2C_CLUB_PLAYER_LIST_RES result */
    result?: (number|null);

    /** S2C_CLUB_PLAYER_LIST_RES clubId */
    clubId?: (number|null);

    /** S2C_CLUB_PLAYER_LIST_RES playerList */
    playerList?: (ICLUB_MEMBER[]|null);

    /** S2C_CLUB_PLAYER_LIST_RES role */
    role?: (number|null);

    /** S2C_CLUB_PLAYER_LIST_RES totalPage */
    totalPage?: (number|null);

    /** S2C_CLUB_PLAYER_LIST_RES pageNum */
    pageNum?: (number|null);
}

/** Represents a S2C_CLUB_PLAYER_LIST_RES. */
export class S2C_CLUB_PLAYER_LIST_RES implements IS2C_CLUB_PLAYER_LIST_RES {

    /**
     * Constructs a new S2C_CLUB_PLAYER_LIST_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_PLAYER_LIST_RES);

    /** S2C_CLUB_PLAYER_LIST_RES result. */
    public result: number;

    /** S2C_CLUB_PLAYER_LIST_RES clubId. */
    public clubId: number;

    /** S2C_CLUB_PLAYER_LIST_RES playerList. */
    public playerList: ICLUB_MEMBER[];

    /** S2C_CLUB_PLAYER_LIST_RES role. */
    public role: number;

    /** S2C_CLUB_PLAYER_LIST_RES totalPage. */
    public totalPage: number;

    /** S2C_CLUB_PLAYER_LIST_RES pageNum. */
    public pageNum: number;

    /**
     * Creates a new S2C_CLUB_PLAYER_LIST_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_PLAYER_LIST_RES instance
     */
    public static create(properties?: IS2C_CLUB_PLAYER_LIST_RES): S2C_CLUB_PLAYER_LIST_RES;

    /**
     * Encodes the specified S2C_CLUB_PLAYER_LIST_RES message. Does not implicitly {@link S2C_CLUB_PLAYER_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_PLAYER_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_PLAYER_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_PLAYER_LIST_RES message, length delimited. Does not implicitly {@link S2C_CLUB_PLAYER_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_PLAYER_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_PLAYER_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_PLAYER_LIST_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_PLAYER_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_PLAYER_LIST_RES;

    /**
     * Decodes a S2C_CLUB_PLAYER_LIST_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_PLAYER_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_PLAYER_LIST_RES;

    /**
     * Verifies a S2C_CLUB_PLAYER_LIST_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_PLAYER_LIST_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_PLAYER_LIST_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_PLAYER_LIST_RES;

    /**
     * Creates a plain object from a S2C_CLUB_PLAYER_LIST_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_PLAYER_LIST_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_PLAYER_LIST_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_PLAYER_LIST_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_PLAYER_LIST_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14025
    }
}

/** Properties of a C2S_CLUB_OP_REQ. */
export interface IC2S_CLUB_OP_REQ {

    /** C2S_CLUB_OP_REQ op */
    op?: (number|null);

    /** C2S_CLUB_OP_REQ clubId */
    clubId?: (number|null);

    /** C2S_CLUB_OP_REQ targetId */
    targetId?: (number|null);

    /** C2S_CLUB_OP_REQ requestId */
    requestId?: (number|null);

    /** C2S_CLUB_OP_REQ sid */
    sid?: (string|null);
}

/** Represents a C2S_CLUB_OP_REQ. */
export class C2S_CLUB_OP_REQ implements IC2S_CLUB_OP_REQ {

    /**
     * Constructs a new C2S_CLUB_OP_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_OP_REQ);

    /** C2S_CLUB_OP_REQ op. */
    public op: number;

    /** C2S_CLUB_OP_REQ clubId. */
    public clubId: number;

    /** C2S_CLUB_OP_REQ targetId. */
    public targetId: number;

    /** C2S_CLUB_OP_REQ requestId. */
    public requestId: number;

    /** C2S_CLUB_OP_REQ sid. */
    public sid: string;

    /**
     * Creates a new C2S_CLUB_OP_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_OP_REQ instance
     */
    public static create(properties?: IC2S_CLUB_OP_REQ): C2S_CLUB_OP_REQ;

    /**
     * Encodes the specified C2S_CLUB_OP_REQ message. Does not implicitly {@link C2S_CLUB_OP_REQ.verify|verify} messages.
     * @param message C2S_CLUB_OP_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_OP_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_OP_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_OP_REQ.verify|verify} messages.
     * @param message C2S_CLUB_OP_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_OP_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_OP_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_OP_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_OP_REQ;

    /**
     * Decodes a C2S_CLUB_OP_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_OP_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_OP_REQ;

    /**
     * Verifies a C2S_CLUB_OP_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_OP_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_OP_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_OP_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_OP_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_OP_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_OP_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_OP_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_OP_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14027
    }

    /** C2S_CLUB_OP_TYPE enum. */
    enum C2S_CLUB_OP_TYPE {
        NONE = 0,
        FORBID_GAME = 1,
        CANCEL_FORBID = 2,
        ADD_ADMIN = 3,
        REMOVE_ADMIN = 4,
        ADD_PARTNER = 5,
        REMOVE_PARTNER = 6,
        BLOCK_CLUB = 7,
        UNBLOCK_CLUB = 8,
        EXIT_AGREED = 9,
        JOIN_AGREED = 10,
        JOIN_REJECTED = 11,
        APPLY_EXIT = 12,
        CLOSE_CLUB = 13,
        OPEN_CLUB = 14,
        DISMISS_CLUB = 15,
        BLOCK_TEAM = 16,
        UNBLOCK_TEAM = 17
    }
}

/** Properties of a S2C_CLUB_OP_RES. */
export interface IS2C_CLUB_OP_RES {

    /** S2C_CLUB_OP_RES result */
    result?: (number|null);

    /** S2C_CLUB_OP_RES op */
    op?: (number|null);

    /** S2C_CLUB_OP_RES targetId */
    targetId?: (number|null);
}

/** Represents a S2C_CLUB_OP_RES. */
export class S2C_CLUB_OP_RES implements IS2C_CLUB_OP_RES {

    /**
     * Constructs a new S2C_CLUB_OP_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_OP_RES);

    /** S2C_CLUB_OP_RES result. */
    public result: number;

    /** S2C_CLUB_OP_RES op. */
    public op: number;

    /** S2C_CLUB_OP_RES targetId. */
    public targetId: number;

    /**
     * Creates a new S2C_CLUB_OP_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_OP_RES instance
     */
    public static create(properties?: IS2C_CLUB_OP_RES): S2C_CLUB_OP_RES;

    /**
     * Encodes the specified S2C_CLUB_OP_RES message. Does not implicitly {@link S2C_CLUB_OP_RES.verify|verify} messages.
     * @param message S2C_CLUB_OP_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_OP_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_OP_RES message, length delimited. Does not implicitly {@link S2C_CLUB_OP_RES.verify|verify} messages.
     * @param message S2C_CLUB_OP_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_OP_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_OP_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_OP_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_OP_RES;

    /**
     * Decodes a S2C_CLUB_OP_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_OP_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_OP_RES;

    /**
     * Verifies a S2C_CLUB_OP_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_OP_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_OP_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_OP_RES;

    /**
     * Creates a plain object from a S2C_CLUB_OP_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_OP_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_OP_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_OP_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_OP_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14028
    }
}

/** Properties of a C2S_CLUB_PLAYER_INFO_REQ. */
export interface IC2S_CLUB_PLAYER_INFO_REQ {

    /** C2S_CLUB_PLAYER_INFO_REQ guid */
    guid?: (number|null);

    /** C2S_CLUB_PLAYER_INFO_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_PLAYER_INFO_REQ. */
export class C2S_CLUB_PLAYER_INFO_REQ implements IC2S_CLUB_PLAYER_INFO_REQ {

    /**
     * Constructs a new C2S_CLUB_PLAYER_INFO_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_PLAYER_INFO_REQ);

    /** C2S_CLUB_PLAYER_INFO_REQ guid. */
    public guid: number;

    /** C2S_CLUB_PLAYER_INFO_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_PLAYER_INFO_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_PLAYER_INFO_REQ instance
     */
    public static create(properties?: IC2S_CLUB_PLAYER_INFO_REQ): C2S_CLUB_PLAYER_INFO_REQ;

    /**
     * Encodes the specified C2S_CLUB_PLAYER_INFO_REQ message. Does not implicitly {@link C2S_CLUB_PLAYER_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_PLAYER_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_PLAYER_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_PLAYER_INFO_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_PLAYER_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_PLAYER_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_PLAYER_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_PLAYER_INFO_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_PLAYER_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_PLAYER_INFO_REQ;

    /**
     * Decodes a C2S_CLUB_PLAYER_INFO_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_PLAYER_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_PLAYER_INFO_REQ;

    /**
     * Verifies a C2S_CLUB_PLAYER_INFO_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_PLAYER_INFO_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_PLAYER_INFO_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_PLAYER_INFO_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_PLAYER_INFO_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_PLAYER_INFO_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_PLAYER_INFO_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_PLAYER_INFO_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_PLAYER_INFO_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14031
    }
}

/** Properties of a S2C_CLUB_PLAYER_INFO_RES. */
export interface IS2C_CLUB_PLAYER_INFO_RES {

    /** S2C_CLUB_PLAYER_INFO_RES result */
    result?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES baseInfo */
    baseInfo?: (IPLAYER_BASE_INFO|null);

    /** S2C_CLUB_PLAYER_INFO_RES zhan */
    zhan?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES clubScore */
    clubScore?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES gameCount */
    gameCount?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES lastLoginTime */
    lastLoginTime?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES lastGameTime */
    lastGameTime?: (number|null);

    /** S2C_CLUB_PLAYER_INFO_RES isInBlackList */
    isInBlackList?: (boolean|null);

    /** S2C_CLUB_PLAYER_INFO_RES roleType */
    roleType?: (CLUB_ROLE_TYPE|null);
}

/** Represents a S2C_CLUB_PLAYER_INFO_RES. */
export class S2C_CLUB_PLAYER_INFO_RES implements IS2C_CLUB_PLAYER_INFO_RES {

    /**
     * Constructs a new S2C_CLUB_PLAYER_INFO_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_PLAYER_INFO_RES);

    /** S2C_CLUB_PLAYER_INFO_RES result. */
    public result: number;

    /** S2C_CLUB_PLAYER_INFO_RES baseInfo. */
    public baseInfo?: (IPLAYER_BASE_INFO|null);

    /** S2C_CLUB_PLAYER_INFO_RES zhan. */
    public zhan: number;

    /** S2C_CLUB_PLAYER_INFO_RES clubScore. */
    public clubScore: number;

    /** S2C_CLUB_PLAYER_INFO_RES gameCount. */
    public gameCount: number;

    /** S2C_CLUB_PLAYER_INFO_RES lastLoginTime. */
    public lastLoginTime: number;

    /** S2C_CLUB_PLAYER_INFO_RES lastGameTime. */
    public lastGameTime: number;

    /** S2C_CLUB_PLAYER_INFO_RES isInBlackList. */
    public isInBlackList: boolean;

    /** S2C_CLUB_PLAYER_INFO_RES roleType. */
    public roleType: CLUB_ROLE_TYPE;

    /**
     * Creates a new S2C_CLUB_PLAYER_INFO_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_PLAYER_INFO_RES instance
     */
    public static create(properties?: IS2C_CLUB_PLAYER_INFO_RES): S2C_CLUB_PLAYER_INFO_RES;

    /**
     * Encodes the specified S2C_CLUB_PLAYER_INFO_RES message. Does not implicitly {@link S2C_CLUB_PLAYER_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_PLAYER_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_PLAYER_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_PLAYER_INFO_RES message, length delimited. Does not implicitly {@link S2C_CLUB_PLAYER_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_PLAYER_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_PLAYER_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_PLAYER_INFO_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_PLAYER_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_PLAYER_INFO_RES;

    /**
     * Decodes a S2C_CLUB_PLAYER_INFO_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_PLAYER_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_PLAYER_INFO_RES;

    /**
     * Verifies a S2C_CLUB_PLAYER_INFO_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_PLAYER_INFO_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_PLAYER_INFO_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_PLAYER_INFO_RES;

    /**
     * Creates a plain object from a S2C_CLUB_PLAYER_INFO_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_PLAYER_INFO_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_PLAYER_INFO_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_PLAYER_INFO_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_PLAYER_INFO_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14032
    }
}

/** Properties of a C2S_CLUB_DISMISS_REQ. */
export interface IC2S_CLUB_DISMISS_REQ {

    /** C2S_CLUB_DISMISS_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_DISMISS_REQ. */
export class C2S_CLUB_DISMISS_REQ implements IC2S_CLUB_DISMISS_REQ {

    /**
     * Constructs a new C2S_CLUB_DISMISS_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_DISMISS_REQ);

    /** C2S_CLUB_DISMISS_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_DISMISS_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_DISMISS_REQ instance
     */
    public static create(properties?: IC2S_CLUB_DISMISS_REQ): C2S_CLUB_DISMISS_REQ;

    /**
     * Encodes the specified C2S_CLUB_DISMISS_REQ message. Does not implicitly {@link C2S_CLUB_DISMISS_REQ.verify|verify} messages.
     * @param message C2S_CLUB_DISMISS_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_DISMISS_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_DISMISS_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_DISMISS_REQ.verify|verify} messages.
     * @param message C2S_CLUB_DISMISS_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_DISMISS_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_DISMISS_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_DISMISS_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_DISMISS_REQ;

    /**
     * Decodes a C2S_CLUB_DISMISS_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_DISMISS_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_DISMISS_REQ;

    /**
     * Verifies a C2S_CLUB_DISMISS_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_DISMISS_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_DISMISS_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_DISMISS_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_DISMISS_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_DISMISS_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_DISMISS_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_DISMISS_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_DISMISS_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14039
    }
}

/** Properties of a S2C_CLUB_DISMISS_RES. */
export interface IS2C_CLUB_DISMISS_RES {

    /** S2C_CLUB_DISMISS_RES result */
    result?: (number|null);

    /** S2C_CLUB_DISMISS_RES clubId */
    clubId?: (number|null);
}

/** Represents a S2C_CLUB_DISMISS_RES. */
export class S2C_CLUB_DISMISS_RES implements IS2C_CLUB_DISMISS_RES {

    /**
     * Constructs a new S2C_CLUB_DISMISS_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_DISMISS_RES);

    /** S2C_CLUB_DISMISS_RES result. */
    public result: number;

    /** S2C_CLUB_DISMISS_RES clubId. */
    public clubId: number;

    /**
     * Creates a new S2C_CLUB_DISMISS_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_DISMISS_RES instance
     */
    public static create(properties?: IS2C_CLUB_DISMISS_RES): S2C_CLUB_DISMISS_RES;

    /**
     * Encodes the specified S2C_CLUB_DISMISS_RES message. Does not implicitly {@link S2C_CLUB_DISMISS_RES.verify|verify} messages.
     * @param message S2C_CLUB_DISMISS_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_DISMISS_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_DISMISS_RES message, length delimited. Does not implicitly {@link S2C_CLUB_DISMISS_RES.verify|verify} messages.
     * @param message S2C_CLUB_DISMISS_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_DISMISS_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_DISMISS_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_DISMISS_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_DISMISS_RES;

    /**
     * Decodes a S2C_CLUB_DISMISS_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_DISMISS_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_DISMISS_RES;

    /**
     * Verifies a S2C_CLUB_DISMISS_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_DISMISS_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_DISMISS_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_DISMISS_RES;

    /**
     * Creates a plain object from a S2C_CLUB_DISMISS_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_DISMISS_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_DISMISS_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_DISMISS_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_DISMISS_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14040
    }
}

/** Properties of a C2S_CLUB_KICK_PLAYER_REQ. */
export interface IC2S_CLUB_KICK_PLAYER_REQ {

    /** C2S_CLUB_KICK_PLAYER_REQ clubId */
    clubId?: (number|null);

    /** C2S_CLUB_KICK_PLAYER_REQ chairId */
    chairId?: (number|null);

    /** C2S_CLUB_KICK_PLAYER_REQ tableId */
    tableId?: (number|null);

    /** C2S_CLUB_KICK_PLAYER_REQ guid */
    guid?: (number|null);
}

/** Represents a C2S_CLUB_KICK_PLAYER_REQ. */
export class C2S_CLUB_KICK_PLAYER_REQ implements IC2S_CLUB_KICK_PLAYER_REQ {

    /**
     * Constructs a new C2S_CLUB_KICK_PLAYER_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_KICK_PLAYER_REQ);

    /** C2S_CLUB_KICK_PLAYER_REQ clubId. */
    public clubId: number;

    /** C2S_CLUB_KICK_PLAYER_REQ chairId. */
    public chairId: number;

    /** C2S_CLUB_KICK_PLAYER_REQ tableId. */
    public tableId: number;

    /** C2S_CLUB_KICK_PLAYER_REQ guid. */
    public guid: number;

    /**
     * Creates a new C2S_CLUB_KICK_PLAYER_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_KICK_PLAYER_REQ instance
     */
    public static create(properties?: IC2S_CLUB_KICK_PLAYER_REQ): C2S_CLUB_KICK_PLAYER_REQ;

    /**
     * Encodes the specified C2S_CLUB_KICK_PLAYER_REQ message. Does not implicitly {@link C2S_CLUB_KICK_PLAYER_REQ.verify|verify} messages.
     * @param message C2S_CLUB_KICK_PLAYER_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_KICK_PLAYER_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_KICK_PLAYER_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_KICK_PLAYER_REQ.verify|verify} messages.
     * @param message C2S_CLUB_KICK_PLAYER_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_KICK_PLAYER_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_KICK_PLAYER_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_KICK_PLAYER_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_KICK_PLAYER_REQ;

    /**
     * Decodes a C2S_CLUB_KICK_PLAYER_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_KICK_PLAYER_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_KICK_PLAYER_REQ;

    /**
     * Verifies a C2S_CLUB_KICK_PLAYER_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_KICK_PLAYER_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_KICK_PLAYER_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_KICK_PLAYER_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_KICK_PLAYER_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_KICK_PLAYER_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_KICK_PLAYER_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_KICK_PLAYER_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_KICK_PLAYER_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14046
    }
}

/** Properties of a S2C_CLUB_KICK_PLAYER_RES. */
export interface IS2C_CLUB_KICK_PLAYER_RES {

    /** S2C_CLUB_KICK_PLAYER_RES result */
    result?: (number|null);

    /** S2C_CLUB_KICK_PLAYER_RES guid */
    guid?: (number|null);
}

/** Represents a S2C_CLUB_KICK_PLAYER_RES. */
export class S2C_CLUB_KICK_PLAYER_RES implements IS2C_CLUB_KICK_PLAYER_RES {

    /**
     * Constructs a new S2C_CLUB_KICK_PLAYER_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_KICK_PLAYER_RES);

    /** S2C_CLUB_KICK_PLAYER_RES result. */
    public result: number;

    /** S2C_CLUB_KICK_PLAYER_RES guid. */
    public guid: number;

    /**
     * Creates a new S2C_CLUB_KICK_PLAYER_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_KICK_PLAYER_RES instance
     */
    public static create(properties?: IS2C_CLUB_KICK_PLAYER_RES): S2C_CLUB_KICK_PLAYER_RES;

    /**
     * Encodes the specified S2C_CLUB_KICK_PLAYER_RES message. Does not implicitly {@link S2C_CLUB_KICK_PLAYER_RES.verify|verify} messages.
     * @param message S2C_CLUB_KICK_PLAYER_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_KICK_PLAYER_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_KICK_PLAYER_RES message, length delimited. Does not implicitly {@link S2C_CLUB_KICK_PLAYER_RES.verify|verify} messages.
     * @param message S2C_CLUB_KICK_PLAYER_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_KICK_PLAYER_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_KICK_PLAYER_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_KICK_PLAYER_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_KICK_PLAYER_RES;

    /**
     * Decodes a S2C_CLUB_KICK_PLAYER_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_KICK_PLAYER_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_KICK_PLAYER_RES;

    /**
     * Verifies a S2C_CLUB_KICK_PLAYER_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_KICK_PLAYER_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_KICK_PLAYER_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_KICK_PLAYER_RES;

    /**
     * Creates a plain object from a S2C_CLUB_KICK_PLAYER_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_KICK_PLAYER_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_KICK_PLAYER_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_KICK_PLAYER_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_KICK_PLAYER_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14047
    }
}

/** Properties of a S2C_SYNC_TABLES_RES. */
export interface IS2C_SYNC_TABLES_RES {

    /** S2C_SYNC_TABLES_RES clubId */
    clubId?: (number|null);

    /** S2C_SYNC_TABLES_RES roomInfo */
    roomInfo?: (ITABLE_STATUS_INFO|null);

    /** S2C_SYNC_TABLES_RES syncRoomId */
    syncRoomId?: (number|null);

    /** S2C_SYNC_TABLES_RES syncTableId */
    syncTableId?: (number|null);

    /** S2C_SYNC_TABLES_RES syncType */
    syncType?: (SYNC_TYPE|null);

    /** S2C_SYNC_TABLES_RES rootClub */
    rootClub?: (number|null);
}

/** Represents a S2C_SYNC_TABLES_RES. */
export class S2C_SYNC_TABLES_RES implements IS2C_SYNC_TABLES_RES {

    /**
     * Constructs a new S2C_SYNC_TABLES_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_SYNC_TABLES_RES);

    /** S2C_SYNC_TABLES_RES clubId. */
    public clubId: number;

    /** S2C_SYNC_TABLES_RES roomInfo. */
    public roomInfo?: (ITABLE_STATUS_INFO|null);

    /** S2C_SYNC_TABLES_RES syncRoomId. */
    public syncRoomId: number;

    /** S2C_SYNC_TABLES_RES syncTableId. */
    public syncTableId: number;

    /** S2C_SYNC_TABLES_RES syncType. */
    public syncType: SYNC_TYPE;

    /** S2C_SYNC_TABLES_RES rootClub. */
    public rootClub: number;

    /**
     * Creates a new S2C_SYNC_TABLES_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_SYNC_TABLES_RES instance
     */
    public static create(properties?: IS2C_SYNC_TABLES_RES): S2C_SYNC_TABLES_RES;

    /**
     * Encodes the specified S2C_SYNC_TABLES_RES message. Does not implicitly {@link S2C_SYNC_TABLES_RES.verify|verify} messages.
     * @param message S2C_SYNC_TABLES_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_SYNC_TABLES_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_SYNC_TABLES_RES message, length delimited. Does not implicitly {@link S2C_SYNC_TABLES_RES.verify|verify} messages.
     * @param message S2C_SYNC_TABLES_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_SYNC_TABLES_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_SYNC_TABLES_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_SYNC_TABLES_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_SYNC_TABLES_RES;

    /**
     * Decodes a S2C_SYNC_TABLES_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_SYNC_TABLES_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_SYNC_TABLES_RES;

    /**
     * Verifies a S2C_SYNC_TABLES_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_SYNC_TABLES_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_SYNC_TABLES_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_SYNC_TABLES_RES;

    /**
     * Creates a plain object from a S2C_SYNC_TABLES_RES message. Also converts values to other types if specified.
     * @param message S2C_SYNC_TABLES_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_SYNC_TABLES_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_SYNC_TABLES_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_SYNC_TABLES_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14051
    }
}

/** Properties of a C2S_EDIT_TABLE_TEMPLATE. */
export interface IC2S_EDIT_TABLE_TEMPLATE {

    /** C2S_EDIT_TABLE_TEMPLATE template */
    template?: (ICLUB_TABLE_TEMPLATE|null);

    /** C2S_EDIT_TABLE_TEMPLATE editOp */
    editOp?: (number|null);
}

/** Represents a C2S_EDIT_TABLE_TEMPLATE. */
export class C2S_EDIT_TABLE_TEMPLATE implements IC2S_EDIT_TABLE_TEMPLATE {

    /**
     * Constructs a new C2S_EDIT_TABLE_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_EDIT_TABLE_TEMPLATE);

    /** C2S_EDIT_TABLE_TEMPLATE template. */
    public template?: (ICLUB_TABLE_TEMPLATE|null);

    /** C2S_EDIT_TABLE_TEMPLATE editOp. */
    public editOp: number;

    /**
     * Creates a new C2S_EDIT_TABLE_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_EDIT_TABLE_TEMPLATE instance
     */
    public static create(properties?: IC2S_EDIT_TABLE_TEMPLATE): C2S_EDIT_TABLE_TEMPLATE;

    /**
     * Encodes the specified C2S_EDIT_TABLE_TEMPLATE message. Does not implicitly {@link C2S_EDIT_TABLE_TEMPLATE.verify|verify} messages.
     * @param message C2S_EDIT_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_EDIT_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_EDIT_TABLE_TEMPLATE message, length delimited. Does not implicitly {@link C2S_EDIT_TABLE_TEMPLATE.verify|verify} messages.
     * @param message C2S_EDIT_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_EDIT_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_EDIT_TABLE_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_EDIT_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_EDIT_TABLE_TEMPLATE;

    /**
     * Decodes a C2S_EDIT_TABLE_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_EDIT_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_EDIT_TABLE_TEMPLATE;

    /**
     * Verifies a C2S_EDIT_TABLE_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_EDIT_TABLE_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_EDIT_TABLE_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): C2S_EDIT_TABLE_TEMPLATE;

    /**
     * Creates a plain object from a C2S_EDIT_TABLE_TEMPLATE message. Also converts values to other types if specified.
     * @param message C2S_EDIT_TABLE_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_EDIT_TABLE_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_EDIT_TABLE_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_EDIT_TABLE_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14061
    }
}

/** Properties of a S2C_EDIT_TABLE_TEMPLATE. */
export interface IS2C_EDIT_TABLE_TEMPLATE {

    /** S2C_EDIT_TABLE_TEMPLATE result */
    result?: (number|null);

    /** S2C_EDIT_TABLE_TEMPLATE template */
    template?: (ICLUB_TABLE_TEMPLATE|null);
}

/** Represents a S2C_EDIT_TABLE_TEMPLATE. */
export class S2C_EDIT_TABLE_TEMPLATE implements IS2C_EDIT_TABLE_TEMPLATE {

    /**
     * Constructs a new S2C_EDIT_TABLE_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_EDIT_TABLE_TEMPLATE);

    /** S2C_EDIT_TABLE_TEMPLATE result. */
    public result: number;

    /** S2C_EDIT_TABLE_TEMPLATE template. */
    public template?: (ICLUB_TABLE_TEMPLATE|null);

    /**
     * Creates a new S2C_EDIT_TABLE_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_EDIT_TABLE_TEMPLATE instance
     */
    public static create(properties?: IS2C_EDIT_TABLE_TEMPLATE): S2C_EDIT_TABLE_TEMPLATE;

    /**
     * Encodes the specified S2C_EDIT_TABLE_TEMPLATE message. Does not implicitly {@link S2C_EDIT_TABLE_TEMPLATE.verify|verify} messages.
     * @param message S2C_EDIT_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_EDIT_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_EDIT_TABLE_TEMPLATE message, length delimited. Does not implicitly {@link S2C_EDIT_TABLE_TEMPLATE.verify|verify} messages.
     * @param message S2C_EDIT_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_EDIT_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_EDIT_TABLE_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_EDIT_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_EDIT_TABLE_TEMPLATE;

    /**
     * Decodes a S2C_EDIT_TABLE_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_EDIT_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_EDIT_TABLE_TEMPLATE;

    /**
     * Verifies a S2C_EDIT_TABLE_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_EDIT_TABLE_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_EDIT_TABLE_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): S2C_EDIT_TABLE_TEMPLATE;

    /**
     * Creates a plain object from a S2C_EDIT_TABLE_TEMPLATE message. Also converts values to other types if specified.
     * @param message S2C_EDIT_TABLE_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_EDIT_TABLE_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_EDIT_TABLE_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_EDIT_TABLE_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14062
    }
}

/** Properties of a S2C_NOTIFY_TABLE_TEMPLATE. */
export interface IS2C_NOTIFY_TABLE_TEMPLATE {

    /** S2C_NOTIFY_TABLE_TEMPLATE sync */
    sync?: (SYNC_TYPE|null);

    /** S2C_NOTIFY_TABLE_TEMPLATE template */
    template?: (ICLUB_TABLE_TEMPLATE|null);

    /** S2C_NOTIFY_TABLE_TEMPLATE rootClub */
    rootClub?: (number|null);
}

/** Represents a S2C_NOTIFY_TABLE_TEMPLATE. */
export class S2C_NOTIFY_TABLE_TEMPLATE implements IS2C_NOTIFY_TABLE_TEMPLATE {

    /**
     * Constructs a new S2C_NOTIFY_TABLE_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_NOTIFY_TABLE_TEMPLATE);

    /** S2C_NOTIFY_TABLE_TEMPLATE sync. */
    public sync: SYNC_TYPE;

    /** S2C_NOTIFY_TABLE_TEMPLATE template. */
    public template?: (ICLUB_TABLE_TEMPLATE|null);

    /** S2C_NOTIFY_TABLE_TEMPLATE rootClub. */
    public rootClub: number;

    /**
     * Creates a new S2C_NOTIFY_TABLE_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_NOTIFY_TABLE_TEMPLATE instance
     */
    public static create(properties?: IS2C_NOTIFY_TABLE_TEMPLATE): S2C_NOTIFY_TABLE_TEMPLATE;

    /**
     * Encodes the specified S2C_NOTIFY_TABLE_TEMPLATE message. Does not implicitly {@link S2C_NOTIFY_TABLE_TEMPLATE.verify|verify} messages.
     * @param message S2C_NOTIFY_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_NOTIFY_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_NOTIFY_TABLE_TEMPLATE message, length delimited. Does not implicitly {@link S2C_NOTIFY_TABLE_TEMPLATE.verify|verify} messages.
     * @param message S2C_NOTIFY_TABLE_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_NOTIFY_TABLE_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_NOTIFY_TABLE_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_NOTIFY_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_NOTIFY_TABLE_TEMPLATE;

    /**
     * Decodes a S2C_NOTIFY_TABLE_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_NOTIFY_TABLE_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_NOTIFY_TABLE_TEMPLATE;

    /**
     * Verifies a S2C_NOTIFY_TABLE_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_NOTIFY_TABLE_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_NOTIFY_TABLE_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): S2C_NOTIFY_TABLE_TEMPLATE;

    /**
     * Creates a plain object from a S2C_NOTIFY_TABLE_TEMPLATE message. Also converts values to other types if specified.
     * @param message S2C_NOTIFY_TABLE_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_NOTIFY_TABLE_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_NOTIFY_TABLE_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_NOTIFY_TABLE_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14063
    }
}

/** Properties of a C2S_CREATE_CLUB_WITH_INVITE_MAIL. */
export interface IC2S_CREATE_CLUB_WITH_INVITE_MAIL {

    /** C2S_CREATE_CLUB_WITH_INVITE_MAIL mailId */
    mailId?: (string|null);

    /** C2S_CREATE_CLUB_WITH_INVITE_MAIL clubInfo */
    clubInfo?: (ICLUB_BASE_INFO|null);
}

/** Represents a C2S_CREATE_CLUB_WITH_INVITE_MAIL. */
export class C2S_CREATE_CLUB_WITH_INVITE_MAIL implements IC2S_CREATE_CLUB_WITH_INVITE_MAIL {

    /**
     * Constructs a new C2S_CREATE_CLUB_WITH_INVITE_MAIL.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CREATE_CLUB_WITH_INVITE_MAIL);

    /** C2S_CREATE_CLUB_WITH_INVITE_MAIL mailId. */
    public mailId: string;

    /** C2S_CREATE_CLUB_WITH_INVITE_MAIL clubInfo. */
    public clubInfo?: (ICLUB_BASE_INFO|null);

    /**
     * Creates a new C2S_CREATE_CLUB_WITH_INVITE_MAIL instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CREATE_CLUB_WITH_INVITE_MAIL instance
     */
    public static create(properties?: IC2S_CREATE_CLUB_WITH_INVITE_MAIL): C2S_CREATE_CLUB_WITH_INVITE_MAIL;

    /**
     * Encodes the specified C2S_CREATE_CLUB_WITH_INVITE_MAIL message. Does not implicitly {@link C2S_CREATE_CLUB_WITH_INVITE_MAIL.verify|verify} messages.
     * @param message C2S_CREATE_CLUB_WITH_INVITE_MAIL message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CREATE_CLUB_WITH_INVITE_MAIL, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CREATE_CLUB_WITH_INVITE_MAIL message, length delimited. Does not implicitly {@link C2S_CREATE_CLUB_WITH_INVITE_MAIL.verify|verify} messages.
     * @param message C2S_CREATE_CLUB_WITH_INVITE_MAIL message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CREATE_CLUB_WITH_INVITE_MAIL, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CREATE_CLUB_WITH_INVITE_MAIL message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CREATE_CLUB_WITH_INVITE_MAIL
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CREATE_CLUB_WITH_INVITE_MAIL;

    /**
     * Decodes a C2S_CREATE_CLUB_WITH_INVITE_MAIL message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CREATE_CLUB_WITH_INVITE_MAIL
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CREATE_CLUB_WITH_INVITE_MAIL;

    /**
     * Verifies a C2S_CREATE_CLUB_WITH_INVITE_MAIL message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CREATE_CLUB_WITH_INVITE_MAIL message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CREATE_CLUB_WITH_INVITE_MAIL
     */
    public static fromObject(object: { [k: string]: any }): C2S_CREATE_CLUB_WITH_INVITE_MAIL;

    /**
     * Creates a plain object from a C2S_CREATE_CLUB_WITH_INVITE_MAIL message. Also converts values to other types if specified.
     * @param message C2S_CREATE_CLUB_WITH_INVITE_MAIL
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CREATE_CLUB_WITH_INVITE_MAIL, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CREATE_CLUB_WITH_INVITE_MAIL to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CREATE_CLUB_WITH_INVITE_MAIL {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14064
    }
}

/** Properties of a C2S_INVITE_JOIN_CLUB. */
export interface IC2S_INVITE_JOIN_CLUB {

    /** C2S_INVITE_JOIN_CLUB invitee */
    invitee?: (number|null);

    /** C2S_INVITE_JOIN_CLUB inviterClub */
    inviterClub?: (number|null);

    /** C2S_INVITE_JOIN_CLUB inviteType */
    inviteType?: (string|null);
}

/** Represents a C2S_INVITE_JOIN_CLUB. */
export class C2S_INVITE_JOIN_CLUB implements IC2S_INVITE_JOIN_CLUB {

    /**
     * Constructs a new C2S_INVITE_JOIN_CLUB.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_INVITE_JOIN_CLUB);

    /** C2S_INVITE_JOIN_CLUB invitee. */
    public invitee: number;

    /** C2S_INVITE_JOIN_CLUB inviterClub. */
    public inviterClub: number;

    /** C2S_INVITE_JOIN_CLUB inviteType. */
    public inviteType: string;

    /**
     * Creates a new C2S_INVITE_JOIN_CLUB instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_INVITE_JOIN_CLUB instance
     */
    public static create(properties?: IC2S_INVITE_JOIN_CLUB): C2S_INVITE_JOIN_CLUB;

    /**
     * Encodes the specified C2S_INVITE_JOIN_CLUB message. Does not implicitly {@link C2S_INVITE_JOIN_CLUB.verify|verify} messages.
     * @param message C2S_INVITE_JOIN_CLUB message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_INVITE_JOIN_CLUB, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_INVITE_JOIN_CLUB message, length delimited. Does not implicitly {@link C2S_INVITE_JOIN_CLUB.verify|verify} messages.
     * @param message C2S_INVITE_JOIN_CLUB message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_INVITE_JOIN_CLUB, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_INVITE_JOIN_CLUB message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_INVITE_JOIN_CLUB
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_INVITE_JOIN_CLUB;

    /**
     * Decodes a C2S_INVITE_JOIN_CLUB message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_INVITE_JOIN_CLUB
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_INVITE_JOIN_CLUB;

    /**
     * Verifies a C2S_INVITE_JOIN_CLUB message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_INVITE_JOIN_CLUB message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_INVITE_JOIN_CLUB
     */
    public static fromObject(object: { [k: string]: any }): C2S_INVITE_JOIN_CLUB;

    /**
     * Creates a plain object from a C2S_INVITE_JOIN_CLUB message. Also converts values to other types if specified.
     * @param message C2S_INVITE_JOIN_CLUB
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_INVITE_JOIN_CLUB, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_INVITE_JOIN_CLUB to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_INVITE_JOIN_CLUB {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14065
    }
}

/** Properties of a S2C_INVITE_JOIN_CLUB. */
export interface IS2C_INVITE_JOIN_CLUB {

    /** S2C_INVITE_JOIN_CLUB result */
    result?: (number|null);
}

/** Represents a S2C_INVITE_JOIN_CLUB. */
export class S2C_INVITE_JOIN_CLUB implements IS2C_INVITE_JOIN_CLUB {

    /**
     * Constructs a new S2C_INVITE_JOIN_CLUB.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_INVITE_JOIN_CLUB);

    /** S2C_INVITE_JOIN_CLUB result. */
    public result: number;

    /**
     * Creates a new S2C_INVITE_JOIN_CLUB instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_INVITE_JOIN_CLUB instance
     */
    public static create(properties?: IS2C_INVITE_JOIN_CLUB): S2C_INVITE_JOIN_CLUB;

    /**
     * Encodes the specified S2C_INVITE_JOIN_CLUB message. Does not implicitly {@link S2C_INVITE_JOIN_CLUB.verify|verify} messages.
     * @param message S2C_INVITE_JOIN_CLUB message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_INVITE_JOIN_CLUB, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_INVITE_JOIN_CLUB message, length delimited. Does not implicitly {@link S2C_INVITE_JOIN_CLUB.verify|verify} messages.
     * @param message S2C_INVITE_JOIN_CLUB message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_INVITE_JOIN_CLUB, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_INVITE_JOIN_CLUB message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_INVITE_JOIN_CLUB
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_INVITE_JOIN_CLUB;

    /**
     * Decodes a S2C_INVITE_JOIN_CLUB message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_INVITE_JOIN_CLUB
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_INVITE_JOIN_CLUB;

    /**
     * Verifies a S2C_INVITE_JOIN_CLUB message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_INVITE_JOIN_CLUB message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_INVITE_JOIN_CLUB
     */
    public static fromObject(object: { [k: string]: any }): S2C_INVITE_JOIN_CLUB;

    /**
     * Creates a plain object from a S2C_INVITE_JOIN_CLUB message. Also converts values to other types if specified.
     * @param message S2C_INVITE_JOIN_CLUB
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_INVITE_JOIN_CLUB, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_INVITE_JOIN_CLUB to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_INVITE_JOIN_CLUB {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14066
    }
}

/** Properties of a C2S_CLUB_REQUEST_LIST_REQ. */
export interface IC2S_CLUB_REQUEST_LIST_REQ {

    /** C2S_CLUB_REQUEST_LIST_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_REQUEST_LIST_REQ. */
export class C2S_CLUB_REQUEST_LIST_REQ implements IC2S_CLUB_REQUEST_LIST_REQ {

    /**
     * Constructs a new C2S_CLUB_REQUEST_LIST_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_REQUEST_LIST_REQ);

    /** C2S_CLUB_REQUEST_LIST_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_REQUEST_LIST_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_REQUEST_LIST_REQ instance
     */
    public static create(properties?: IC2S_CLUB_REQUEST_LIST_REQ): C2S_CLUB_REQUEST_LIST_REQ;

    /**
     * Encodes the specified C2S_CLUB_REQUEST_LIST_REQ message. Does not implicitly {@link C2S_CLUB_REQUEST_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_REQUEST_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_REQUEST_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_REQUEST_LIST_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_REQUEST_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_REQUEST_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_REQUEST_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_REQUEST_LIST_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_REQUEST_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_REQUEST_LIST_REQ;

    /**
     * Decodes a C2S_CLUB_REQUEST_LIST_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_REQUEST_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_REQUEST_LIST_REQ;

    /**
     * Verifies a C2S_CLUB_REQUEST_LIST_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_REQUEST_LIST_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_REQUEST_LIST_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_REQUEST_LIST_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_REQUEST_LIST_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_REQUEST_LIST_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_REQUEST_LIST_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_REQUEST_LIST_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_REQUEST_LIST_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14067
    }
}

/** Properties of a S2C_CLUB_REQUEST_LIST_RES. */
export interface IS2C_CLUB_REQUEST_LIST_RES {

    /** S2C_CLUB_REQUEST_LIST_RES clubId */
    clubId?: (number|null);

    /** S2C_CLUB_REQUEST_LIST_RES reqs */
    reqs?: (IREQUEST_INFO[]|null);
}

/** Represents a S2C_CLUB_REQUEST_LIST_RES. */
export class S2C_CLUB_REQUEST_LIST_RES implements IS2C_CLUB_REQUEST_LIST_RES {

    /**
     * Constructs a new S2C_CLUB_REQUEST_LIST_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_REQUEST_LIST_RES);

    /** S2C_CLUB_REQUEST_LIST_RES clubId. */
    public clubId: number;

    /** S2C_CLUB_REQUEST_LIST_RES reqs. */
    public reqs: IREQUEST_INFO[];

    /**
     * Creates a new S2C_CLUB_REQUEST_LIST_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_REQUEST_LIST_RES instance
     */
    public static create(properties?: IS2C_CLUB_REQUEST_LIST_RES): S2C_CLUB_REQUEST_LIST_RES;

    /**
     * Encodes the specified S2C_CLUB_REQUEST_LIST_RES message. Does not implicitly {@link S2C_CLUB_REQUEST_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_REQUEST_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_REQUEST_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_REQUEST_LIST_RES message, length delimited. Does not implicitly {@link S2C_CLUB_REQUEST_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_REQUEST_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_REQUEST_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_REQUEST_LIST_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_REQUEST_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_REQUEST_LIST_RES;

    /**
     * Decodes a S2C_CLUB_REQUEST_LIST_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_REQUEST_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_REQUEST_LIST_RES;

    /**
     * Verifies a S2C_CLUB_REQUEST_LIST_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_REQUEST_LIST_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_REQUEST_LIST_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_REQUEST_LIST_RES;

    /**
     * Creates a plain object from a S2C_CLUB_REQUEST_LIST_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_REQUEST_LIST_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_REQUEST_LIST_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_REQUEST_LIST_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_REQUEST_LIST_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14068
    }
}

/** Properties of a C2S_EDIT_CLUB_GAME_TYPE_REQ. */
export interface IC2S_EDIT_CLUB_GAME_TYPE_REQ {

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ clubId */
    clubId?: (number|null);

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ guid */
    guid?: (number|null);

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ gameTypes */
    gameTypes?: (number[]|null);
}

/** Represents a C2S_EDIT_CLUB_GAME_TYPE_REQ. */
export class C2S_EDIT_CLUB_GAME_TYPE_REQ implements IC2S_EDIT_CLUB_GAME_TYPE_REQ {

    /**
     * Constructs a new C2S_EDIT_CLUB_GAME_TYPE_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_EDIT_CLUB_GAME_TYPE_REQ);

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ clubId. */
    public clubId: number;

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ guid. */
    public guid: number;

    /** C2S_EDIT_CLUB_GAME_TYPE_REQ gameTypes. */
    public gameTypes: number[];

    /**
     * Creates a new C2S_EDIT_CLUB_GAME_TYPE_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_EDIT_CLUB_GAME_TYPE_REQ instance
     */
    public static create(properties?: IC2S_EDIT_CLUB_GAME_TYPE_REQ): C2S_EDIT_CLUB_GAME_TYPE_REQ;

    /**
     * Encodes the specified C2S_EDIT_CLUB_GAME_TYPE_REQ message. Does not implicitly {@link C2S_EDIT_CLUB_GAME_TYPE_REQ.verify|verify} messages.
     * @param message C2S_EDIT_CLUB_GAME_TYPE_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_EDIT_CLUB_GAME_TYPE_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_EDIT_CLUB_GAME_TYPE_REQ message, length delimited. Does not implicitly {@link C2S_EDIT_CLUB_GAME_TYPE_REQ.verify|verify} messages.
     * @param message C2S_EDIT_CLUB_GAME_TYPE_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_EDIT_CLUB_GAME_TYPE_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_EDIT_CLUB_GAME_TYPE_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_EDIT_CLUB_GAME_TYPE_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_EDIT_CLUB_GAME_TYPE_REQ;

    /**
     * Decodes a C2S_EDIT_CLUB_GAME_TYPE_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_EDIT_CLUB_GAME_TYPE_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_EDIT_CLUB_GAME_TYPE_REQ;

    /**
     * Verifies a C2S_EDIT_CLUB_GAME_TYPE_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_EDIT_CLUB_GAME_TYPE_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_EDIT_CLUB_GAME_TYPE_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_EDIT_CLUB_GAME_TYPE_REQ;

    /**
     * Creates a plain object from a C2S_EDIT_CLUB_GAME_TYPE_REQ message. Also converts values to other types if specified.
     * @param message C2S_EDIT_CLUB_GAME_TYPE_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_EDIT_CLUB_GAME_TYPE_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_EDIT_CLUB_GAME_TYPE_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_EDIT_CLUB_GAME_TYPE_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14069
    }
}

/** Properties of a S2C_EDIT_CLUB_GAME_TYPE_RES. */
export interface IS2C_EDIT_CLUB_GAME_TYPE_RES {

    /** S2C_EDIT_CLUB_GAME_TYPE_RES result */
    result?: (number|null);
}

/** Represents a S2C_EDIT_CLUB_GAME_TYPE_RES. */
export class S2C_EDIT_CLUB_GAME_TYPE_RES implements IS2C_EDIT_CLUB_GAME_TYPE_RES {

    /**
     * Constructs a new S2C_EDIT_CLUB_GAME_TYPE_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_EDIT_CLUB_GAME_TYPE_RES);

    /** S2C_EDIT_CLUB_GAME_TYPE_RES result. */
    public result: number;

    /**
     * Creates a new S2C_EDIT_CLUB_GAME_TYPE_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_EDIT_CLUB_GAME_TYPE_RES instance
     */
    public static create(properties?: IS2C_EDIT_CLUB_GAME_TYPE_RES): S2C_EDIT_CLUB_GAME_TYPE_RES;

    /**
     * Encodes the specified S2C_EDIT_CLUB_GAME_TYPE_RES message. Does not implicitly {@link S2C_EDIT_CLUB_GAME_TYPE_RES.verify|verify} messages.
     * @param message S2C_EDIT_CLUB_GAME_TYPE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_EDIT_CLUB_GAME_TYPE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_EDIT_CLUB_GAME_TYPE_RES message, length delimited. Does not implicitly {@link S2C_EDIT_CLUB_GAME_TYPE_RES.verify|verify} messages.
     * @param message S2C_EDIT_CLUB_GAME_TYPE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_EDIT_CLUB_GAME_TYPE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_EDIT_CLUB_GAME_TYPE_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_EDIT_CLUB_GAME_TYPE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_EDIT_CLUB_GAME_TYPE_RES;

    /**
     * Decodes a S2C_EDIT_CLUB_GAME_TYPE_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_EDIT_CLUB_GAME_TYPE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_EDIT_CLUB_GAME_TYPE_RES;

    /**
     * Verifies a S2C_EDIT_CLUB_GAME_TYPE_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_EDIT_CLUB_GAME_TYPE_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_EDIT_CLUB_GAME_TYPE_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_EDIT_CLUB_GAME_TYPE_RES;

    /**
     * Creates a plain object from a S2C_EDIT_CLUB_GAME_TYPE_RES message. Also converts values to other types if specified.
     * @param message S2C_EDIT_CLUB_GAME_TYPE_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_EDIT_CLUB_GAME_TYPE_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_EDIT_CLUB_GAME_TYPE_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_EDIT_CLUB_GAME_TYPE_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14070
    }
}

/** Properties of a C2S_CLUB_TEAM_LIST_REQ. */
export interface IC2S_CLUB_TEAM_LIST_REQ {

    /** C2S_CLUB_TEAM_LIST_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_TEAM_LIST_REQ. */
export class C2S_CLUB_TEAM_LIST_REQ implements IC2S_CLUB_TEAM_LIST_REQ {

    /**
     * Constructs a new C2S_CLUB_TEAM_LIST_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_TEAM_LIST_REQ);

    /** C2S_CLUB_TEAM_LIST_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_TEAM_LIST_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_TEAM_LIST_REQ instance
     */
    public static create(properties?: IC2S_CLUB_TEAM_LIST_REQ): C2S_CLUB_TEAM_LIST_REQ;

    /**
     * Encodes the specified C2S_CLUB_TEAM_LIST_REQ message. Does not implicitly {@link C2S_CLUB_TEAM_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TEAM_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_TEAM_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_TEAM_LIST_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_TEAM_LIST_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TEAM_LIST_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_TEAM_LIST_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_TEAM_LIST_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_TEAM_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_TEAM_LIST_REQ;

    /**
     * Decodes a C2S_CLUB_TEAM_LIST_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_TEAM_LIST_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_TEAM_LIST_REQ;

    /**
     * Verifies a C2S_CLUB_TEAM_LIST_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_TEAM_LIST_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_TEAM_LIST_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_TEAM_LIST_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_TEAM_LIST_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_TEAM_LIST_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_TEAM_LIST_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_TEAM_LIST_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_TEAM_LIST_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14073
    }
}

/** Properties of a S2C_CLUB_TEAM_LIST_RES. */
export interface IS2C_CLUB_TEAM_LIST_RES {

    /** S2C_CLUB_TEAM_LIST_RES result */
    result?: (number|null);

    /** S2C_CLUB_TEAM_LIST_RES teams */
    teams?: (ICLUB_TEAM_INFO[]|null);
}

/** Represents a S2C_CLUB_TEAM_LIST_RES. */
export class S2C_CLUB_TEAM_LIST_RES implements IS2C_CLUB_TEAM_LIST_RES {

    /**
     * Constructs a new S2C_CLUB_TEAM_LIST_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_TEAM_LIST_RES);

    /** S2C_CLUB_TEAM_LIST_RES result. */
    public result: number;

    /** S2C_CLUB_TEAM_LIST_RES teams. */
    public teams: ICLUB_TEAM_INFO[];

    /**
     * Creates a new S2C_CLUB_TEAM_LIST_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_TEAM_LIST_RES instance
     */
    public static create(properties?: IS2C_CLUB_TEAM_LIST_RES): S2C_CLUB_TEAM_LIST_RES;

    /**
     * Encodes the specified S2C_CLUB_TEAM_LIST_RES message. Does not implicitly {@link S2C_CLUB_TEAM_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_TEAM_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_TEAM_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_TEAM_LIST_RES message, length delimited. Does not implicitly {@link S2C_CLUB_TEAM_LIST_RES.verify|verify} messages.
     * @param message S2C_CLUB_TEAM_LIST_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_TEAM_LIST_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_TEAM_LIST_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_TEAM_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_TEAM_LIST_RES;

    /**
     * Decodes a S2C_CLUB_TEAM_LIST_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_TEAM_LIST_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_TEAM_LIST_RES;

    /**
     * Verifies a S2C_CLUB_TEAM_LIST_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_TEAM_LIST_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_TEAM_LIST_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_TEAM_LIST_RES;

    /**
     * Creates a plain object from a S2C_CLUB_TEAM_LIST_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_TEAM_LIST_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_TEAM_LIST_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_TEAM_LIST_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_TEAM_LIST_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14074
    }
}

/** Properties of a C2S_CLUB_TRANSFER_MONEY_REQ. */
export interface IC2S_CLUB_TRANSFER_MONEY_REQ {

    /** C2S_CLUB_TRANSFER_MONEY_REQ sourceType */
    sourceType?: (number|null);

    /** C2S_CLUB_TRANSFER_MONEY_REQ sourceId */
    sourceId?: (number|null);

    /** C2S_CLUB_TRANSFER_MONEY_REQ targetType */
    targetType?: (number|null);

    /** C2S_CLUB_TRANSFER_MONEY_REQ targetId */
    targetId?: (number|null);

    /** C2S_CLUB_TRANSFER_MONEY_REQ money */
    money?: (number|null);

    /** C2S_CLUB_TRANSFER_MONEY_REQ extData */
    extData?: (number|null);
}

/** Represents a C2S_CLUB_TRANSFER_MONEY_REQ. */
export class C2S_CLUB_TRANSFER_MONEY_REQ implements IC2S_CLUB_TRANSFER_MONEY_REQ {

    /**
     * Constructs a new C2S_CLUB_TRANSFER_MONEY_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_TRANSFER_MONEY_REQ);

    /** C2S_CLUB_TRANSFER_MONEY_REQ sourceType. */
    public sourceType: number;

    /** C2S_CLUB_TRANSFER_MONEY_REQ sourceId. */
    public sourceId: number;

    /** C2S_CLUB_TRANSFER_MONEY_REQ targetType. */
    public targetType: number;

    /** C2S_CLUB_TRANSFER_MONEY_REQ targetId. */
    public targetId: number;

    /** C2S_CLUB_TRANSFER_MONEY_REQ money. */
    public money: number;

    /** C2S_CLUB_TRANSFER_MONEY_REQ extData. */
    public extData: number;

    /**
     * Creates a new C2S_CLUB_TRANSFER_MONEY_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_TRANSFER_MONEY_REQ instance
     */
    public static create(properties?: IC2S_CLUB_TRANSFER_MONEY_REQ): C2S_CLUB_TRANSFER_MONEY_REQ;

    /**
     * Encodes the specified C2S_CLUB_TRANSFER_MONEY_REQ message. Does not implicitly {@link C2S_CLUB_TRANSFER_MONEY_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TRANSFER_MONEY_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_TRANSFER_MONEY_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_TRANSFER_MONEY_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_TRANSFER_MONEY_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TRANSFER_MONEY_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_TRANSFER_MONEY_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_TRANSFER_MONEY_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_TRANSFER_MONEY_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_TRANSFER_MONEY_REQ;

    /**
     * Decodes a C2S_CLUB_TRANSFER_MONEY_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_TRANSFER_MONEY_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_TRANSFER_MONEY_REQ;

    /**
     * Verifies a C2S_CLUB_TRANSFER_MONEY_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_TRANSFER_MONEY_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_TRANSFER_MONEY_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_TRANSFER_MONEY_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_TRANSFER_MONEY_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_TRANSFER_MONEY_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_TRANSFER_MONEY_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_TRANSFER_MONEY_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_TRANSFER_MONEY_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14077
    }
}

/** Properties of a S2C_CLUB_TRANSFER_MONEY_RES. */
export interface IS2C_CLUB_TRANSFER_MONEY_RES {

    /** S2C_CLUB_TRANSFER_MONEY_RES result */
    result?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES sourceType */
    sourceType?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES sourceId */
    sourceId?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES targetType */
    targetType?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES targetId */
    targetId?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES money */
    money?: (number|null);

    /** S2C_CLUB_TRANSFER_MONEY_RES extData */
    extData?: (number|null);
}

/** Represents a S2C_CLUB_TRANSFER_MONEY_RES. */
export class S2C_CLUB_TRANSFER_MONEY_RES implements IS2C_CLUB_TRANSFER_MONEY_RES {

    /**
     * Constructs a new S2C_CLUB_TRANSFER_MONEY_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_TRANSFER_MONEY_RES);

    /** S2C_CLUB_TRANSFER_MONEY_RES result. */
    public result: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES sourceType. */
    public sourceType: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES sourceId. */
    public sourceId: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES targetType. */
    public targetType: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES targetId. */
    public targetId: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES money. */
    public money: number;

    /** S2C_CLUB_TRANSFER_MONEY_RES extData. */
    public extData: number;

    /**
     * Creates a new S2C_CLUB_TRANSFER_MONEY_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_TRANSFER_MONEY_RES instance
     */
    public static create(properties?: IS2C_CLUB_TRANSFER_MONEY_RES): S2C_CLUB_TRANSFER_MONEY_RES;

    /**
     * Encodes the specified S2C_CLUB_TRANSFER_MONEY_RES message. Does not implicitly {@link S2C_CLUB_TRANSFER_MONEY_RES.verify|verify} messages.
     * @param message S2C_CLUB_TRANSFER_MONEY_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_TRANSFER_MONEY_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_TRANSFER_MONEY_RES message, length delimited. Does not implicitly {@link S2C_CLUB_TRANSFER_MONEY_RES.verify|verify} messages.
     * @param message S2C_CLUB_TRANSFER_MONEY_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_TRANSFER_MONEY_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_TRANSFER_MONEY_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_TRANSFER_MONEY_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_TRANSFER_MONEY_RES;

    /**
     * Decodes a S2C_CLUB_TRANSFER_MONEY_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_TRANSFER_MONEY_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_TRANSFER_MONEY_RES;

    /**
     * Verifies a S2C_CLUB_TRANSFER_MONEY_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_TRANSFER_MONEY_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_TRANSFER_MONEY_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_TRANSFER_MONEY_RES;

    /**
     * Creates a plain object from a S2C_CLUB_TRANSFER_MONEY_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_TRANSFER_MONEY_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_TRANSFER_MONEY_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_TRANSFER_MONEY_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_TRANSFER_MONEY_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14078
    }
}

/** Properties of a C2S_CONFIG_CLUB_TEAM_TEMPLATE. */
export interface IC2S_CONFIG_CLUB_TEAM_TEMPLATE {

    /** C2S_CONFIG_CLUB_TEAM_TEMPLATE clubId */
    clubId?: (number|null);

    /** C2S_CONFIG_CLUB_TEAM_TEMPLATE conf */
    conf?: (ICLUB_TEAM_TEMPLATE_CONF|null);
}

/** Represents a C2S_CONFIG_CLUB_TEAM_TEMPLATE. */
export class C2S_CONFIG_CLUB_TEAM_TEMPLATE implements IC2S_CONFIG_CLUB_TEAM_TEMPLATE {

    /**
     * Constructs a new C2S_CONFIG_CLUB_TEAM_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CONFIG_CLUB_TEAM_TEMPLATE);

    /** C2S_CONFIG_CLUB_TEAM_TEMPLATE clubId. */
    public clubId: number;

    /** C2S_CONFIG_CLUB_TEAM_TEMPLATE conf. */
    public conf?: (ICLUB_TEAM_TEMPLATE_CONF|null);

    /**
     * Creates a new C2S_CONFIG_CLUB_TEAM_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CONFIG_CLUB_TEAM_TEMPLATE instance
     */
    public static create(properties?: IC2S_CONFIG_CLUB_TEAM_TEMPLATE): C2S_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Encodes the specified C2S_CONFIG_CLUB_TEAM_TEMPLATE message. Does not implicitly {@link C2S_CONFIG_CLUB_TEAM_TEMPLATE.verify|verify} messages.
     * @param message C2S_CONFIG_CLUB_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CONFIG_CLUB_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CONFIG_CLUB_TEAM_TEMPLATE message, length delimited. Does not implicitly {@link C2S_CONFIG_CLUB_TEAM_TEMPLATE.verify|verify} messages.
     * @param message C2S_CONFIG_CLUB_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CONFIG_CLUB_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CONFIG_CLUB_TEAM_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CONFIG_CLUB_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Decodes a C2S_CONFIG_CLUB_TEAM_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CONFIG_CLUB_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Verifies a C2S_CONFIG_CLUB_TEAM_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CONFIG_CLUB_TEAM_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CONFIG_CLUB_TEAM_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): C2S_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Creates a plain object from a C2S_CONFIG_CLUB_TEAM_TEMPLATE message. Also converts values to other types if specified.
     * @param message C2S_CONFIG_CLUB_TEAM_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CONFIG_CLUB_TEAM_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CONFIG_CLUB_TEAM_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CONFIG_CLUB_TEAM_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14079
    }
}

/** Properties of a S2C_CONFIG_CLUB_TEAM_TEMPLATE. */
export interface IS2C_CONFIG_CLUB_TEAM_TEMPLATE {

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE result */
    result?: (number|null);

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE clubId */
    clubId?: (number|null);

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE conf */
    conf?: (ICLUB_TEAM_TEMPLATE_CONF|null);
}

/** Represents a S2C_CONFIG_CLUB_TEAM_TEMPLATE. */
export class S2C_CONFIG_CLUB_TEAM_TEMPLATE implements IS2C_CONFIG_CLUB_TEAM_TEMPLATE {

    /**
     * Constructs a new S2C_CONFIG_CLUB_TEAM_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CONFIG_CLUB_TEAM_TEMPLATE);

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE result. */
    public result: number;

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE clubId. */
    public clubId: number;

    /** S2C_CONFIG_CLUB_TEAM_TEMPLATE conf. */
    public conf?: (ICLUB_TEAM_TEMPLATE_CONF|null);

    /**
     * Creates a new S2C_CONFIG_CLUB_TEAM_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CONFIG_CLUB_TEAM_TEMPLATE instance
     */
    public static create(properties?: IS2C_CONFIG_CLUB_TEAM_TEMPLATE): S2C_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Encodes the specified S2C_CONFIG_CLUB_TEAM_TEMPLATE message. Does not implicitly {@link S2C_CONFIG_CLUB_TEAM_TEMPLATE.verify|verify} messages.
     * @param message S2C_CONFIG_CLUB_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CONFIG_CLUB_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CONFIG_CLUB_TEAM_TEMPLATE message, length delimited. Does not implicitly {@link S2C_CONFIG_CLUB_TEAM_TEMPLATE.verify|verify} messages.
     * @param message S2C_CONFIG_CLUB_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CONFIG_CLUB_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CONFIG_CLUB_TEAM_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CONFIG_CLUB_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Decodes a S2C_CONFIG_CLUB_TEAM_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CONFIG_CLUB_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Verifies a S2C_CONFIG_CLUB_TEAM_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CONFIG_CLUB_TEAM_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CONFIG_CLUB_TEAM_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): S2C_CONFIG_CLUB_TEAM_TEMPLATE;

    /**
     * Creates a plain object from a S2C_CONFIG_CLUB_TEAM_TEMPLATE message. Also converts values to other types if specified.
     * @param message S2C_CONFIG_CLUB_TEAM_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CONFIG_CLUB_TEAM_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CONFIG_CLUB_TEAM_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CONFIG_CLUB_TEAM_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14080
    }
}

/** Properties of a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG. */
export interface IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /** C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG clubId */
    clubId?: (number|null);

    /** C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG templateId */
    templateId?: (number|null);
}

/** Represents a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG. */
export class C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG implements IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /**
     * Constructs a new C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG);

    /** C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG clubId. */
    public clubId: number;

    /** C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG templateId. */
    public templateId: number;

    /**
     * Creates a new C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG instance
     */
    public static create(properties?: IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG): C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Encodes the specified C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message. Does not implicitly {@link C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG.verify|verify} messages.
     * @param message C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message, length delimited. Does not implicitly {@link C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG.verify|verify} messages.
     * @param message C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_GET_CLUB_TEAM_TEMPLATE_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Decodes a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Verifies a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Creates a plain object from a C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14081
    }
}

/** Properties of a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG. */
export interface IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /** S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG confs */
    confs?: (ICLUB_TEAM_TEMPLATE_CONF[]|null);
}

/** Represents a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG. */
export class S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG implements IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /**
     * Constructs a new S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG);

    /** S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG clubId. */
    public clubId: number;

    /** S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG confs. */
    public confs: ICLUB_TEAM_TEMPLATE_CONF[];

    /**
     * Creates a new S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG instance
     */
    public static create(properties?: IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG): S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Encodes the specified S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message. Does not implicitly {@link S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG.verify|verify} messages.
     * @param message S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message, length delimited. Does not implicitly {@link S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG.verify|verify} messages.
     * @param message S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_GET_CLUB_TEAM_TEMPLATE_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Decodes a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Verifies a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG;

    /**
     * Creates a plain object from a S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_GET_CLUB_TEAM_TEMPLATE_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14082
    }
}

/** Properties of a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION. */
export interface IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /** C2S_CONFIG_CLUB_TEMPLATE_COMMISSION clubId */
    clubId?: (number|null);

    /** C2S_CONFIG_CLUB_TEMPLATE_COMMISSION conf */
    conf?: (ICLUB_TEMPLATE_CONF|null);
}

/** Represents a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION. */
export class C2S_CONFIG_CLUB_TEMPLATE_COMMISSION implements IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new C2S_CONFIG_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION);

    /** C2S_CONFIG_CLUB_TEMPLATE_COMMISSION clubId. */
    public clubId: number;

    /** C2S_CONFIG_CLUB_TEMPLATE_COMMISSION conf. */
    public conf?: (ICLUB_TEMPLATE_CONF|null);

    /**
     * Creates a new C2S_CONFIG_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CONFIG_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION): C2S_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link C2S_CONFIG_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link C2S_CONFIG_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CONFIG_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CONFIG_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): C2S_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a C2S_CONFIG_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message C2S_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CONFIG_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CONFIG_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14083
    }
}

/** Properties of a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION. */
export interface IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION result */
    result?: (number|null);

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION clubId */
    clubId?: (number|null);

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION conf */
    conf?: (ICLUB_TEMPLATE_CONF|null);
}

/** Represents a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION. */
export class S2C_CONFIG_CLUB_TEMPLATE_COMMISSION implements IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new S2C_CONFIG_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION);

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION result. */
    public result: number;

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION clubId. */
    public clubId: number;

    /** S2C_CONFIG_CLUB_TEMPLATE_COMMISSION conf. */
    public conf?: (ICLUB_TEMPLATE_CONF|null);

    /**
     * Creates a new S2C_CONFIG_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CONFIG_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION): S2C_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link S2C_CONFIG_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link S2C_CONFIG_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CONFIG_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CONFIG_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): S2C_CONFIG_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a S2C_CONFIG_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message S2C_CONFIG_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CONFIG_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CONFIG_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CONFIG_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14084
    }
}

/** Properties of a C2S_GET_CLUB_TEMPLATE_COMMISSION. */
export interface IC2S_GET_CLUB_TEMPLATE_COMMISSION {

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION clubId */
    clubId?: (number|null);

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION teamId */
    teamId?: (number|null);

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION templateId */
    templateId?: (number|null);

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION partnerId */
    partnerId?: (number|null);
}

/** Represents a C2S_GET_CLUB_TEMPLATE_COMMISSION. */
export class C2S_GET_CLUB_TEMPLATE_COMMISSION implements IC2S_GET_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new C2S_GET_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_GET_CLUB_TEMPLATE_COMMISSION);

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION clubId. */
    public clubId: number;

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION teamId. */
    public teamId: number;

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION templateId. */
    public templateId: number;

    /** C2S_GET_CLUB_TEMPLATE_COMMISSION partnerId. */
    public partnerId: number;

    /**
     * Creates a new C2S_GET_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_GET_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IC2S_GET_CLUB_TEMPLATE_COMMISSION): C2S_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified C2S_GET_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link C2S_GET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_GET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_GET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_GET_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link C2S_GET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_GET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_GET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_GET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_GET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a C2S_GET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_GET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a C2S_GET_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_GET_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_GET_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): C2S_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a C2S_GET_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message C2S_GET_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_GET_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_GET_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_GET_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14085
    }
}

/** Properties of a S2C_GET_CLUB_TEMPLATE_COMMISSION. */
export interface IS2C_GET_CLUB_TEMPLATE_COMMISSION {

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION result */
    result?: (number|null);

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION clubId */
    clubId?: (number|null);

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION teamId */
    teamId?: (number|null);

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION partnerId */
    partnerId?: (number|null);

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION confs */
    confs?: (ICLUB_TEMPLATE_CONF[]|null);
}

/** Represents a S2C_GET_CLUB_TEMPLATE_COMMISSION. */
export class S2C_GET_CLUB_TEMPLATE_COMMISSION implements IS2C_GET_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new S2C_GET_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_GET_CLUB_TEMPLATE_COMMISSION);

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION result. */
    public result: number;

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION clubId. */
    public clubId: number;

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION teamId. */
    public teamId: number;

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION partnerId. */
    public partnerId: number;

    /** S2C_GET_CLUB_TEMPLATE_COMMISSION confs. */
    public confs: ICLUB_TEMPLATE_CONF[];

    /**
     * Creates a new S2C_GET_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_GET_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IS2C_GET_CLUB_TEMPLATE_COMMISSION): S2C_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified S2C_GET_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link S2C_GET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_GET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_GET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_GET_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link S2C_GET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_GET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_GET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_GET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_GET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a S2C_GET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_GET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a S2C_GET_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_GET_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_GET_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): S2C_GET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a S2C_GET_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message S2C_GET_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_GET_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_GET_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_GET_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14086
    }
}

/** Properties of a C2S_EXCHANGE_CLUB_COMMISSON_REQ. */
export interface IC2S_EXCHANGE_CLUB_COMMISSON_REQ {

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ clubId */
    clubId?: (number|null);

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ count */
    count?: (number|null);

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ partnerId */
    partnerId?: (number|null);
}

/** Represents a C2S_EXCHANGE_CLUB_COMMISSON_REQ. */
export class C2S_EXCHANGE_CLUB_COMMISSON_REQ implements IC2S_EXCHANGE_CLUB_COMMISSON_REQ {

    /**
     * Constructs a new C2S_EXCHANGE_CLUB_COMMISSON_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_EXCHANGE_CLUB_COMMISSON_REQ);

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ clubId. */
    public clubId: number;

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ count. */
    public count: number;

    /** C2S_EXCHANGE_CLUB_COMMISSON_REQ partnerId. */
    public partnerId: number;

    /**
     * Creates a new C2S_EXCHANGE_CLUB_COMMISSON_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_EXCHANGE_CLUB_COMMISSON_REQ instance
     */
    public static create(properties?: IC2S_EXCHANGE_CLUB_COMMISSON_REQ): C2S_EXCHANGE_CLUB_COMMISSON_REQ;

    /**
     * Encodes the specified C2S_EXCHANGE_CLUB_COMMISSON_REQ message. Does not implicitly {@link C2S_EXCHANGE_CLUB_COMMISSON_REQ.verify|verify} messages.
     * @param message C2S_EXCHANGE_CLUB_COMMISSON_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_EXCHANGE_CLUB_COMMISSON_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_EXCHANGE_CLUB_COMMISSON_REQ message, length delimited. Does not implicitly {@link C2S_EXCHANGE_CLUB_COMMISSON_REQ.verify|verify} messages.
     * @param message C2S_EXCHANGE_CLUB_COMMISSON_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_EXCHANGE_CLUB_COMMISSON_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_EXCHANGE_CLUB_COMMISSON_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_EXCHANGE_CLUB_COMMISSON_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_EXCHANGE_CLUB_COMMISSON_REQ;

    /**
     * Decodes a C2S_EXCHANGE_CLUB_COMMISSON_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_EXCHANGE_CLUB_COMMISSON_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_EXCHANGE_CLUB_COMMISSON_REQ;

    /**
     * Verifies a C2S_EXCHANGE_CLUB_COMMISSON_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_EXCHANGE_CLUB_COMMISSON_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_EXCHANGE_CLUB_COMMISSON_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_EXCHANGE_CLUB_COMMISSON_REQ;

    /**
     * Creates a plain object from a C2S_EXCHANGE_CLUB_COMMISSON_REQ message. Also converts values to other types if specified.
     * @param message C2S_EXCHANGE_CLUB_COMMISSON_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_EXCHANGE_CLUB_COMMISSON_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_EXCHANGE_CLUB_COMMISSON_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_EXCHANGE_CLUB_COMMISSON_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14087
    }
}

/** Properties of a S2C_EXCHANGE_CLUB_COMMISSON_RES. */
export interface IS2C_EXCHANGE_CLUB_COMMISSON_RES {

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES result */
    result?: (number|null);

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES clubId */
    clubId?: (number|null);

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES partnerId */
    partnerId?: (number|null);
}

/** Represents a S2C_EXCHANGE_CLUB_COMMISSON_RES. */
export class S2C_EXCHANGE_CLUB_COMMISSON_RES implements IS2C_EXCHANGE_CLUB_COMMISSON_RES {

    /**
     * Constructs a new S2C_EXCHANGE_CLUB_COMMISSON_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_EXCHANGE_CLUB_COMMISSON_RES);

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES result. */
    public result: number;

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES clubId. */
    public clubId: number;

    /** S2C_EXCHANGE_CLUB_COMMISSON_RES partnerId. */
    public partnerId: number;

    /**
     * Creates a new S2C_EXCHANGE_CLUB_COMMISSON_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_EXCHANGE_CLUB_COMMISSON_RES instance
     */
    public static create(properties?: IS2C_EXCHANGE_CLUB_COMMISSON_RES): S2C_EXCHANGE_CLUB_COMMISSON_RES;

    /**
     * Encodes the specified S2C_EXCHANGE_CLUB_COMMISSON_RES message. Does not implicitly {@link S2C_EXCHANGE_CLUB_COMMISSON_RES.verify|verify} messages.
     * @param message S2C_EXCHANGE_CLUB_COMMISSON_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_EXCHANGE_CLUB_COMMISSON_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_EXCHANGE_CLUB_COMMISSON_RES message, length delimited. Does not implicitly {@link S2C_EXCHANGE_CLUB_COMMISSON_RES.verify|verify} messages.
     * @param message S2C_EXCHANGE_CLUB_COMMISSON_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_EXCHANGE_CLUB_COMMISSON_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_EXCHANGE_CLUB_COMMISSON_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_EXCHANGE_CLUB_COMMISSON_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_EXCHANGE_CLUB_COMMISSON_RES;

    /**
     * Decodes a S2C_EXCHANGE_CLUB_COMMISSON_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_EXCHANGE_CLUB_COMMISSON_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_EXCHANGE_CLUB_COMMISSON_RES;

    /**
     * Verifies a S2C_EXCHANGE_CLUB_COMMISSON_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_EXCHANGE_CLUB_COMMISSON_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_EXCHANGE_CLUB_COMMISSON_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_EXCHANGE_CLUB_COMMISSON_RES;

    /**
     * Creates a plain object from a S2C_EXCHANGE_CLUB_COMMISSON_RES message. Also converts values to other types if specified.
     * @param message S2C_EXCHANGE_CLUB_COMMISSON_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_EXCHANGE_CLUB_COMMISSON_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_EXCHANGE_CLUB_COMMISSON_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_EXCHANGE_CLUB_COMMISSON_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14088
    }
}

/** Properties of a C2S_CLUB_MONEY_REQ. */
export interface IC2S_CLUB_MONEY_REQ {

    /** C2S_CLUB_MONEY_REQ clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_MONEY_REQ. */
export class C2S_CLUB_MONEY_REQ implements IC2S_CLUB_MONEY_REQ {

    /**
     * Constructs a new C2S_CLUB_MONEY_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_MONEY_REQ);

    /** C2S_CLUB_MONEY_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_MONEY_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_MONEY_REQ instance
     */
    public static create(properties?: IC2S_CLUB_MONEY_REQ): C2S_CLUB_MONEY_REQ;

    /**
     * Encodes the specified C2S_CLUB_MONEY_REQ message. Does not implicitly {@link C2S_CLUB_MONEY_REQ.verify|verify} messages.
     * @param message C2S_CLUB_MONEY_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_MONEY_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_MONEY_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_MONEY_REQ.verify|verify} messages.
     * @param message C2S_CLUB_MONEY_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_MONEY_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_MONEY_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_MONEY_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_MONEY_REQ;

    /**
     * Decodes a C2S_CLUB_MONEY_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_MONEY_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_MONEY_REQ;

    /**
     * Verifies a C2S_CLUB_MONEY_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_MONEY_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_MONEY_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_MONEY_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_MONEY_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_MONEY_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_MONEY_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_MONEY_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_MONEY_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14089
    }
}

/** Properties of a S2C_CLUB_MONEY_RES. */
export interface IS2C_CLUB_MONEY_RES {

    /** S2C_CLUB_MONEY_RES result */
    result?: (number|null);

    /** S2C_CLUB_MONEY_RES clubId */
    clubId?: (number|null);

    /** S2C_CLUB_MONEY_RES moneyId */
    moneyId?: (number|null);

    /** S2C_CLUB_MONEY_RES count */
    count?: (number|null);

    /** S2C_CLUB_MONEY_RES commission */
    commission?: (number|null);
}

/** Represents a S2C_CLUB_MONEY_RES. */
export class S2C_CLUB_MONEY_RES implements IS2C_CLUB_MONEY_RES {

    /**
     * Constructs a new S2C_CLUB_MONEY_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_MONEY_RES);

    /** S2C_CLUB_MONEY_RES result. */
    public result: number;

    /** S2C_CLUB_MONEY_RES clubId. */
    public clubId: number;

    /** S2C_CLUB_MONEY_RES moneyId. */
    public moneyId: number;

    /** S2C_CLUB_MONEY_RES count. */
    public count: number;

    /** S2C_CLUB_MONEY_RES commission. */
    public commission: number;

    /**
     * Creates a new S2C_CLUB_MONEY_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_MONEY_RES instance
     */
    public static create(properties?: IS2C_CLUB_MONEY_RES): S2C_CLUB_MONEY_RES;

    /**
     * Encodes the specified S2C_CLUB_MONEY_RES message. Does not implicitly {@link S2C_CLUB_MONEY_RES.verify|verify} messages.
     * @param message S2C_CLUB_MONEY_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_MONEY_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_MONEY_RES message, length delimited. Does not implicitly {@link S2C_CLUB_MONEY_RES.verify|verify} messages.
     * @param message S2C_CLUB_MONEY_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_MONEY_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_MONEY_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_MONEY_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_MONEY_RES;

    /**
     * Decodes a S2C_CLUB_MONEY_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_MONEY_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_MONEY_RES;

    /**
     * Verifies a S2C_CLUB_MONEY_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_MONEY_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_MONEY_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_MONEY_RES;

    /**
     * Creates a plain object from a S2C_CLUB_MONEY_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_MONEY_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_MONEY_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_MONEY_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_MONEY_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14090
    }
}

/** Properties of a C2S_CONFIG_FAST_GAME_LIST. */
export interface IC2S_CONFIG_FAST_GAME_LIST {

    /** C2S_CONFIG_FAST_GAME_LIST clubId */
    clubId?: (number|null);

    /** C2S_CONFIG_FAST_GAME_LIST templateIds */
    templateIds?: ({ [k: string]: number }|null);
}

/** Represents a C2S_CONFIG_FAST_GAME_LIST. */
export class C2S_CONFIG_FAST_GAME_LIST implements IC2S_CONFIG_FAST_GAME_LIST {

    /**
     * Constructs a new C2S_CONFIG_FAST_GAME_LIST.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CONFIG_FAST_GAME_LIST);

    /** C2S_CONFIG_FAST_GAME_LIST clubId. */
    public clubId: number;

    /** C2S_CONFIG_FAST_GAME_LIST templateIds. */
    public templateIds: { [k: string]: number };

    /**
     * Creates a new C2S_CONFIG_FAST_GAME_LIST instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CONFIG_FAST_GAME_LIST instance
     */
    public static create(properties?: IC2S_CONFIG_FAST_GAME_LIST): C2S_CONFIG_FAST_GAME_LIST;

    /**
     * Encodes the specified C2S_CONFIG_FAST_GAME_LIST message. Does not implicitly {@link C2S_CONFIG_FAST_GAME_LIST.verify|verify} messages.
     * @param message C2S_CONFIG_FAST_GAME_LIST message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CONFIG_FAST_GAME_LIST, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CONFIG_FAST_GAME_LIST message, length delimited. Does not implicitly {@link C2S_CONFIG_FAST_GAME_LIST.verify|verify} messages.
     * @param message C2S_CONFIG_FAST_GAME_LIST message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CONFIG_FAST_GAME_LIST, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CONFIG_FAST_GAME_LIST message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CONFIG_FAST_GAME_LIST
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CONFIG_FAST_GAME_LIST;

    /**
     * Decodes a C2S_CONFIG_FAST_GAME_LIST message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CONFIG_FAST_GAME_LIST
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CONFIG_FAST_GAME_LIST;

    /**
     * Verifies a C2S_CONFIG_FAST_GAME_LIST message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CONFIG_FAST_GAME_LIST message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CONFIG_FAST_GAME_LIST
     */
    public static fromObject(object: { [k: string]: any }): C2S_CONFIG_FAST_GAME_LIST;

    /**
     * Creates a plain object from a C2S_CONFIG_FAST_GAME_LIST message. Also converts values to other types if specified.
     * @param message C2S_CONFIG_FAST_GAME_LIST
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CONFIG_FAST_GAME_LIST, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CONFIG_FAST_GAME_LIST to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CONFIG_FAST_GAME_LIST {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14091
    }
}

/** Properties of a S2C_CONFIG_FAST_GAME_LIST. */
export interface IS2C_CONFIG_FAST_GAME_LIST {

    /** S2C_CONFIG_FAST_GAME_LIST result */
    result?: (number|null);

    /** S2C_CONFIG_FAST_GAME_LIST clubId */
    clubId?: (number|null);

    /** S2C_CONFIG_FAST_GAME_LIST templateIds */
    templateIds?: ({ [k: string]: number }|null);
}

/** Represents a S2C_CONFIG_FAST_GAME_LIST. */
export class S2C_CONFIG_FAST_GAME_LIST implements IS2C_CONFIG_FAST_GAME_LIST {

    /**
     * Constructs a new S2C_CONFIG_FAST_GAME_LIST.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CONFIG_FAST_GAME_LIST);

    /** S2C_CONFIG_FAST_GAME_LIST result. */
    public result: number;

    /** S2C_CONFIG_FAST_GAME_LIST clubId. */
    public clubId: number;

    /** S2C_CONFIG_FAST_GAME_LIST templateIds. */
    public templateIds: { [k: string]: number };

    /**
     * Creates a new S2C_CONFIG_FAST_GAME_LIST instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CONFIG_FAST_GAME_LIST instance
     */
    public static create(properties?: IS2C_CONFIG_FAST_GAME_LIST): S2C_CONFIG_FAST_GAME_LIST;

    /**
     * Encodes the specified S2C_CONFIG_FAST_GAME_LIST message. Does not implicitly {@link S2C_CONFIG_FAST_GAME_LIST.verify|verify} messages.
     * @param message S2C_CONFIG_FAST_GAME_LIST message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CONFIG_FAST_GAME_LIST, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CONFIG_FAST_GAME_LIST message, length delimited. Does not implicitly {@link S2C_CONFIG_FAST_GAME_LIST.verify|verify} messages.
     * @param message S2C_CONFIG_FAST_GAME_LIST message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CONFIG_FAST_GAME_LIST, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CONFIG_FAST_GAME_LIST message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CONFIG_FAST_GAME_LIST
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CONFIG_FAST_GAME_LIST;

    /**
     * Decodes a S2C_CONFIG_FAST_GAME_LIST message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CONFIG_FAST_GAME_LIST
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CONFIG_FAST_GAME_LIST;

    /**
     * Verifies a S2C_CONFIG_FAST_GAME_LIST message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CONFIG_FAST_GAME_LIST message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CONFIG_FAST_GAME_LIST
     */
    public static fromObject(object: { [k: string]: any }): S2C_CONFIG_FAST_GAME_LIST;

    /**
     * Creates a plain object from a S2C_CONFIG_FAST_GAME_LIST message. Also converts values to other types if specified.
     * @param message S2C_CONFIG_FAST_GAME_LIST
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CONFIG_FAST_GAME_LIST, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CONFIG_FAST_GAME_LIST to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CONFIG_FAST_GAME_LIST {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14092
    }
}

/** Properties of a C2S_IMPORT_PLAYER_FROM_GROUP. */
export interface IC2S_IMPORT_PLAYER_FROM_GROUP {

    /** C2S_IMPORT_PLAYER_FROM_GROUP clubId */
    clubId?: (number|null);

    /** C2S_IMPORT_PLAYER_FROM_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a C2S_IMPORT_PLAYER_FROM_GROUP. */
export class C2S_IMPORT_PLAYER_FROM_GROUP implements IC2S_IMPORT_PLAYER_FROM_GROUP {

    /**
     * Constructs a new C2S_IMPORT_PLAYER_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_IMPORT_PLAYER_FROM_GROUP);

    /** C2S_IMPORT_PLAYER_FROM_GROUP clubId. */
    public clubId: number;

    /** C2S_IMPORT_PLAYER_FROM_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new C2S_IMPORT_PLAYER_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_IMPORT_PLAYER_FROM_GROUP instance
     */
    public static create(properties?: IC2S_IMPORT_PLAYER_FROM_GROUP): C2S_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Encodes the specified C2S_IMPORT_PLAYER_FROM_GROUP message. Does not implicitly {@link C2S_IMPORT_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message C2S_IMPORT_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_IMPORT_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_IMPORT_PLAYER_FROM_GROUP message, length delimited. Does not implicitly {@link C2S_IMPORT_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message C2S_IMPORT_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_IMPORT_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_IMPORT_PLAYER_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_IMPORT_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Decodes a C2S_IMPORT_PLAYER_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_IMPORT_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Verifies a C2S_IMPORT_PLAYER_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_IMPORT_PLAYER_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_IMPORT_PLAYER_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Creates a plain object from a C2S_IMPORT_PLAYER_FROM_GROUP message. Also converts values to other types if specified.
     * @param message C2S_IMPORT_PLAYER_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_IMPORT_PLAYER_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_IMPORT_PLAYER_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_IMPORT_PLAYER_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14093
    }
}

/** Properties of a S2C_IMPORT_PLAYER_FROM_GROUP. */
export interface IS2C_IMPORT_PLAYER_FROM_GROUP {

    /** S2C_IMPORT_PLAYER_FROM_GROUP result */
    result?: (number|null);
}

/** Represents a S2C_IMPORT_PLAYER_FROM_GROUP. */
export class S2C_IMPORT_PLAYER_FROM_GROUP implements IS2C_IMPORT_PLAYER_FROM_GROUP {

    /**
     * Constructs a new S2C_IMPORT_PLAYER_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_IMPORT_PLAYER_FROM_GROUP);

    /** S2C_IMPORT_PLAYER_FROM_GROUP result. */
    public result: number;

    /**
     * Creates a new S2C_IMPORT_PLAYER_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_IMPORT_PLAYER_FROM_GROUP instance
     */
    public static create(properties?: IS2C_IMPORT_PLAYER_FROM_GROUP): S2C_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Encodes the specified S2C_IMPORT_PLAYER_FROM_GROUP message. Does not implicitly {@link S2C_IMPORT_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message S2C_IMPORT_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_IMPORT_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_IMPORT_PLAYER_FROM_GROUP message, length delimited. Does not implicitly {@link S2C_IMPORT_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message S2C_IMPORT_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_IMPORT_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_IMPORT_PLAYER_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_IMPORT_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Decodes a S2C_IMPORT_PLAYER_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_IMPORT_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Verifies a S2C_IMPORT_PLAYER_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_IMPORT_PLAYER_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_IMPORT_PLAYER_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_IMPORT_PLAYER_FROM_GROUP;

    /**
     * Creates a plain object from a S2C_IMPORT_PLAYER_FROM_GROUP message. Also converts values to other types if specified.
     * @param message S2C_IMPORT_PLAYER_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_IMPORT_PLAYER_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_IMPORT_PLAYER_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_IMPORT_PLAYER_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14094
    }
}

/** Properties of a C2S_CLUB_FORCE_DISMISS_TABLE. */
export interface IC2S_CLUB_FORCE_DISMISS_TABLE {

    /** C2S_CLUB_FORCE_DISMISS_TABLE clubId */
    clubId?: (number|null);

    /** C2S_CLUB_FORCE_DISMISS_TABLE tableId */
    tableId?: (number|null);
}

/** Represents a C2S_CLUB_FORCE_DISMISS_TABLE. */
export class C2S_CLUB_FORCE_DISMISS_TABLE implements IC2S_CLUB_FORCE_DISMISS_TABLE {

    /**
     * Constructs a new C2S_CLUB_FORCE_DISMISS_TABLE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_FORCE_DISMISS_TABLE);

    /** C2S_CLUB_FORCE_DISMISS_TABLE clubId. */
    public clubId: number;

    /** C2S_CLUB_FORCE_DISMISS_TABLE tableId. */
    public tableId: number;

    /**
     * Creates a new C2S_CLUB_FORCE_DISMISS_TABLE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_FORCE_DISMISS_TABLE instance
     */
    public static create(properties?: IC2S_CLUB_FORCE_DISMISS_TABLE): C2S_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Encodes the specified C2S_CLUB_FORCE_DISMISS_TABLE message. Does not implicitly {@link C2S_CLUB_FORCE_DISMISS_TABLE.verify|verify} messages.
     * @param message C2S_CLUB_FORCE_DISMISS_TABLE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_FORCE_DISMISS_TABLE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_FORCE_DISMISS_TABLE message, length delimited. Does not implicitly {@link C2S_CLUB_FORCE_DISMISS_TABLE.verify|verify} messages.
     * @param message C2S_CLUB_FORCE_DISMISS_TABLE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_FORCE_DISMISS_TABLE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_FORCE_DISMISS_TABLE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_FORCE_DISMISS_TABLE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Decodes a C2S_CLUB_FORCE_DISMISS_TABLE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_FORCE_DISMISS_TABLE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Verifies a C2S_CLUB_FORCE_DISMISS_TABLE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_FORCE_DISMISS_TABLE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_FORCE_DISMISS_TABLE
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Creates a plain object from a C2S_CLUB_FORCE_DISMISS_TABLE message. Also converts values to other types if specified.
     * @param message C2S_CLUB_FORCE_DISMISS_TABLE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_FORCE_DISMISS_TABLE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_FORCE_DISMISS_TABLE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_FORCE_DISMISS_TABLE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14095
    }
}

/** Properties of a S2C_CLUB_FORCE_DISMISS_TABLE. */
export interface IS2C_CLUB_FORCE_DISMISS_TABLE {

    /** S2C_CLUB_FORCE_DISMISS_TABLE result */
    result?: (number|null);
}

/** Represents a S2C_CLUB_FORCE_DISMISS_TABLE. */
export class S2C_CLUB_FORCE_DISMISS_TABLE implements IS2C_CLUB_FORCE_DISMISS_TABLE {

    /**
     * Constructs a new S2C_CLUB_FORCE_DISMISS_TABLE.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_FORCE_DISMISS_TABLE);

    /** S2C_CLUB_FORCE_DISMISS_TABLE result. */
    public result: number;

    /**
     * Creates a new S2C_CLUB_FORCE_DISMISS_TABLE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_FORCE_DISMISS_TABLE instance
     */
    public static create(properties?: IS2C_CLUB_FORCE_DISMISS_TABLE): S2C_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Encodes the specified S2C_CLUB_FORCE_DISMISS_TABLE message. Does not implicitly {@link S2C_CLUB_FORCE_DISMISS_TABLE.verify|verify} messages.
     * @param message S2C_CLUB_FORCE_DISMISS_TABLE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_FORCE_DISMISS_TABLE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_FORCE_DISMISS_TABLE message, length delimited. Does not implicitly {@link S2C_CLUB_FORCE_DISMISS_TABLE.verify|verify} messages.
     * @param message S2C_CLUB_FORCE_DISMISS_TABLE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_FORCE_DISMISS_TABLE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_FORCE_DISMISS_TABLE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_FORCE_DISMISS_TABLE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Decodes a S2C_CLUB_FORCE_DISMISS_TABLE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_FORCE_DISMISS_TABLE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Verifies a S2C_CLUB_FORCE_DISMISS_TABLE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_FORCE_DISMISS_TABLE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_FORCE_DISMISS_TABLE
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_FORCE_DISMISS_TABLE;

    /**
     * Creates a plain object from a S2C_CLUB_FORCE_DISMISS_TABLE message. Also converts values to other types if specified.
     * @param message S2C_CLUB_FORCE_DISMISS_TABLE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_FORCE_DISMISS_TABLE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_FORCE_DISMISS_TABLE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_FORCE_DISMISS_TABLE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14096
    }
}

/** Properties of a C2S_CLUB_EDIT_INFO. */
export interface IC2S_CLUB_EDIT_INFO {

    /** C2S_CLUB_EDIT_INFO clubId */
    clubId?: (number|null);

    /** C2S_CLUB_EDIT_INFO name */
    name?: (string|null);
}

/** Represents a C2S_CLUB_EDIT_INFO. */
export class C2S_CLUB_EDIT_INFO implements IC2S_CLUB_EDIT_INFO {

    /**
     * Constructs a new C2S_CLUB_EDIT_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_EDIT_INFO);

    /** C2S_CLUB_EDIT_INFO clubId. */
    public clubId: number;

    /** C2S_CLUB_EDIT_INFO name. */
    public name: string;

    /**
     * Creates a new C2S_CLUB_EDIT_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_EDIT_INFO instance
     */
    public static create(properties?: IC2S_CLUB_EDIT_INFO): C2S_CLUB_EDIT_INFO;

    /**
     * Encodes the specified C2S_CLUB_EDIT_INFO message. Does not implicitly {@link C2S_CLUB_EDIT_INFO.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_EDIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_EDIT_INFO message, length delimited. Does not implicitly {@link C2S_CLUB_EDIT_INFO.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_EDIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_EDIT_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_EDIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_EDIT_INFO;

    /**
     * Decodes a C2S_CLUB_EDIT_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_EDIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_EDIT_INFO;

    /**
     * Verifies a C2S_CLUB_EDIT_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_EDIT_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_EDIT_INFO
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_EDIT_INFO;

    /**
     * Creates a plain object from a C2S_CLUB_EDIT_INFO message. Also converts values to other types if specified.
     * @param message C2S_CLUB_EDIT_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_EDIT_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_EDIT_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_EDIT_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14097
    }
}

/** Properties of a S2C_CLUB_EDIT_INFO. */
export interface IS2C_CLUB_EDIT_INFO {

    /** S2C_CLUB_EDIT_INFO result */
    result?: (number|null);

    /** S2C_CLUB_EDIT_INFO clubId */
    clubId?: (number|null);

    /** S2C_CLUB_EDIT_INFO name */
    name?: (string|null);
}

/** Represents a S2C_CLUB_EDIT_INFO. */
export class S2C_CLUB_EDIT_INFO implements IS2C_CLUB_EDIT_INFO {

    /**
     * Constructs a new S2C_CLUB_EDIT_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_EDIT_INFO);

    /** S2C_CLUB_EDIT_INFO result. */
    public result: number;

    /** S2C_CLUB_EDIT_INFO clubId. */
    public clubId: number;

    /** S2C_CLUB_EDIT_INFO name. */
    public name: string;

    /**
     * Creates a new S2C_CLUB_EDIT_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_EDIT_INFO instance
     */
    public static create(properties?: IS2C_CLUB_EDIT_INFO): S2C_CLUB_EDIT_INFO;

    /**
     * Encodes the specified S2C_CLUB_EDIT_INFO message. Does not implicitly {@link S2C_CLUB_EDIT_INFO.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_EDIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_EDIT_INFO message, length delimited. Does not implicitly {@link S2C_CLUB_EDIT_INFO.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_EDIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_EDIT_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_EDIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_EDIT_INFO;

    /**
     * Decodes a S2C_CLUB_EDIT_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_EDIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_EDIT_INFO;

    /**
     * Verifies a S2C_CLUB_EDIT_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_EDIT_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_EDIT_INFO
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_EDIT_INFO;

    /**
     * Creates a plain object from a S2C_CLUB_EDIT_INFO message. Also converts values to other types if specified.
     * @param message S2C_CLUB_EDIT_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_EDIT_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_EDIT_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_EDIT_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14098
    }
}

/** Properties of a C2S_CLUB_BLOCK_PULL_GROUPS. */
export interface IC2S_CLUB_BLOCK_PULL_GROUPS {

    /** C2S_CLUB_BLOCK_PULL_GROUPS clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_PULL_GROUPS. */
export class C2S_CLUB_BLOCK_PULL_GROUPS implements IC2S_CLUB_BLOCK_PULL_GROUPS {

    /**
     * Constructs a new C2S_CLUB_BLOCK_PULL_GROUPS.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_PULL_GROUPS);

    /** C2S_CLUB_BLOCK_PULL_GROUPS clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_PULL_GROUPS instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_PULL_GROUPS instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_PULL_GROUPS): C2S_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_PULL_GROUPS message. Does not implicitly {@link C2S_CLUB_BLOCK_PULL_GROUPS.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_PULL_GROUPS message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_PULL_GROUPS.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_PULL_GROUPS message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Decodes a C2S_CLUB_BLOCK_PULL_GROUPS message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Verifies a C2S_CLUB_BLOCK_PULL_GROUPS message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_PULL_GROUPS message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_PULL_GROUPS
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_PULL_GROUPS message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_PULL_GROUPS
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_PULL_GROUPS, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_PULL_GROUPS to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_PULL_GROUPS {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14100
    }
}

/** Properties of a BLOCK_GROUP. */
export interface IBLOCK_GROUP {

    /** BLOCK_GROUP groupId */
    groupId?: (number|null);

    /** BLOCK_GROUP players */
    players?: (IPLAYER_BASE_INFO[]|null);
}

/** Represents a BLOCK_GROUP. */
export class BLOCK_GROUP implements IBLOCK_GROUP {

    /**
     * Constructs a new BLOCK_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBLOCK_GROUP);

    /** BLOCK_GROUP groupId. */
    public groupId: number;

    /** BLOCK_GROUP players. */
    public players: IPLAYER_BASE_INFO[];

    /**
     * Creates a new BLOCK_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BLOCK_GROUP instance
     */
    public static create(properties?: IBLOCK_GROUP): BLOCK_GROUP;

    /**
     * Encodes the specified BLOCK_GROUP message. Does not implicitly {@link BLOCK_GROUP.verify|verify} messages.
     * @param message BLOCK_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBLOCK_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BLOCK_GROUP message, length delimited. Does not implicitly {@link BLOCK_GROUP.verify|verify} messages.
     * @param message BLOCK_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBLOCK_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BLOCK_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BLOCK_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BLOCK_GROUP;

    /**
     * Decodes a BLOCK_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BLOCK_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BLOCK_GROUP;

    /**
     * Verifies a BLOCK_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BLOCK_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BLOCK_GROUP
     */
    public static fromObject(object: { [k: string]: any }): BLOCK_GROUP;

    /**
     * Creates a plain object from a BLOCK_GROUP message. Also converts values to other types if specified.
     * @param message BLOCK_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BLOCK_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BLOCK_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a S2C_CLUB_BLOCK_PULL_GROUPS. */
export interface IS2C_CLUB_BLOCK_PULL_GROUPS {

    /** S2C_CLUB_BLOCK_PULL_GROUPS result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_PULL_GROUPS groups */
    groups?: (IBLOCK_GROUP[]|null);
}

/** Represents a S2C_CLUB_BLOCK_PULL_GROUPS. */
export class S2C_CLUB_BLOCK_PULL_GROUPS implements IS2C_CLUB_BLOCK_PULL_GROUPS {

    /**
     * Constructs a new S2C_CLUB_BLOCK_PULL_GROUPS.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_PULL_GROUPS);

    /** S2C_CLUB_BLOCK_PULL_GROUPS result. */
    public result: number;

    /** S2C_CLUB_BLOCK_PULL_GROUPS groups. */
    public groups: IBLOCK_GROUP[];

    /**
     * Creates a new S2C_CLUB_BLOCK_PULL_GROUPS instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_PULL_GROUPS instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_PULL_GROUPS): S2C_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_PULL_GROUPS message. Does not implicitly {@link S2C_CLUB_BLOCK_PULL_GROUPS.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_PULL_GROUPS message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_PULL_GROUPS.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_PULL_GROUPS message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Decodes a S2C_CLUB_BLOCK_PULL_GROUPS message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Verifies a S2C_CLUB_BLOCK_PULL_GROUPS message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_PULL_GROUPS message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_PULL_GROUPS
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_PULL_GROUPS;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_PULL_GROUPS message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_PULL_GROUPS
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_PULL_GROUPS, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_PULL_GROUPS to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_PULL_GROUPS {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14101
    }
}

/** Properties of a C2S_CLUB_BLOCK_NEW_GROUP. */
export interface IC2S_CLUB_BLOCK_NEW_GROUP {

    /** C2S_CLUB_BLOCK_NEW_GROUP clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_NEW_GROUP. */
export class C2S_CLUB_BLOCK_NEW_GROUP implements IC2S_CLUB_BLOCK_NEW_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_NEW_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_NEW_GROUP);

    /** C2S_CLUB_BLOCK_NEW_GROUP clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_NEW_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_NEW_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_NEW_GROUP): C2S_CLUB_BLOCK_NEW_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_NEW_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_NEW_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_NEW_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_NEW_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_NEW_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_NEW_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_NEW_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_NEW_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_NEW_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_NEW_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_NEW_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_NEW_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_NEW_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_NEW_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_NEW_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_NEW_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_NEW_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14102
    }
}

/** Properties of a S2C_CLUB_BLOCK_NEW_GROUP. */
export interface IS2C_CLUB_BLOCK_NEW_GROUP {

    /** S2C_CLUB_BLOCK_NEW_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_NEW_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_NEW_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_NEW_GROUP. */
export class S2C_CLUB_BLOCK_NEW_GROUP implements IS2C_CLUB_BLOCK_NEW_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_NEW_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_NEW_GROUP);

    /** S2C_CLUB_BLOCK_NEW_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_NEW_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_NEW_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_NEW_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_NEW_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_NEW_GROUP): S2C_CLUB_BLOCK_NEW_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_NEW_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_NEW_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_NEW_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_NEW_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_NEW_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_NEW_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_NEW_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_NEW_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_NEW_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_NEW_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_NEW_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_NEW_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_NEW_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_NEW_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_NEW_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_NEW_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_NEW_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14103
    }
}

/** Properties of a C2S_CLUB_BLOCK_DEL_GROUP. */
export interface IC2S_CLUB_BLOCK_DEL_GROUP {

    /** C2S_CLUB_BLOCK_DEL_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_DEL_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_DEL_GROUP. */
export class C2S_CLUB_BLOCK_DEL_GROUP implements IC2S_CLUB_BLOCK_DEL_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_DEL_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_DEL_GROUP);

    /** C2S_CLUB_BLOCK_DEL_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_DEL_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_DEL_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_DEL_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_DEL_GROUP): C2S_CLUB_BLOCK_DEL_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_DEL_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_DEL_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_DEL_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_DEL_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_DEL_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_DEL_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_DEL_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_DEL_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_DEL_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_DEL_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_DEL_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_DEL_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_DEL_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_DEL_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_DEL_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_DEL_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_DEL_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14104
    }
}

/** Properties of a S2C_CLUB_BLOCK_DEL_GROUP. */
export interface IS2C_CLUB_BLOCK_DEL_GROUP {

    /** S2C_CLUB_BLOCK_DEL_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_DEL_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_DEL_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_DEL_GROUP. */
export class S2C_CLUB_BLOCK_DEL_GROUP implements IS2C_CLUB_BLOCK_DEL_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_DEL_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_DEL_GROUP);

    /** S2C_CLUB_BLOCK_DEL_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_DEL_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_DEL_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_DEL_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_DEL_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_DEL_GROUP): S2C_CLUB_BLOCK_DEL_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_DEL_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_DEL_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_DEL_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_DEL_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_DEL_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_DEL_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_DEL_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_DEL_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_DEL_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_DEL_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_DEL_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_DEL_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_DEL_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_DEL_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_DEL_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_DEL_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_DEL_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14105
    }
}

/** Properties of a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP. */
export interface IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP groupId */
    groupId?: (number|null);

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP guid */
    guid?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP. */
export class C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP implements IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP);

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP groupId. */
    public groupId: number;

    /** C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP guid. */
    public guid: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP): C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14106
    }
}

/** Properties of a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP. */
export interface IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP groupId */
    groupId?: (number|null);

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP guid */
    guid?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP. */
export class S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP implements IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP);

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP groupId. */
    public groupId: number;

    /** S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP guid. */
    public guid: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP): S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_ADD_PLAYER_TO_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14107
    }
}

/** Properties of a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP. */
export interface IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP groupId */
    groupId?: (number|null);

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP guid */
    guid?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP. */
export class C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP implements IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP);

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP groupId. */
    public groupId: number;

    /** C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP guid. */
    public guid: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP): C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14108
    }
}

/** Properties of a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP. */
export interface IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP groupId */
    groupId?: (number|null);

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP guid */
    guid?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP. */
export class S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP implements IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP);

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP groupId. */
    public groupId: number;

    /** S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP guid. */
    public guid: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP): S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_REMOVE_PLAYER_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14109
    }
}

/** Properties of a C2S_CLUB_GET_CONFIG. */
export interface IC2S_CLUB_GET_CONFIG {

    /** C2S_CLUB_GET_CONFIG clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_GET_CONFIG. */
export class C2S_CLUB_GET_CONFIG implements IC2S_CLUB_GET_CONFIG {

    /**
     * Constructs a new C2S_CLUB_GET_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_GET_CONFIG);

    /** C2S_CLUB_GET_CONFIG clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_GET_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_GET_CONFIG instance
     */
    public static create(properties?: IC2S_CLUB_GET_CONFIG): C2S_CLUB_GET_CONFIG;

    /**
     * Encodes the specified C2S_CLUB_GET_CONFIG message. Does not implicitly {@link C2S_CLUB_GET_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_GET_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_GET_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_GET_CONFIG message, length delimited. Does not implicitly {@link C2S_CLUB_GET_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_GET_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_GET_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_GET_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_GET_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_GET_CONFIG;

    /**
     * Decodes a C2S_CLUB_GET_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_GET_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_GET_CONFIG;

    /**
     * Verifies a C2S_CLUB_GET_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_GET_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_GET_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_GET_CONFIG;

    /**
     * Creates a plain object from a C2S_CLUB_GET_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_CLUB_GET_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_GET_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_GET_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_GET_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14110
    }
}

/** Properties of a S2C_CLUB_GET_CONFIG. */
export interface IS2C_CLUB_GET_CONFIG {

    /** S2C_CLUB_GET_CONFIG result */
    result?: (number|null);

    /** S2C_CLUB_GET_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_CLUB_GET_CONFIG conf */
    conf?: (string|null);
}

/** Represents a S2C_CLUB_GET_CONFIG. */
export class S2C_CLUB_GET_CONFIG implements IS2C_CLUB_GET_CONFIG {

    /**
     * Constructs a new S2C_CLUB_GET_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_GET_CONFIG);

    /** S2C_CLUB_GET_CONFIG result. */
    public result: number;

    /** S2C_CLUB_GET_CONFIG clubId. */
    public clubId: number;

    /** S2C_CLUB_GET_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new S2C_CLUB_GET_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_GET_CONFIG instance
     */
    public static create(properties?: IS2C_CLUB_GET_CONFIG): S2C_CLUB_GET_CONFIG;

    /**
     * Encodes the specified S2C_CLUB_GET_CONFIG message. Does not implicitly {@link S2C_CLUB_GET_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_GET_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_GET_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_GET_CONFIG message, length delimited. Does not implicitly {@link S2C_CLUB_GET_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_GET_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_GET_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_GET_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_GET_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_GET_CONFIG;

    /**
     * Decodes a S2C_CLUB_GET_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_GET_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_GET_CONFIG;

    /**
     * Verifies a S2C_CLUB_GET_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_GET_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_GET_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_GET_CONFIG;

    /**
     * Creates a plain object from a S2C_CLUB_GET_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_CLUB_GET_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_GET_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_GET_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_GET_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14111
    }
}

/** Properties of a C2S_CLUB_EDIT_CONFIG. */
export interface IC2S_CLUB_EDIT_CONFIG {

    /** C2S_CLUB_EDIT_CONFIG clubId */
    clubId?: (number|null);

    /** C2S_CLUB_EDIT_CONFIG conf */
    conf?: (string|null);
}

/** Represents a C2S_CLUB_EDIT_CONFIG. */
export class C2S_CLUB_EDIT_CONFIG implements IC2S_CLUB_EDIT_CONFIG {

    /**
     * Constructs a new C2S_CLUB_EDIT_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_EDIT_CONFIG);

    /** C2S_CLUB_EDIT_CONFIG clubId. */
    public clubId: number;

    /** C2S_CLUB_EDIT_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new C2S_CLUB_EDIT_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_EDIT_CONFIG instance
     */
    public static create(properties?: IC2S_CLUB_EDIT_CONFIG): C2S_CLUB_EDIT_CONFIG;

    /**
     * Encodes the specified C2S_CLUB_EDIT_CONFIG message. Does not implicitly {@link C2S_CLUB_EDIT_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_EDIT_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_EDIT_CONFIG message, length delimited. Does not implicitly {@link C2S_CLUB_EDIT_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_EDIT_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_EDIT_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_EDIT_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_EDIT_CONFIG;

    /**
     * Decodes a C2S_CLUB_EDIT_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_EDIT_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_EDIT_CONFIG;

    /**
     * Verifies a C2S_CLUB_EDIT_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_EDIT_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_EDIT_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_EDIT_CONFIG;

    /**
     * Creates a plain object from a C2S_CLUB_EDIT_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_CLUB_EDIT_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_EDIT_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_EDIT_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_EDIT_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14112
    }
}

/** Properties of a S2C_CLUB_EDIT_CONFIG. */
export interface IS2C_CLUB_EDIT_CONFIG {

    /** S2C_CLUB_EDIT_CONFIG result */
    result?: (number|null);

    /** S2C_CLUB_EDIT_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_CLUB_EDIT_CONFIG conf */
    conf?: (string|null);
}

/** Represents a S2C_CLUB_EDIT_CONFIG. */
export class S2C_CLUB_EDIT_CONFIG implements IS2C_CLUB_EDIT_CONFIG {

    /**
     * Constructs a new S2C_CLUB_EDIT_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_EDIT_CONFIG);

    /** S2C_CLUB_EDIT_CONFIG result. */
    public result: number;

    /** S2C_CLUB_EDIT_CONFIG clubId. */
    public clubId: number;

    /** S2C_CLUB_EDIT_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new S2C_CLUB_EDIT_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_EDIT_CONFIG instance
     */
    public static create(properties?: IS2C_CLUB_EDIT_CONFIG): S2C_CLUB_EDIT_CONFIG;

    /**
     * Encodes the specified S2C_CLUB_EDIT_CONFIG message. Does not implicitly {@link S2C_CLUB_EDIT_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_EDIT_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_EDIT_CONFIG message, length delimited. Does not implicitly {@link S2C_CLUB_EDIT_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_EDIT_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_EDIT_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_EDIT_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_EDIT_CONFIG;

    /**
     * Decodes a S2C_CLUB_EDIT_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_EDIT_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_EDIT_CONFIG;

    /**
     * Verifies a S2C_CLUB_EDIT_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_EDIT_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_EDIT_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_EDIT_CONFIG;

    /**
     * Creates a plain object from a S2C_CLUB_EDIT_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_CLUB_EDIT_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_EDIT_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_EDIT_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_EDIT_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14113
    }
}

/** Properties of a C2S_CLUB_INVITE_JOIN_ROOM. */
export interface IC2S_CLUB_INVITE_JOIN_ROOM {

    /** C2S_CLUB_INVITE_JOIN_ROOM clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_INVITE_JOIN_ROOM. */
export class C2S_CLUB_INVITE_JOIN_ROOM implements IC2S_CLUB_INVITE_JOIN_ROOM {

    /**
     * Constructs a new C2S_CLUB_INVITE_JOIN_ROOM.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_INVITE_JOIN_ROOM);

    /** C2S_CLUB_INVITE_JOIN_ROOM clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_INVITE_JOIN_ROOM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_INVITE_JOIN_ROOM instance
     */
    public static create(properties?: IC2S_CLUB_INVITE_JOIN_ROOM): C2S_CLUB_INVITE_JOIN_ROOM;

    /**
     * Encodes the specified C2S_CLUB_INVITE_JOIN_ROOM message. Does not implicitly {@link C2S_CLUB_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message C2S_CLUB_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_INVITE_JOIN_ROOM message, length delimited. Does not implicitly {@link C2S_CLUB_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message C2S_CLUB_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_INVITE_JOIN_ROOM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_INVITE_JOIN_ROOM;

    /**
     * Decodes a C2S_CLUB_INVITE_JOIN_ROOM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_INVITE_JOIN_ROOM;

    /**
     * Verifies a C2S_CLUB_INVITE_JOIN_ROOM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_INVITE_JOIN_ROOM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_INVITE_JOIN_ROOM
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_INVITE_JOIN_ROOM;

    /**
     * Creates a plain object from a C2S_CLUB_INVITE_JOIN_ROOM message. Also converts values to other types if specified.
     * @param message C2S_CLUB_INVITE_JOIN_ROOM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_INVITE_JOIN_ROOM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_INVITE_JOIN_ROOM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_INVITE_JOIN_ROOM {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14114
    }
}

/** Properties of a S2C_CLUB_INVITE_JOIN_ROOM. */
export interface IS2C_CLUB_INVITE_JOIN_ROOM {

    /** S2C_CLUB_INVITE_JOIN_ROOM result */
    result?: (number|null);

    /** S2C_CLUB_INVITE_JOIN_ROOM timeout */
    timeout?: (number|null);
}

/** Represents a S2C_CLUB_INVITE_JOIN_ROOM. */
export class S2C_CLUB_INVITE_JOIN_ROOM implements IS2C_CLUB_INVITE_JOIN_ROOM {

    /**
     * Constructs a new S2C_CLUB_INVITE_JOIN_ROOM.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_INVITE_JOIN_ROOM);

    /** S2C_CLUB_INVITE_JOIN_ROOM result. */
    public result: number;

    /** S2C_CLUB_INVITE_JOIN_ROOM timeout. */
    public timeout: number;

    /**
     * Creates a new S2C_CLUB_INVITE_JOIN_ROOM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_INVITE_JOIN_ROOM instance
     */
    public static create(properties?: IS2C_CLUB_INVITE_JOIN_ROOM): S2C_CLUB_INVITE_JOIN_ROOM;

    /**
     * Encodes the specified S2C_CLUB_INVITE_JOIN_ROOM message. Does not implicitly {@link S2C_CLUB_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message S2C_CLUB_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_INVITE_JOIN_ROOM message, length delimited. Does not implicitly {@link S2C_CLUB_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message S2C_CLUB_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_INVITE_JOIN_ROOM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_INVITE_JOIN_ROOM;

    /**
     * Decodes a S2C_CLUB_INVITE_JOIN_ROOM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_INVITE_JOIN_ROOM;

    /**
     * Verifies a S2C_CLUB_INVITE_JOIN_ROOM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_INVITE_JOIN_ROOM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_INVITE_JOIN_ROOM
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_INVITE_JOIN_ROOM;

    /**
     * Creates a plain object from a S2C_CLUB_INVITE_JOIN_ROOM message. Also converts values to other types if specified.
     * @param message S2C_CLUB_INVITE_JOIN_ROOM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_INVITE_JOIN_ROOM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_INVITE_JOIN_ROOM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_INVITE_JOIN_ROOM {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14115
    }
}

/** Properties of a S2C_NOTIFY_INVITE_JOIN_ROOM. */
export interface IS2C_NOTIFY_INVITE_JOIN_ROOM {

    /** S2C_NOTIFY_INVITE_JOIN_ROOM inviter */
    inviter?: (IPLAYER_BASE_INFO|null);

    /** S2C_NOTIFY_INVITE_JOIN_ROOM table */
    table?: (ITABLE_INFO|null);
}

/** Represents a S2C_NOTIFY_INVITE_JOIN_ROOM. */
export class S2C_NOTIFY_INVITE_JOIN_ROOM implements IS2C_NOTIFY_INVITE_JOIN_ROOM {

    /**
     * Constructs a new S2C_NOTIFY_INVITE_JOIN_ROOM.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_NOTIFY_INVITE_JOIN_ROOM);

    /** S2C_NOTIFY_INVITE_JOIN_ROOM inviter. */
    public inviter?: (IPLAYER_BASE_INFO|null);

    /** S2C_NOTIFY_INVITE_JOIN_ROOM table. */
    public table?: (ITABLE_INFO|null);

    /**
     * Creates a new S2C_NOTIFY_INVITE_JOIN_ROOM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_NOTIFY_INVITE_JOIN_ROOM instance
     */
    public static create(properties?: IS2C_NOTIFY_INVITE_JOIN_ROOM): S2C_NOTIFY_INVITE_JOIN_ROOM;

    /**
     * Encodes the specified S2C_NOTIFY_INVITE_JOIN_ROOM message. Does not implicitly {@link S2C_NOTIFY_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message S2C_NOTIFY_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_NOTIFY_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_NOTIFY_INVITE_JOIN_ROOM message, length delimited. Does not implicitly {@link S2C_NOTIFY_INVITE_JOIN_ROOM.verify|verify} messages.
     * @param message S2C_NOTIFY_INVITE_JOIN_ROOM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_NOTIFY_INVITE_JOIN_ROOM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_NOTIFY_INVITE_JOIN_ROOM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_NOTIFY_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_NOTIFY_INVITE_JOIN_ROOM;

    /**
     * Decodes a S2C_NOTIFY_INVITE_JOIN_ROOM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_NOTIFY_INVITE_JOIN_ROOM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_NOTIFY_INVITE_JOIN_ROOM;

    /**
     * Verifies a S2C_NOTIFY_INVITE_JOIN_ROOM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_NOTIFY_INVITE_JOIN_ROOM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_NOTIFY_INVITE_JOIN_ROOM
     */
    public static fromObject(object: { [k: string]: any }): S2C_NOTIFY_INVITE_JOIN_ROOM;

    /**
     * Creates a plain object from a S2C_NOTIFY_INVITE_JOIN_ROOM message. Also converts values to other types if specified.
     * @param message S2C_NOTIFY_INVITE_JOIN_ROOM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_NOTIFY_INVITE_JOIN_ROOM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_NOTIFY_INVITE_JOIN_ROOM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_NOTIFY_INVITE_JOIN_ROOM {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14116
    }
}

/** Properties of a CS_SEARCH_CLUB_PLAYER. */
export interface ICS_SEARCH_CLUB_PLAYER {

    /** CS_SEARCH_CLUB_PLAYER guidPattern */
    guidPattern?: (string|null);

    /** CS_SEARCH_CLUB_PLAYER clubId */
    clubId?: (number|null);

    /** CS_SEARCH_CLUB_PLAYER partner */
    partner?: (number|null);
}

/** Represents a CS_SEARCH_CLUB_PLAYER. */
export class CS_SEARCH_CLUB_PLAYER implements ICS_SEARCH_CLUB_PLAYER {

    /**
     * Constructs a new CS_SEARCH_CLUB_PLAYER.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SEARCH_CLUB_PLAYER);

    /** CS_SEARCH_CLUB_PLAYER guidPattern. */
    public guidPattern: string;

    /** CS_SEARCH_CLUB_PLAYER clubId. */
    public clubId: number;

    /** CS_SEARCH_CLUB_PLAYER partner. */
    public partner: number;

    /**
     * Creates a new CS_SEARCH_CLUB_PLAYER instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SEARCH_CLUB_PLAYER instance
     */
    public static create(properties?: ICS_SEARCH_CLUB_PLAYER): CS_SEARCH_CLUB_PLAYER;

    /**
     * Encodes the specified CS_SEARCH_CLUB_PLAYER message. Does not implicitly {@link CS_SEARCH_CLUB_PLAYER.verify|verify} messages.
     * @param message CS_SEARCH_CLUB_PLAYER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SEARCH_CLUB_PLAYER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SEARCH_CLUB_PLAYER message, length delimited. Does not implicitly {@link CS_SEARCH_CLUB_PLAYER.verify|verify} messages.
     * @param message CS_SEARCH_CLUB_PLAYER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SEARCH_CLUB_PLAYER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SEARCH_CLUB_PLAYER message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SEARCH_CLUB_PLAYER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SEARCH_CLUB_PLAYER;

    /**
     * Decodes a CS_SEARCH_CLUB_PLAYER message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SEARCH_CLUB_PLAYER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SEARCH_CLUB_PLAYER;

    /**
     * Verifies a CS_SEARCH_CLUB_PLAYER message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SEARCH_CLUB_PLAYER message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SEARCH_CLUB_PLAYER
     */
    public static fromObject(object: { [k: string]: any }): CS_SEARCH_CLUB_PLAYER;

    /**
     * Creates a plain object from a CS_SEARCH_CLUB_PLAYER message. Also converts values to other types if specified.
     * @param message CS_SEARCH_CLUB_PLAYER
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SEARCH_CLUB_PLAYER, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SEARCH_CLUB_PLAYER to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SEARCH_CLUB_PLAYER {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 14117
    }
}

/** Properties of a SC_SEARCH_CLUB_PLAYER. */
export interface ISC_SEARCH_CLUB_PLAYER {

    /** SC_SEARCH_CLUB_PLAYER result */
    result?: (number|null);

    /** SC_SEARCH_CLUB_PLAYER players */
    players?: (ICLUB_MEMBER[]|null);
}

/** Represents a SC_SEARCH_CLUB_PLAYER. */
export class SC_SEARCH_CLUB_PLAYER implements ISC_SEARCH_CLUB_PLAYER {

    /**
     * Constructs a new SC_SEARCH_CLUB_PLAYER.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SEARCH_CLUB_PLAYER);

    /** SC_SEARCH_CLUB_PLAYER result. */
    public result: number;

    /** SC_SEARCH_CLUB_PLAYER players. */
    public players: ICLUB_MEMBER[];

    /**
     * Creates a new SC_SEARCH_CLUB_PLAYER instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SEARCH_CLUB_PLAYER instance
     */
    public static create(properties?: ISC_SEARCH_CLUB_PLAYER): SC_SEARCH_CLUB_PLAYER;

    /**
     * Encodes the specified SC_SEARCH_CLUB_PLAYER message. Does not implicitly {@link SC_SEARCH_CLUB_PLAYER.verify|verify} messages.
     * @param message SC_SEARCH_CLUB_PLAYER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SEARCH_CLUB_PLAYER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SEARCH_CLUB_PLAYER message, length delimited. Does not implicitly {@link SC_SEARCH_CLUB_PLAYER.verify|verify} messages.
     * @param message SC_SEARCH_CLUB_PLAYER message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SEARCH_CLUB_PLAYER, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SEARCH_CLUB_PLAYER message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SEARCH_CLUB_PLAYER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SEARCH_CLUB_PLAYER;

    /**
     * Decodes a SC_SEARCH_CLUB_PLAYER message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SEARCH_CLUB_PLAYER
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SEARCH_CLUB_PLAYER;

    /**
     * Verifies a SC_SEARCH_CLUB_PLAYER message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SEARCH_CLUB_PLAYER message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SEARCH_CLUB_PLAYER
     */
    public static fromObject(object: { [k: string]: any }): SC_SEARCH_CLUB_PLAYER;

    /**
     * Creates a plain object from a SC_SEARCH_CLUB_PLAYER message. Also converts values to other types if specified.
     * @param message SC_SEARCH_CLUB_PLAYER
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SEARCH_CLUB_PLAYER, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SEARCH_CLUB_PLAYER to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SEARCH_CLUB_PLAYER {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 14118
    }
}

/** Properties of a C2S_CLUB_EDIT_TEAM_CONFIG. */
export interface IC2S_CLUB_EDIT_TEAM_CONFIG {

    /** C2S_CLUB_EDIT_TEAM_CONFIG clubId */
    clubId?: (number|null);

    /** C2S_CLUB_EDIT_TEAM_CONFIG partner */
    partner?: (number|null);

    /** C2S_CLUB_EDIT_TEAM_CONFIG conf */
    conf?: (string|null);
}

/** Represents a C2S_CLUB_EDIT_TEAM_CONFIG. */
export class C2S_CLUB_EDIT_TEAM_CONFIG implements IC2S_CLUB_EDIT_TEAM_CONFIG {

    /**
     * Constructs a new C2S_CLUB_EDIT_TEAM_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_EDIT_TEAM_CONFIG);

    /** C2S_CLUB_EDIT_TEAM_CONFIG clubId. */
    public clubId: number;

    /** C2S_CLUB_EDIT_TEAM_CONFIG partner. */
    public partner: number;

    /** C2S_CLUB_EDIT_TEAM_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new C2S_CLUB_EDIT_TEAM_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_EDIT_TEAM_CONFIG instance
     */
    public static create(properties?: IC2S_CLUB_EDIT_TEAM_CONFIG): C2S_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Encodes the specified C2S_CLUB_EDIT_TEAM_CONFIG message. Does not implicitly {@link C2S_CLUB_EDIT_TEAM_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_TEAM_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_EDIT_TEAM_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_EDIT_TEAM_CONFIG message, length delimited. Does not implicitly {@link C2S_CLUB_EDIT_TEAM_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_TEAM_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_EDIT_TEAM_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_EDIT_TEAM_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_EDIT_TEAM_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Decodes a C2S_CLUB_EDIT_TEAM_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_EDIT_TEAM_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Verifies a C2S_CLUB_EDIT_TEAM_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_EDIT_TEAM_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_EDIT_TEAM_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Creates a plain object from a C2S_CLUB_EDIT_TEAM_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_CLUB_EDIT_TEAM_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_EDIT_TEAM_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_EDIT_TEAM_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_EDIT_TEAM_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14119
    }
}

/** Properties of a S2C_CLUB_EDIT_TEAM_CONFIG. */
export interface IS2C_CLUB_EDIT_TEAM_CONFIG {

    /** S2C_CLUB_EDIT_TEAM_CONFIG result */
    result?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_CONFIG partner */
    partner?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_CONFIG conf */
    conf?: (string|null);
}

/** Represents a S2C_CLUB_EDIT_TEAM_CONFIG. */
export class S2C_CLUB_EDIT_TEAM_CONFIG implements IS2C_CLUB_EDIT_TEAM_CONFIG {

    /**
     * Constructs a new S2C_CLUB_EDIT_TEAM_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_EDIT_TEAM_CONFIG);

    /** S2C_CLUB_EDIT_TEAM_CONFIG result. */
    public result: number;

    /** S2C_CLUB_EDIT_TEAM_CONFIG clubId. */
    public clubId: number;

    /** S2C_CLUB_EDIT_TEAM_CONFIG partner. */
    public partner: number;

    /** S2C_CLUB_EDIT_TEAM_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new S2C_CLUB_EDIT_TEAM_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_EDIT_TEAM_CONFIG instance
     */
    public static create(properties?: IS2C_CLUB_EDIT_TEAM_CONFIG): S2C_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Encodes the specified S2C_CLUB_EDIT_TEAM_CONFIG message. Does not implicitly {@link S2C_CLUB_EDIT_TEAM_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_TEAM_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_EDIT_TEAM_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_EDIT_TEAM_CONFIG message, length delimited. Does not implicitly {@link S2C_CLUB_EDIT_TEAM_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_TEAM_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_EDIT_TEAM_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_EDIT_TEAM_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_EDIT_TEAM_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Decodes a S2C_CLUB_EDIT_TEAM_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_EDIT_TEAM_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Verifies a S2C_CLUB_EDIT_TEAM_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_EDIT_TEAM_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_EDIT_TEAM_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_EDIT_TEAM_CONFIG;

    /**
     * Creates a plain object from a S2C_CLUB_EDIT_TEAM_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_CLUB_EDIT_TEAM_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_EDIT_TEAM_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_EDIT_TEAM_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_EDIT_TEAM_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14120
    }
}

/** Properties of a C2S_RESET_CLUB_TEMPLATE_COMMISSION. */
export interface IC2S_RESET_CLUB_TEMPLATE_COMMISSION {

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION clubId */
    clubId?: (number|null);

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION templateId */
    templateId?: (number|null);

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION teamId */
    teamId?: (number|null);

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION partnerId */
    partnerId?: (number|null);
}

/** Represents a C2S_RESET_CLUB_TEMPLATE_COMMISSION. */
export class C2S_RESET_CLUB_TEMPLATE_COMMISSION implements IC2S_RESET_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new C2S_RESET_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_RESET_CLUB_TEMPLATE_COMMISSION);

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION clubId. */
    public clubId: number;

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION templateId. */
    public templateId: number;

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION teamId. */
    public teamId: number;

    /** C2S_RESET_CLUB_TEMPLATE_COMMISSION partnerId. */
    public partnerId: number;

    /**
     * Creates a new C2S_RESET_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_RESET_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IC2S_RESET_CLUB_TEMPLATE_COMMISSION): C2S_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified C2S_RESET_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link C2S_RESET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_RESET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_RESET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_RESET_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link C2S_RESET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message C2S_RESET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_RESET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_RESET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_RESET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a C2S_RESET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_RESET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a C2S_RESET_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_RESET_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_RESET_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): C2S_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a C2S_RESET_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message C2S_RESET_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_RESET_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_RESET_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_RESET_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14121
    }
}

/** Properties of a S2C_RESET_CLUB_TEMPLATE_COMMISSION. */
export interface IS2C_RESET_CLUB_TEMPLATE_COMMISSION {

    /** S2C_RESET_CLUB_TEMPLATE_COMMISSION result */
    result?: (number|null);
}

/** Represents a S2C_RESET_CLUB_TEMPLATE_COMMISSION. */
export class S2C_RESET_CLUB_TEMPLATE_COMMISSION implements IS2C_RESET_CLUB_TEMPLATE_COMMISSION {

    /**
     * Constructs a new S2C_RESET_CLUB_TEMPLATE_COMMISSION.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_RESET_CLUB_TEMPLATE_COMMISSION);

    /** S2C_RESET_CLUB_TEMPLATE_COMMISSION result. */
    public result: number;

    /**
     * Creates a new S2C_RESET_CLUB_TEMPLATE_COMMISSION instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_RESET_CLUB_TEMPLATE_COMMISSION instance
     */
    public static create(properties?: IS2C_RESET_CLUB_TEMPLATE_COMMISSION): S2C_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Encodes the specified S2C_RESET_CLUB_TEMPLATE_COMMISSION message. Does not implicitly {@link S2C_RESET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_RESET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_RESET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_RESET_CLUB_TEMPLATE_COMMISSION message, length delimited. Does not implicitly {@link S2C_RESET_CLUB_TEMPLATE_COMMISSION.verify|verify} messages.
     * @param message S2C_RESET_CLUB_TEMPLATE_COMMISSION message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_RESET_CLUB_TEMPLATE_COMMISSION, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_RESET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_RESET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Decodes a S2C_RESET_CLUB_TEMPLATE_COMMISSION message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_RESET_CLUB_TEMPLATE_COMMISSION
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Verifies a S2C_RESET_CLUB_TEMPLATE_COMMISSION message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_RESET_CLUB_TEMPLATE_COMMISSION message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_RESET_CLUB_TEMPLATE_COMMISSION
     */
    public static fromObject(object: { [k: string]: any }): S2C_RESET_CLUB_TEMPLATE_COMMISSION;

    /**
     * Creates a plain object from a S2C_RESET_CLUB_TEMPLATE_COMMISSION message. Also converts values to other types if specified.
     * @param message S2C_RESET_CLUB_TEMPLATE_COMMISSION
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_RESET_CLUB_TEMPLATE_COMMISSION, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_RESET_CLUB_TEMPLATE_COMMISSION to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_RESET_CLUB_TEMPLATE_COMMISSION {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14122
    }
}

/** Properties of a CS_CLUB_MEMBER_INFO. */
export interface ICS_CLUB_MEMBER_INFO {

    /** CS_CLUB_MEMBER_INFO guid */
    guid?: (number|null);

    /** CS_CLUB_MEMBER_INFO clubId */
    clubId?: (number|null);
}

/** Represents a CS_CLUB_MEMBER_INFO. */
export class CS_CLUB_MEMBER_INFO implements ICS_CLUB_MEMBER_INFO {

    /**
     * Constructs a new CS_CLUB_MEMBER_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CLUB_MEMBER_INFO);

    /** CS_CLUB_MEMBER_INFO guid. */
    public guid: number;

    /** CS_CLUB_MEMBER_INFO clubId. */
    public clubId: number;

    /**
     * Creates a new CS_CLUB_MEMBER_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CLUB_MEMBER_INFO instance
     */
    public static create(properties?: ICS_CLUB_MEMBER_INFO): CS_CLUB_MEMBER_INFO;

    /**
     * Encodes the specified CS_CLUB_MEMBER_INFO message. Does not implicitly {@link CS_CLUB_MEMBER_INFO.verify|verify} messages.
     * @param message CS_CLUB_MEMBER_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CLUB_MEMBER_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CLUB_MEMBER_INFO message, length delimited. Does not implicitly {@link CS_CLUB_MEMBER_INFO.verify|verify} messages.
     * @param message CS_CLUB_MEMBER_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CLUB_MEMBER_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CLUB_MEMBER_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CLUB_MEMBER_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CLUB_MEMBER_INFO;

    /**
     * Decodes a CS_CLUB_MEMBER_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CLUB_MEMBER_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CLUB_MEMBER_INFO;

    /**
     * Verifies a CS_CLUB_MEMBER_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CLUB_MEMBER_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CLUB_MEMBER_INFO
     */
    public static fromObject(object: { [k: string]: any }): CS_CLUB_MEMBER_INFO;

    /**
     * Creates a plain object from a CS_CLUB_MEMBER_INFO message. Also converts values to other types if specified.
     * @param message CS_CLUB_MEMBER_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CLUB_MEMBER_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CLUB_MEMBER_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CLUB_MEMBER_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14123
    }
}

/** Properties of a SC_CLUB_MEMBER_INFO. */
export interface ISC_CLUB_MEMBER_INFO {

    /** SC_CLUB_MEMBER_INFO result */
    result?: (number|null);

    /** SC_CLUB_MEMBER_INFO info */
    info?: (ICLUB_MEMBER|null);
}

/** Represents a SC_CLUB_MEMBER_INFO. */
export class SC_CLUB_MEMBER_INFO implements ISC_CLUB_MEMBER_INFO {

    /**
     * Constructs a new SC_CLUB_MEMBER_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CLUB_MEMBER_INFO);

    /** SC_CLUB_MEMBER_INFO result. */
    public result: number;

    /** SC_CLUB_MEMBER_INFO info. */
    public info?: (ICLUB_MEMBER|null);

    /**
     * Creates a new SC_CLUB_MEMBER_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CLUB_MEMBER_INFO instance
     */
    public static create(properties?: ISC_CLUB_MEMBER_INFO): SC_CLUB_MEMBER_INFO;

    /**
     * Encodes the specified SC_CLUB_MEMBER_INFO message. Does not implicitly {@link SC_CLUB_MEMBER_INFO.verify|verify} messages.
     * @param message SC_CLUB_MEMBER_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CLUB_MEMBER_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CLUB_MEMBER_INFO message, length delimited. Does not implicitly {@link SC_CLUB_MEMBER_INFO.verify|verify} messages.
     * @param message SC_CLUB_MEMBER_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CLUB_MEMBER_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CLUB_MEMBER_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CLUB_MEMBER_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CLUB_MEMBER_INFO;

    /**
     * Decodes a SC_CLUB_MEMBER_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CLUB_MEMBER_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CLUB_MEMBER_INFO;

    /**
     * Verifies a SC_CLUB_MEMBER_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CLUB_MEMBER_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CLUB_MEMBER_INFO
     */
    public static fromObject(object: { [k: string]: any }): SC_CLUB_MEMBER_INFO;

    /**
     * Creates a plain object from a SC_CLUB_MEMBER_INFO message. Also converts values to other types if specified.
     * @param message SC_CLUB_MEMBER_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CLUB_MEMBER_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CLUB_MEMBER_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CLUB_MEMBER_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14124
    }
}

/** Properties of a SYNC_SEAT_INFO. */
export interface ISYNC_SEAT_INFO {

    /** SYNC_SEAT_INFO chairId */
    chairId?: (number|null);

    /** SYNC_SEAT_INFO playerInfo */
    playerInfo?: (IPLAYER_BASE_INFO|null);

    /** SYNC_SEAT_INFO ready */
    ready?: (boolean|null);

    /** SYNC_SEAT_INFO online */
    online?: (boolean|null);

    /** SYNC_SEAT_INFO isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SYNC_SEAT_INFO. */
export class SYNC_SEAT_INFO implements ISYNC_SEAT_INFO {

    /**
     * Constructs a new SYNC_SEAT_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISYNC_SEAT_INFO);

    /** SYNC_SEAT_INFO chairId. */
    public chairId: number;

    /** SYNC_SEAT_INFO playerInfo. */
    public playerInfo?: (IPLAYER_BASE_INFO|null);

    /** SYNC_SEAT_INFO ready. */
    public ready: boolean;

    /** SYNC_SEAT_INFO online. */
    public online: boolean;

    /** SYNC_SEAT_INFO isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SYNC_SEAT_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SYNC_SEAT_INFO instance
     */
    public static create(properties?: ISYNC_SEAT_INFO): SYNC_SEAT_INFO;

    /**
     * Encodes the specified SYNC_SEAT_INFO message. Does not implicitly {@link SYNC_SEAT_INFO.verify|verify} messages.
     * @param message SYNC_SEAT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISYNC_SEAT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SYNC_SEAT_INFO message, length delimited. Does not implicitly {@link SYNC_SEAT_INFO.verify|verify} messages.
     * @param message SYNC_SEAT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISYNC_SEAT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SYNC_SEAT_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SYNC_SEAT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SYNC_SEAT_INFO;

    /**
     * Decodes a SYNC_SEAT_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SYNC_SEAT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SYNC_SEAT_INFO;

    /**
     * Verifies a SYNC_SEAT_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SYNC_SEAT_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SYNC_SEAT_INFO
     */
    public static fromObject(object: { [k: string]: any }): SYNC_SEAT_INFO;

    /**
     * Creates a plain object from a SYNC_SEAT_INFO message. Also converts values to other types if specified.
     * @param message SYNC_SEAT_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SYNC_SEAT_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SYNC_SEAT_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TABLE_SYNC_INFO. */
export interface ITABLE_SYNC_INFO {

    /** TABLE_SYNC_INFO opcode */
    opcode?: (number|null);

    /** TABLE_SYNC_INFO tableId */
    tableId?: (number|null);

    /** TABLE_SYNC_INFO trigger */
    trigger?: (ISYNC_SEAT_INFO|null);

    /** TABLE_SYNC_INFO rule */
    rule?: (string|null);

    /** TABLE_SYNC_INFO gameType */
    gameType?: (number|null);

    /** TABLE_SYNC_INFO templateId */
    templateId?: (number|null);

    /** TABLE_SYNC_INFO status */
    status?: (number|null);

    /** TABLE_SYNC_INFO curRound */
    curRound?: (number|null);
}

/** Represents a TABLE_SYNC_INFO. */
export class TABLE_SYNC_INFO implements ITABLE_SYNC_INFO {

    /**
     * Constructs a new TABLE_SYNC_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITABLE_SYNC_INFO);

    /** TABLE_SYNC_INFO opcode. */
    public opcode: number;

    /** TABLE_SYNC_INFO tableId. */
    public tableId: number;

    /** TABLE_SYNC_INFO trigger. */
    public trigger?: (ISYNC_SEAT_INFO|null);

    /** TABLE_SYNC_INFO rule. */
    public rule: string;

    /** TABLE_SYNC_INFO gameType. */
    public gameType: number;

    /** TABLE_SYNC_INFO templateId. */
    public templateId: number;

    /** TABLE_SYNC_INFO status. */
    public status: number;

    /** TABLE_SYNC_INFO curRound. */
    public curRound: number;

    /**
     * Creates a new TABLE_SYNC_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TABLE_SYNC_INFO instance
     */
    public static create(properties?: ITABLE_SYNC_INFO): TABLE_SYNC_INFO;

    /**
     * Encodes the specified TABLE_SYNC_INFO message. Does not implicitly {@link TABLE_SYNC_INFO.verify|verify} messages.
     * @param message TABLE_SYNC_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITABLE_SYNC_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TABLE_SYNC_INFO message, length delimited. Does not implicitly {@link TABLE_SYNC_INFO.verify|verify} messages.
     * @param message TABLE_SYNC_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITABLE_SYNC_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TABLE_SYNC_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TABLE_SYNC_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TABLE_SYNC_INFO;

    /**
     * Decodes a TABLE_SYNC_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TABLE_SYNC_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TABLE_SYNC_INFO;

    /**
     * Verifies a TABLE_SYNC_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TABLE_SYNC_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TABLE_SYNC_INFO
     */
    public static fromObject(object: { [k: string]: any }): TABLE_SYNC_INFO;

    /**
     * Creates a plain object from a TABLE_SYNC_INFO message. Also converts values to other types if specified.
     * @param message TABLE_SYNC_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TABLE_SYNC_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TABLE_SYNC_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CLUB_SYNC_TABLES. */
export interface ISC_CLUB_SYNC_TABLES {

    /** SC_CLUB_SYNC_TABLES clubId */
    clubId?: (number|null);

    /** SC_CLUB_SYNC_TABLES syncs */
    syncs?: (ITABLE_SYNC_INFO[]|null);
}

/** Represents a SC_CLUB_SYNC_TABLES. */
export class SC_CLUB_SYNC_TABLES implements ISC_CLUB_SYNC_TABLES {

    /**
     * Constructs a new SC_CLUB_SYNC_TABLES.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CLUB_SYNC_TABLES);

    /** SC_CLUB_SYNC_TABLES clubId. */
    public clubId: number;

    /** SC_CLUB_SYNC_TABLES syncs. */
    public syncs: ITABLE_SYNC_INFO[];

    /**
     * Creates a new SC_CLUB_SYNC_TABLES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CLUB_SYNC_TABLES instance
     */
    public static create(properties?: ISC_CLUB_SYNC_TABLES): SC_CLUB_SYNC_TABLES;

    /**
     * Encodes the specified SC_CLUB_SYNC_TABLES message. Does not implicitly {@link SC_CLUB_SYNC_TABLES.verify|verify} messages.
     * @param message SC_CLUB_SYNC_TABLES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CLUB_SYNC_TABLES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CLUB_SYNC_TABLES message, length delimited. Does not implicitly {@link SC_CLUB_SYNC_TABLES.verify|verify} messages.
     * @param message SC_CLUB_SYNC_TABLES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CLUB_SYNC_TABLES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CLUB_SYNC_TABLES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CLUB_SYNC_TABLES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CLUB_SYNC_TABLES;

    /**
     * Decodes a SC_CLUB_SYNC_TABLES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CLUB_SYNC_TABLES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CLUB_SYNC_TABLES;

    /**
     * Verifies a SC_CLUB_SYNC_TABLES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CLUB_SYNC_TABLES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CLUB_SYNC_TABLES
     */
    public static fromObject(object: { [k: string]: any }): SC_CLUB_SYNC_TABLES;

    /**
     * Creates a plain object from a SC_CLUB_SYNC_TABLES message. Also converts values to other types if specified.
     * @param message SC_CLUB_SYNC_TABLES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CLUB_SYNC_TABLES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CLUB_SYNC_TABLES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CLUB_SYNC_TABLES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14125
    }
}

/** Properties of a CS_CLUB_IMPORT_PLAYER_FROM_TEAM. */
export interface ICS_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM teamId */
    teamId?: (number|null);

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM fromClub */
    fromClub?: (number|null);

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM toClub */
    toClub?: (number|null);
}

/** Represents a CS_CLUB_IMPORT_PLAYER_FROM_TEAM. */
export class CS_CLUB_IMPORT_PLAYER_FROM_TEAM implements ICS_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /**
     * Constructs a new CS_CLUB_IMPORT_PLAYER_FROM_TEAM.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CLUB_IMPORT_PLAYER_FROM_TEAM);

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM teamId. */
    public teamId: number;

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM fromClub. */
    public fromClub: number;

    /** CS_CLUB_IMPORT_PLAYER_FROM_TEAM toClub. */
    public toClub: number;

    /**
     * Creates a new CS_CLUB_IMPORT_PLAYER_FROM_TEAM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CLUB_IMPORT_PLAYER_FROM_TEAM instance
     */
    public static create(properties?: ICS_CLUB_IMPORT_PLAYER_FROM_TEAM): CS_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Encodes the specified CS_CLUB_IMPORT_PLAYER_FROM_TEAM message. Does not implicitly {@link CS_CLUB_IMPORT_PLAYER_FROM_TEAM.verify|verify} messages.
     * @param message CS_CLUB_IMPORT_PLAYER_FROM_TEAM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CLUB_IMPORT_PLAYER_FROM_TEAM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CLUB_IMPORT_PLAYER_FROM_TEAM message, length delimited. Does not implicitly {@link CS_CLUB_IMPORT_PLAYER_FROM_TEAM.verify|verify} messages.
     * @param message CS_CLUB_IMPORT_PLAYER_FROM_TEAM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CLUB_IMPORT_PLAYER_FROM_TEAM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CLUB_IMPORT_PLAYER_FROM_TEAM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Decodes a CS_CLUB_IMPORT_PLAYER_FROM_TEAM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Verifies a CS_CLUB_IMPORT_PLAYER_FROM_TEAM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CLUB_IMPORT_PLAYER_FROM_TEAM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CLUB_IMPORT_PLAYER_FROM_TEAM
     */
    public static fromObject(object: { [k: string]: any }): CS_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Creates a plain object from a CS_CLUB_IMPORT_PLAYER_FROM_TEAM message. Also converts values to other types if specified.
     * @param message CS_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CLUB_IMPORT_PLAYER_FROM_TEAM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CLUB_IMPORT_PLAYER_FROM_TEAM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14126
    }
}

/** Properties of a SC_CLUB_IMPORT_PLAYER_FROM_TEAM. */
export interface ISC_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /** SC_CLUB_IMPORT_PLAYER_FROM_TEAM result */
    result?: (number|null);

    /** SC_CLUB_IMPORT_PLAYER_FROM_TEAM errorInfo */
    errorInfo?: (string|null);
}

/** Represents a SC_CLUB_IMPORT_PLAYER_FROM_TEAM. */
export class SC_CLUB_IMPORT_PLAYER_FROM_TEAM implements ISC_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /**
     * Constructs a new SC_CLUB_IMPORT_PLAYER_FROM_TEAM.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CLUB_IMPORT_PLAYER_FROM_TEAM);

    /** SC_CLUB_IMPORT_PLAYER_FROM_TEAM result. */
    public result: number;

    /** SC_CLUB_IMPORT_PLAYER_FROM_TEAM errorInfo. */
    public errorInfo: string;

    /**
     * Creates a new SC_CLUB_IMPORT_PLAYER_FROM_TEAM instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CLUB_IMPORT_PLAYER_FROM_TEAM instance
     */
    public static create(properties?: ISC_CLUB_IMPORT_PLAYER_FROM_TEAM): SC_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Encodes the specified SC_CLUB_IMPORT_PLAYER_FROM_TEAM message. Does not implicitly {@link SC_CLUB_IMPORT_PLAYER_FROM_TEAM.verify|verify} messages.
     * @param message SC_CLUB_IMPORT_PLAYER_FROM_TEAM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CLUB_IMPORT_PLAYER_FROM_TEAM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CLUB_IMPORT_PLAYER_FROM_TEAM message, length delimited. Does not implicitly {@link SC_CLUB_IMPORT_PLAYER_FROM_TEAM.verify|verify} messages.
     * @param message SC_CLUB_IMPORT_PLAYER_FROM_TEAM message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CLUB_IMPORT_PLAYER_FROM_TEAM, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CLUB_IMPORT_PLAYER_FROM_TEAM message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Decodes a SC_CLUB_IMPORT_PLAYER_FROM_TEAM message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Verifies a SC_CLUB_IMPORT_PLAYER_FROM_TEAM message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CLUB_IMPORT_PLAYER_FROM_TEAM message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CLUB_IMPORT_PLAYER_FROM_TEAM
     */
    public static fromObject(object: { [k: string]: any }): SC_CLUB_IMPORT_PLAYER_FROM_TEAM;

    /**
     * Creates a plain object from a SC_CLUB_IMPORT_PLAYER_FROM_TEAM message. Also converts values to other types if specified.
     * @param message SC_CLUB_IMPORT_PLAYER_FROM_TEAM
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CLUB_IMPORT_PLAYER_FROM_TEAM, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CLUB_IMPORT_PLAYER_FROM_TEAM to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CLUB_IMPORT_PLAYER_FROM_TEAM {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14127
    }
}

/** Properties of a CS_TEAM_STATUS_INFO. */
export interface ICS_TEAM_STATUS_INFO {

    /** CS_TEAM_STATUS_INFO clubId */
    clubId?: (number|null);
}

/** Represents a CS_TEAM_STATUS_INFO. */
export class CS_TEAM_STATUS_INFO implements ICS_TEAM_STATUS_INFO {

    /**
     * Constructs a new CS_TEAM_STATUS_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_TEAM_STATUS_INFO);

    /** CS_TEAM_STATUS_INFO clubId. */
    public clubId: number;

    /**
     * Creates a new CS_TEAM_STATUS_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_TEAM_STATUS_INFO instance
     */
    public static create(properties?: ICS_TEAM_STATUS_INFO): CS_TEAM_STATUS_INFO;

    /**
     * Encodes the specified CS_TEAM_STATUS_INFO message. Does not implicitly {@link CS_TEAM_STATUS_INFO.verify|verify} messages.
     * @param message CS_TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_TEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_TEAM_STATUS_INFO message, length delimited. Does not implicitly {@link CS_TEAM_STATUS_INFO.verify|verify} messages.
     * @param message CS_TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_TEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_TEAM_STATUS_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_TEAM_STATUS_INFO;

    /**
     * Decodes a CS_TEAM_STATUS_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_TEAM_STATUS_INFO;

    /**
     * Verifies a CS_TEAM_STATUS_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_TEAM_STATUS_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_TEAM_STATUS_INFO
     */
    public static fromObject(object: { [k: string]: any }): CS_TEAM_STATUS_INFO;

    /**
     * Creates a plain object from a CS_TEAM_STATUS_INFO message. Also converts values to other types if specified.
     * @param message CS_TEAM_STATUS_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_TEAM_STATUS_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_TEAM_STATUS_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_TEAM_STATUS_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14128
    }
}

/** Properties of a SC_TEAM_STATUS_INFO. */
export interface ISC_TEAM_STATUS_INFO {

    /** SC_TEAM_STATUS_INFO result */
    result?: (number|null);

    /** SC_TEAM_STATUS_INFO statusInfo */
    statusInfo?: (ITEAM_STATUS_INFO|null);
}

/** Represents a SC_TEAM_STATUS_INFO. */
export class SC_TEAM_STATUS_INFO implements ISC_TEAM_STATUS_INFO {

    /**
     * Constructs a new SC_TEAM_STATUS_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_TEAM_STATUS_INFO);

    /** SC_TEAM_STATUS_INFO result. */
    public result: number;

    /** SC_TEAM_STATUS_INFO statusInfo. */
    public statusInfo?: (ITEAM_STATUS_INFO|null);

    /**
     * Creates a new SC_TEAM_STATUS_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_TEAM_STATUS_INFO instance
     */
    public static create(properties?: ISC_TEAM_STATUS_INFO): SC_TEAM_STATUS_INFO;

    /**
     * Encodes the specified SC_TEAM_STATUS_INFO message. Does not implicitly {@link SC_TEAM_STATUS_INFO.verify|verify} messages.
     * @param message SC_TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_TEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_TEAM_STATUS_INFO message, length delimited. Does not implicitly {@link SC_TEAM_STATUS_INFO.verify|verify} messages.
     * @param message SC_TEAM_STATUS_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_TEAM_STATUS_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_TEAM_STATUS_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_TEAM_STATUS_INFO;

    /**
     * Decodes a SC_TEAM_STATUS_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_TEAM_STATUS_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_TEAM_STATUS_INFO;

    /**
     * Verifies a SC_TEAM_STATUS_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_TEAM_STATUS_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_TEAM_STATUS_INFO
     */
    public static fromObject(object: { [k: string]: any }): SC_TEAM_STATUS_INFO;

    /**
     * Creates a plain object from a SC_TEAM_STATUS_INFO message. Also converts values to other types if specified.
     * @param message SC_TEAM_STATUS_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_TEAM_STATUS_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_TEAM_STATUS_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_TEAM_STATUS_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14129
    }
}

/** Properties of a CS_CLUB_TEAM_TEMPLATE_INFO. */
export interface ICS_CLUB_TEAM_TEMPLATE_INFO {

    /** CS_CLUB_TEAM_TEMPLATE_INFO clubId */
    clubId?: (number|null);
}

/** Represents a CS_CLUB_TEAM_TEMPLATE_INFO. */
export class CS_CLUB_TEAM_TEMPLATE_INFO implements ICS_CLUB_TEAM_TEMPLATE_INFO {

    /**
     * Constructs a new CS_CLUB_TEAM_TEMPLATE_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CLUB_TEAM_TEMPLATE_INFO);

    /** CS_CLUB_TEAM_TEMPLATE_INFO clubId. */
    public clubId: number;

    /**
     * Creates a new CS_CLUB_TEAM_TEMPLATE_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CLUB_TEAM_TEMPLATE_INFO instance
     */
    public static create(properties?: ICS_CLUB_TEAM_TEMPLATE_INFO): CS_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Encodes the specified CS_CLUB_TEAM_TEMPLATE_INFO message. Does not implicitly {@link CS_CLUB_TEAM_TEMPLATE_INFO.verify|verify} messages.
     * @param message CS_CLUB_TEAM_TEMPLATE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CLUB_TEAM_TEMPLATE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CLUB_TEAM_TEMPLATE_INFO message, length delimited. Does not implicitly {@link CS_CLUB_TEAM_TEMPLATE_INFO.verify|verify} messages.
     * @param message CS_CLUB_TEAM_TEMPLATE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CLUB_TEAM_TEMPLATE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CLUB_TEAM_TEMPLATE_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CLUB_TEAM_TEMPLATE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Decodes a CS_CLUB_TEAM_TEMPLATE_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CLUB_TEAM_TEMPLATE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Verifies a CS_CLUB_TEAM_TEMPLATE_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CLUB_TEAM_TEMPLATE_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CLUB_TEAM_TEMPLATE_INFO
     */
    public static fromObject(object: { [k: string]: any }): CS_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Creates a plain object from a CS_CLUB_TEAM_TEMPLATE_INFO message. Also converts values to other types if specified.
     * @param message CS_CLUB_TEAM_TEMPLATE_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CLUB_TEAM_TEMPLATE_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CLUB_TEAM_TEMPLATE_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CLUB_TEAM_TEMPLATE_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14130
    }
}

/** Properties of a SC_CLUB_TEAM_TEMPLATE_INFO. */
export interface ISC_CLUB_TEAM_TEMPLATE_INFO {

    /** SC_CLUB_TEAM_TEMPLATE_INFO result */
    result?: (number|null);

    /** SC_CLUB_TEAM_TEMPLATE_INFO tableTemplates */
    tableTemplates?: (ICLUB_TABLE_TEMPLATE[]|null);

    /** SC_CLUB_TEAM_TEMPLATE_INFO teamTemplateIds */
    teamTemplateIds?: (number[]|null);
}

/** Represents a SC_CLUB_TEAM_TEMPLATE_INFO. */
export class SC_CLUB_TEAM_TEMPLATE_INFO implements ISC_CLUB_TEAM_TEMPLATE_INFO {

    /**
     * Constructs a new SC_CLUB_TEAM_TEMPLATE_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CLUB_TEAM_TEMPLATE_INFO);

    /** SC_CLUB_TEAM_TEMPLATE_INFO result. */
    public result: number;

    /** SC_CLUB_TEAM_TEMPLATE_INFO tableTemplates. */
    public tableTemplates: ICLUB_TABLE_TEMPLATE[];

    /** SC_CLUB_TEAM_TEMPLATE_INFO teamTemplateIds. */
    public teamTemplateIds: number[];

    /**
     * Creates a new SC_CLUB_TEAM_TEMPLATE_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CLUB_TEAM_TEMPLATE_INFO instance
     */
    public static create(properties?: ISC_CLUB_TEAM_TEMPLATE_INFO): SC_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Encodes the specified SC_CLUB_TEAM_TEMPLATE_INFO message. Does not implicitly {@link SC_CLUB_TEAM_TEMPLATE_INFO.verify|verify} messages.
     * @param message SC_CLUB_TEAM_TEMPLATE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CLUB_TEAM_TEMPLATE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CLUB_TEAM_TEMPLATE_INFO message, length delimited. Does not implicitly {@link SC_CLUB_TEAM_TEMPLATE_INFO.verify|verify} messages.
     * @param message SC_CLUB_TEAM_TEMPLATE_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CLUB_TEAM_TEMPLATE_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CLUB_TEAM_TEMPLATE_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CLUB_TEAM_TEMPLATE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Decodes a SC_CLUB_TEAM_TEMPLATE_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CLUB_TEAM_TEMPLATE_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Verifies a SC_CLUB_TEAM_TEMPLATE_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CLUB_TEAM_TEMPLATE_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CLUB_TEAM_TEMPLATE_INFO
     */
    public static fromObject(object: { [k: string]: any }): SC_CLUB_TEAM_TEMPLATE_INFO;

    /**
     * Creates a plain object from a SC_CLUB_TEAM_TEMPLATE_INFO message. Also converts values to other types if specified.
     * @param message SC_CLUB_TEAM_TEMPLATE_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CLUB_TEAM_TEMPLATE_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CLUB_TEAM_TEMPLATE_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CLUB_TEAM_TEMPLATE_INFO {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14131
    }
}

/** Properties of a CS_CLUB_CHANGE_TEAM_TEMPLATE. */
export interface ICS_CLUB_CHANGE_TEAM_TEMPLATE {

    /** CS_CLUB_CHANGE_TEAM_TEMPLATE clubId */
    clubId?: (number|null);

    /** CS_CLUB_CHANGE_TEAM_TEMPLATE teamTemplateIds */
    teamTemplateIds?: (number[]|null);
}

/** Represents a CS_CLUB_CHANGE_TEAM_TEMPLATE. */
export class CS_CLUB_CHANGE_TEAM_TEMPLATE implements ICS_CLUB_CHANGE_TEAM_TEMPLATE {

    /**
     * Constructs a new CS_CLUB_CHANGE_TEAM_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CLUB_CHANGE_TEAM_TEMPLATE);

    /** CS_CLUB_CHANGE_TEAM_TEMPLATE clubId. */
    public clubId: number;

    /** CS_CLUB_CHANGE_TEAM_TEMPLATE teamTemplateIds. */
    public teamTemplateIds: number[];

    /**
     * Creates a new CS_CLUB_CHANGE_TEAM_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CLUB_CHANGE_TEAM_TEMPLATE instance
     */
    public static create(properties?: ICS_CLUB_CHANGE_TEAM_TEMPLATE): CS_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Encodes the specified CS_CLUB_CHANGE_TEAM_TEMPLATE message. Does not implicitly {@link CS_CLUB_CHANGE_TEAM_TEMPLATE.verify|verify} messages.
     * @param message CS_CLUB_CHANGE_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CLUB_CHANGE_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CLUB_CHANGE_TEAM_TEMPLATE message, length delimited. Does not implicitly {@link CS_CLUB_CHANGE_TEAM_TEMPLATE.verify|verify} messages.
     * @param message CS_CLUB_CHANGE_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CLUB_CHANGE_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CLUB_CHANGE_TEAM_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CLUB_CHANGE_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Decodes a CS_CLUB_CHANGE_TEAM_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CLUB_CHANGE_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Verifies a CS_CLUB_CHANGE_TEAM_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CLUB_CHANGE_TEAM_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CLUB_CHANGE_TEAM_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): CS_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Creates a plain object from a CS_CLUB_CHANGE_TEAM_TEMPLATE message. Also converts values to other types if specified.
     * @param message CS_CLUB_CHANGE_TEAM_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CLUB_CHANGE_TEAM_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CLUB_CHANGE_TEAM_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CLUB_CHANGE_TEAM_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14132
    }
}

/** Properties of a SC_CLUB_CHANGE_TEAM_TEMPLATE. */
export interface ISC_CLUB_CHANGE_TEAM_TEMPLATE {

    /** SC_CLUB_CHANGE_TEAM_TEMPLATE result */
    result?: (number|null);

    /** SC_CLUB_CHANGE_TEAM_TEMPLATE teamTemplateIds */
    teamTemplateIds?: (number[]|null);
}

/** Represents a SC_CLUB_CHANGE_TEAM_TEMPLATE. */
export class SC_CLUB_CHANGE_TEAM_TEMPLATE implements ISC_CLUB_CHANGE_TEAM_TEMPLATE {

    /**
     * Constructs a new SC_CLUB_CHANGE_TEAM_TEMPLATE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CLUB_CHANGE_TEAM_TEMPLATE);

    /** SC_CLUB_CHANGE_TEAM_TEMPLATE result. */
    public result: number;

    /** SC_CLUB_CHANGE_TEAM_TEMPLATE teamTemplateIds. */
    public teamTemplateIds: number[];

    /**
     * Creates a new SC_CLUB_CHANGE_TEAM_TEMPLATE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CLUB_CHANGE_TEAM_TEMPLATE instance
     */
    public static create(properties?: ISC_CLUB_CHANGE_TEAM_TEMPLATE): SC_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Encodes the specified SC_CLUB_CHANGE_TEAM_TEMPLATE message. Does not implicitly {@link SC_CLUB_CHANGE_TEAM_TEMPLATE.verify|verify} messages.
     * @param message SC_CLUB_CHANGE_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CLUB_CHANGE_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CLUB_CHANGE_TEAM_TEMPLATE message, length delimited. Does not implicitly {@link SC_CLUB_CHANGE_TEAM_TEMPLATE.verify|verify} messages.
     * @param message SC_CLUB_CHANGE_TEAM_TEMPLATE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CLUB_CHANGE_TEAM_TEMPLATE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CLUB_CHANGE_TEAM_TEMPLATE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CLUB_CHANGE_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Decodes a SC_CLUB_CHANGE_TEAM_TEMPLATE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CLUB_CHANGE_TEAM_TEMPLATE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Verifies a SC_CLUB_CHANGE_TEAM_TEMPLATE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CLUB_CHANGE_TEAM_TEMPLATE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CLUB_CHANGE_TEAM_TEMPLATE
     */
    public static fromObject(object: { [k: string]: any }): SC_CLUB_CHANGE_TEAM_TEMPLATE;

    /**
     * Creates a plain object from a SC_CLUB_CHANGE_TEAM_TEMPLATE message. Also converts values to other types if specified.
     * @param message SC_CLUB_CHANGE_TEAM_TEMPLATE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CLUB_CHANGE_TEAM_TEMPLATE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CLUB_CHANGE_TEAM_TEMPLATE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CLUB_CHANGE_TEAM_TEMPLATE {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14133
    }
}

/** Properties of a TEAM_PARTNER_CONFIG_INFO. */
export interface ITEAM_PARTNER_CONFIG_INFO {

    /** TEAM_PARTNER_CONFIG_INFO partner */
    partner?: (number|null);

    /** TEAM_PARTNER_CONFIG_INFO conf */
    conf?: (string|null);

    /** TEAM_PARTNER_CONFIG_INFO baseInfo */
    baseInfo?: (IPLAYER_BASE_INFO|null);
}

/** Represents a TEAM_PARTNER_CONFIG_INFO. */
export class TEAM_PARTNER_CONFIG_INFO implements ITEAM_PARTNER_CONFIG_INFO {

    /**
     * Constructs a new TEAM_PARTNER_CONFIG_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITEAM_PARTNER_CONFIG_INFO);

    /** TEAM_PARTNER_CONFIG_INFO partner. */
    public partner: number;

    /** TEAM_PARTNER_CONFIG_INFO conf. */
    public conf: string;

    /** TEAM_PARTNER_CONFIG_INFO baseInfo. */
    public baseInfo?: (IPLAYER_BASE_INFO|null);

    /**
     * Creates a new TEAM_PARTNER_CONFIG_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TEAM_PARTNER_CONFIG_INFO instance
     */
    public static create(properties?: ITEAM_PARTNER_CONFIG_INFO): TEAM_PARTNER_CONFIG_INFO;

    /**
     * Encodes the specified TEAM_PARTNER_CONFIG_INFO message. Does not implicitly {@link TEAM_PARTNER_CONFIG_INFO.verify|verify} messages.
     * @param message TEAM_PARTNER_CONFIG_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITEAM_PARTNER_CONFIG_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TEAM_PARTNER_CONFIG_INFO message, length delimited. Does not implicitly {@link TEAM_PARTNER_CONFIG_INFO.verify|verify} messages.
     * @param message TEAM_PARTNER_CONFIG_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITEAM_PARTNER_CONFIG_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TEAM_PARTNER_CONFIG_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TEAM_PARTNER_CONFIG_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TEAM_PARTNER_CONFIG_INFO;

    /**
     * Decodes a TEAM_PARTNER_CONFIG_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TEAM_PARTNER_CONFIG_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TEAM_PARTNER_CONFIG_INFO;

    /**
     * Verifies a TEAM_PARTNER_CONFIG_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TEAM_PARTNER_CONFIG_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TEAM_PARTNER_CONFIG_INFO
     */
    public static fromObject(object: { [k: string]: any }): TEAM_PARTNER_CONFIG_INFO;

    /**
     * Creates a plain object from a TEAM_PARTNER_CONFIG_INFO message. Also converts values to other types if specified.
     * @param message TEAM_PARTNER_CONFIG_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TEAM_PARTNER_CONFIG_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TEAM_PARTNER_CONFIG_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a C2S_CLUB_GET_TEAM_PARTNER_CONFIG. */
export interface IC2S_CLUB_GET_TEAM_PARTNER_CONFIG {

    /** C2S_CLUB_GET_TEAM_PARTNER_CONFIG clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_GET_TEAM_PARTNER_CONFIG. */
export class C2S_CLUB_GET_TEAM_PARTNER_CONFIG implements IC2S_CLUB_GET_TEAM_PARTNER_CONFIG {

    /**
     * Constructs a new C2S_CLUB_GET_TEAM_PARTNER_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_GET_TEAM_PARTNER_CONFIG);

    /** C2S_CLUB_GET_TEAM_PARTNER_CONFIG clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_GET_TEAM_PARTNER_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_GET_TEAM_PARTNER_CONFIG instance
     */
    public static create(properties?: IC2S_CLUB_GET_TEAM_PARTNER_CONFIG): C2S_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Encodes the specified C2S_CLUB_GET_TEAM_PARTNER_CONFIG message. Does not implicitly {@link C2S_CLUB_GET_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_GET_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_GET_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_GET_TEAM_PARTNER_CONFIG message, length delimited. Does not implicitly {@link C2S_CLUB_GET_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_GET_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_GET_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_GET_TEAM_PARTNER_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_GET_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Decodes a C2S_CLUB_GET_TEAM_PARTNER_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_GET_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Verifies a C2S_CLUB_GET_TEAM_PARTNER_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_GET_TEAM_PARTNER_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_GET_TEAM_PARTNER_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Creates a plain object from a C2S_CLUB_GET_TEAM_PARTNER_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_CLUB_GET_TEAM_PARTNER_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_GET_TEAM_PARTNER_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_GET_TEAM_PARTNER_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_GET_TEAM_PARTNER_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14134
    }
}

/** Properties of a S2C_CLUB_GET_TEAM_PARTNER_CONFIG. */
export interface IS2C_CLUB_GET_TEAM_PARTNER_CONFIG {

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG result */
    result?: (number|null);

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG confs */
    confs?: (ITEAM_PARTNER_CONFIG_INFO[]|null);

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG partnerConf */
    partnerConf?: (string|null);
}

/** Represents a S2C_CLUB_GET_TEAM_PARTNER_CONFIG. */
export class S2C_CLUB_GET_TEAM_PARTNER_CONFIG implements IS2C_CLUB_GET_TEAM_PARTNER_CONFIG {

    /**
     * Constructs a new S2C_CLUB_GET_TEAM_PARTNER_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_GET_TEAM_PARTNER_CONFIG);

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG result. */
    public result: number;

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG clubId. */
    public clubId: number;

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG confs. */
    public confs: ITEAM_PARTNER_CONFIG_INFO[];

    /** S2C_CLUB_GET_TEAM_PARTNER_CONFIG partnerConf. */
    public partnerConf: string;

    /**
     * Creates a new S2C_CLUB_GET_TEAM_PARTNER_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_GET_TEAM_PARTNER_CONFIG instance
     */
    public static create(properties?: IS2C_CLUB_GET_TEAM_PARTNER_CONFIG): S2C_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Encodes the specified S2C_CLUB_GET_TEAM_PARTNER_CONFIG message. Does not implicitly {@link S2C_CLUB_GET_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_GET_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_GET_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_GET_TEAM_PARTNER_CONFIG message, length delimited. Does not implicitly {@link S2C_CLUB_GET_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_GET_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_GET_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_GET_TEAM_PARTNER_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_GET_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Decodes a S2C_CLUB_GET_TEAM_PARTNER_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_GET_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Verifies a S2C_CLUB_GET_TEAM_PARTNER_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_GET_TEAM_PARTNER_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_GET_TEAM_PARTNER_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_GET_TEAM_PARTNER_CONFIG;

    /**
     * Creates a plain object from a S2C_CLUB_GET_TEAM_PARTNER_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_CLUB_GET_TEAM_PARTNER_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_GET_TEAM_PARTNER_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_GET_TEAM_PARTNER_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_GET_TEAM_PARTNER_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14135
    }
}

/** Properties of a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG. */
export interface IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG clubId */
    clubId?: (number|null);

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG partner */
    partner?: (number|null);

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG conf */
    conf?: (string|null);
}

/** Represents a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG. */
export class C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG implements IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /**
     * Constructs a new C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG);

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG clubId. */
    public clubId: number;

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG partner. */
    public partner: number;

    /** C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG instance
     */
    public static create(properties?: IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG): C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Encodes the specified C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message. Does not implicitly {@link C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message, length delimited. Does not implicitly {@link C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_EDIT_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Decodes a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Verifies a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Creates a plain object from a C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG message. Also converts values to other types if specified.
     * @param message C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14136
    }
}

/** Properties of a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG. */
export interface IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG result */
    result?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG clubId */
    clubId?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG partner */
    partner?: (number|null);

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG conf */
    conf?: (string|null);
}

/** Represents a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG. */
export class S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG implements IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /**
     * Constructs a new S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG);

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG result. */
    public result: number;

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG clubId. */
    public clubId: number;

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG partner. */
    public partner: number;

    /** S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG conf. */
    public conf: string;

    /**
     * Creates a new S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG instance
     */
    public static create(properties?: IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG): S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Encodes the specified S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message. Does not implicitly {@link S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message, length delimited. Does not implicitly {@link S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG.verify|verify} messages.
     * @param message S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_EDIT_TEAM_PARTNER_CONFIG, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Decodes a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Verifies a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG;

    /**
     * Creates a plain object from a S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG message. Also converts values to other types if specified.
     * @param message S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_EDIT_TEAM_PARTNER_CONFIG {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14137
    }
}

/** Properties of a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS. */
export interface IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /** C2S_CLUB_BLOCK_TEAM_PULL_GROUPS clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS. */
export class C2S_CLUB_BLOCK_TEAM_PULL_GROUPS implements IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /**
     * Constructs a new C2S_CLUB_BLOCK_TEAM_PULL_GROUPS.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS);

    /** C2S_CLUB_BLOCK_TEAM_PULL_GROUPS clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_TEAM_PULL_GROUPS instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_TEAM_PULL_GROUPS instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS): C2S_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_PULL_GROUPS.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_PULL_GROUPS.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_TEAM_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Verifies a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_TEAM_PULL_GROUPS
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_TEAM_PULL_GROUPS message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_TEAM_PULL_GROUPS, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_TEAM_PULL_GROUPS to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14138
    }
}

/** Properties of a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS. */
export interface IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /** S2C_CLUB_BLOCK_TEAM_PULL_GROUPS result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_PULL_GROUPS groups */
    groups?: (IBLOCK_GROUP[]|null);
}

/** Represents a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS. */
export class S2C_CLUB_BLOCK_TEAM_PULL_GROUPS implements IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /**
     * Constructs a new S2C_CLUB_BLOCK_TEAM_PULL_GROUPS.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS);

    /** S2C_CLUB_BLOCK_TEAM_PULL_GROUPS result. */
    public result: number;

    /** S2C_CLUB_BLOCK_TEAM_PULL_GROUPS groups. */
    public groups: IBLOCK_GROUP[];

    /**
     * Creates a new S2C_CLUB_BLOCK_TEAM_PULL_GROUPS instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_TEAM_PULL_GROUPS instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS): S2C_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_PULL_GROUPS.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_PULL_GROUPS.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_TEAM_PULL_GROUPS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Verifies a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_TEAM_PULL_GROUPS
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_TEAM_PULL_GROUPS;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_TEAM_PULL_GROUPS message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_TEAM_PULL_GROUPS
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_TEAM_PULL_GROUPS, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_TEAM_PULL_GROUPS to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_TEAM_PULL_GROUPS {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14139
    }
}

/** Properties of a C2S_CLUB_BLOCK_TEAM_NEW_GROUP. */
export interface IC2S_CLUB_BLOCK_TEAM_NEW_GROUP {

    /** C2S_CLUB_BLOCK_TEAM_NEW_GROUP clubId */
    clubId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_TEAM_NEW_GROUP. */
export class C2S_CLUB_BLOCK_TEAM_NEW_GROUP implements IC2S_CLUB_BLOCK_TEAM_NEW_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_TEAM_NEW_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_TEAM_NEW_GROUP);

    /** C2S_CLUB_BLOCK_TEAM_NEW_GROUP clubId. */
    public clubId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_TEAM_NEW_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_TEAM_NEW_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_TEAM_NEW_GROUP): C2S_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_NEW_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_NEW_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_TEAM_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_NEW_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_NEW_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_TEAM_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_NEW_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_TEAM_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_NEW_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_TEAM_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_TEAM_NEW_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_TEAM_NEW_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_TEAM_NEW_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_TEAM_NEW_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_TEAM_NEW_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_TEAM_NEW_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_TEAM_NEW_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_TEAM_NEW_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14140
    }
}

/** Properties of a S2C_CLUB_BLOCK_TEAM_NEW_GROUP. */
export interface IS2C_CLUB_BLOCK_TEAM_NEW_GROUP {

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_TEAM_NEW_GROUP. */
export class S2C_CLUB_BLOCK_TEAM_NEW_GROUP implements IS2C_CLUB_BLOCK_TEAM_NEW_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_TEAM_NEW_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_TEAM_NEW_GROUP);

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_TEAM_NEW_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_TEAM_NEW_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_TEAM_NEW_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_TEAM_NEW_GROUP): S2C_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_NEW_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_NEW_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_TEAM_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_NEW_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_NEW_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_NEW_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_TEAM_NEW_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_NEW_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_TEAM_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_NEW_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_TEAM_NEW_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_TEAM_NEW_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_TEAM_NEW_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_TEAM_NEW_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_TEAM_NEW_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_TEAM_NEW_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_TEAM_NEW_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_TEAM_NEW_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_TEAM_NEW_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_TEAM_NEW_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14141
    }
}

/** Properties of a C2S_CLUB_BLOCK_TEAM_DEL_GROUP. */
export interface IC2S_CLUB_BLOCK_TEAM_DEL_GROUP {

    /** C2S_CLUB_BLOCK_TEAM_DEL_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_TEAM_DEL_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_TEAM_DEL_GROUP. */
export class C2S_CLUB_BLOCK_TEAM_DEL_GROUP implements IC2S_CLUB_BLOCK_TEAM_DEL_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_TEAM_DEL_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_TEAM_DEL_GROUP);

    /** C2S_CLUB_BLOCK_TEAM_DEL_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_TEAM_DEL_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_TEAM_DEL_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_TEAM_DEL_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_TEAM_DEL_GROUP): C2S_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_DEL_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_DEL_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_TEAM_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_DEL_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_DEL_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_TEAM_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_DEL_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_TEAM_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_DEL_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_TEAM_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_TEAM_DEL_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_TEAM_DEL_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_TEAM_DEL_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_TEAM_DEL_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_TEAM_DEL_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_TEAM_DEL_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_TEAM_DEL_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_TEAM_DEL_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14142
    }
}

/** Properties of a S2C_CLUB_BLOCK_TEAM_DEL_GROUP. */
export interface IS2C_CLUB_BLOCK_TEAM_DEL_GROUP {

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP groupId */
    groupId?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_TEAM_DEL_GROUP. */
export class S2C_CLUB_BLOCK_TEAM_DEL_GROUP implements IS2C_CLUB_BLOCK_TEAM_DEL_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_TEAM_DEL_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_TEAM_DEL_GROUP);

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_TEAM_DEL_GROUP groupId. */
    public groupId: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_TEAM_DEL_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_TEAM_DEL_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_TEAM_DEL_GROUP): S2C_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_DEL_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_DEL_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_TEAM_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_DEL_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_DEL_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_DEL_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_TEAM_DEL_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_DEL_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_TEAM_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_DEL_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_TEAM_DEL_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_TEAM_DEL_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_TEAM_DEL_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_TEAM_DEL_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_TEAM_DEL_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_TEAM_DEL_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_TEAM_DEL_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_TEAM_DEL_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_TEAM_DEL_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_TEAM_DEL_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14143
    }
}

/** Properties of a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP. */
export interface IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP groupId */
    groupId?: (number|null);

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP guid */
    guid?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP. */
export class C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP implements IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP);

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP groupId. */
    public groupId: number;

    /** C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP guid. */
    public guid: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP): C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14144
    }
}

/** Properties of a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP. */
export interface IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP groupId */
    groupId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP guid */
    guid?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP. */
export class S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP implements IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP);

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP groupId. */
    public groupId: number;

    /** S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP guid. */
    public guid: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP): S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_TEAM_ADD_TEAM_TO_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14145
    }
}

/** Properties of a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP. */
export interface IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP clubId */
    clubId?: (number|null);

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP groupId */
    groupId?: (number|null);

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP guid */
    guid?: (number|null);
}

/** Represents a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP. */
export class C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP implements IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /**
     * Constructs a new C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP);

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP clubId. */
    public clubId: number;

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP groupId. */
    public groupId: number;

    /** C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP guid. */
    public guid: number;

    /**
     * Creates a new C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP instance
     */
    public static create(properties?: IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP): C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message, length delimited. Does not implicitly {@link C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.verify|verify} messages.
     * @param message C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Decodes a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Verifies a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Creates a plain object from a C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message. Also converts values to other types if specified.
     * @param message C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14146
    }
}

/** Properties of a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP. */
export interface IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP result */
    result?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP clubId */
    clubId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP groupId */
    groupId?: (number|null);

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP guid */
    guid?: (number|null);
}

/** Represents a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP. */
export class S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP implements IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /**
     * Constructs a new S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP);

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP result. */
    public result: number;

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP clubId. */
    public clubId: number;

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP groupId. */
    public groupId: number;

    /** S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP guid. */
    public guid: number;

    /**
     * Creates a new S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP instance
     */
    public static create(properties?: IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP): S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message, length delimited. Does not implicitly {@link S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP.verify|verify} messages.
     * @param message S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Decodes a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Verifies a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP;

    /**
     * Creates a plain object from a S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP message. Also converts values to other types if specified.
     * @param message S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_BLOCK_TEAM_REMOVE_TEAM_FROM_GROUP {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14147
    }
}

/** Properties of a C2S_CLUB_TABLE_INFO_REQ. */
export interface IC2S_CLUB_TABLE_INFO_REQ {

    /** C2S_CLUB_TABLE_INFO_REQ clubId */
    clubId?: (number|null);

    /** C2S_CLUB_TABLE_INFO_REQ gameType */
    gameType?: (number|null);

    /** C2S_CLUB_TABLE_INFO_REQ templateid */
    templateid?: (number|null);

    /** C2S_CLUB_TABLE_INFO_REQ type */
    type?: (number|null);
}

/** Represents a C2S_CLUB_TABLE_INFO_REQ. */
export class C2S_CLUB_TABLE_INFO_REQ implements IC2S_CLUB_TABLE_INFO_REQ {

    /**
     * Constructs a new C2S_CLUB_TABLE_INFO_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_CLUB_TABLE_INFO_REQ);

    /** C2S_CLUB_TABLE_INFO_REQ clubId. */
    public clubId: number;

    /** C2S_CLUB_TABLE_INFO_REQ gameType. */
    public gameType: number;

    /** C2S_CLUB_TABLE_INFO_REQ templateid. */
    public templateid: number;

    /** C2S_CLUB_TABLE_INFO_REQ type. */
    public type: number;

    /**
     * Creates a new C2S_CLUB_TABLE_INFO_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_CLUB_TABLE_INFO_REQ instance
     */
    public static create(properties?: IC2S_CLUB_TABLE_INFO_REQ): C2S_CLUB_TABLE_INFO_REQ;

    /**
     * Encodes the specified C2S_CLUB_TABLE_INFO_REQ message. Does not implicitly {@link C2S_CLUB_TABLE_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TABLE_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_CLUB_TABLE_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_CLUB_TABLE_INFO_REQ message, length delimited. Does not implicitly {@link C2S_CLUB_TABLE_INFO_REQ.verify|verify} messages.
     * @param message C2S_CLUB_TABLE_INFO_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_CLUB_TABLE_INFO_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_CLUB_TABLE_INFO_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_CLUB_TABLE_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_CLUB_TABLE_INFO_REQ;

    /**
     * Decodes a C2S_CLUB_TABLE_INFO_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_CLUB_TABLE_INFO_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_CLUB_TABLE_INFO_REQ;

    /**
     * Verifies a C2S_CLUB_TABLE_INFO_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_CLUB_TABLE_INFO_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_CLUB_TABLE_INFO_REQ
     */
    public static fromObject(object: { [k: string]: any }): C2S_CLUB_TABLE_INFO_REQ;

    /**
     * Creates a plain object from a C2S_CLUB_TABLE_INFO_REQ message. Also converts values to other types if specified.
     * @param message C2S_CLUB_TABLE_INFO_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_CLUB_TABLE_INFO_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_CLUB_TABLE_INFO_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_CLUB_TABLE_INFO_REQ {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14148
    }
}

/** Properties of a S2C_CLUB_TABLE_INFO_RES. */
export interface IS2C_CLUB_TABLE_INFO_RES {

    /** S2C_CLUB_TABLE_INFO_RES result */
    result?: (number|null);

    /** S2C_CLUB_TABLE_INFO_RES tableList */
    tableList?: (ITABLE_STATUS_INFO[]|null);
}

/** Represents a S2C_CLUB_TABLE_INFO_RES. */
export class S2C_CLUB_TABLE_INFO_RES implements IS2C_CLUB_TABLE_INFO_RES {

    /**
     * Constructs a new S2C_CLUB_TABLE_INFO_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_CLUB_TABLE_INFO_RES);

    /** S2C_CLUB_TABLE_INFO_RES result. */
    public result: number;

    /** S2C_CLUB_TABLE_INFO_RES tableList. */
    public tableList: ITABLE_STATUS_INFO[];

    /**
     * Creates a new S2C_CLUB_TABLE_INFO_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_CLUB_TABLE_INFO_RES instance
     */
    public static create(properties?: IS2C_CLUB_TABLE_INFO_RES): S2C_CLUB_TABLE_INFO_RES;

    /**
     * Encodes the specified S2C_CLUB_TABLE_INFO_RES message. Does not implicitly {@link S2C_CLUB_TABLE_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_TABLE_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_CLUB_TABLE_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_CLUB_TABLE_INFO_RES message, length delimited. Does not implicitly {@link S2C_CLUB_TABLE_INFO_RES.verify|verify} messages.
     * @param message S2C_CLUB_TABLE_INFO_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_CLUB_TABLE_INFO_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_CLUB_TABLE_INFO_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_CLUB_TABLE_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_CLUB_TABLE_INFO_RES;

    /**
     * Decodes a S2C_CLUB_TABLE_INFO_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_CLUB_TABLE_INFO_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_CLUB_TABLE_INFO_RES;

    /**
     * Verifies a S2C_CLUB_TABLE_INFO_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_CLUB_TABLE_INFO_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_CLUB_TABLE_INFO_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_CLUB_TABLE_INFO_RES;

    /**
     * Creates a plain object from a S2C_CLUB_TABLE_INFO_RES message. Also converts values to other types if specified.
     * @param message S2C_CLUB_TABLE_INFO_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_CLUB_TABLE_INFO_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_CLUB_TABLE_INFO_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_CLUB_TABLE_INFO_RES {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 14149
    }
}

/** DDZ_ACTION enum. */
export enum DDZ_ACTION {
    ACTION_NONE = 0,
    ACTION_PASS = 1,
    ACTION_DISCARD = 2
}

/** DDZ_CARD_TYPE enum. */
export enum DDZ_CARD_TYPE {
    ERROR = 0,
    SINGLE = 1,
    DOUBLE = 2,
    THREE = 3,
    THREE_WITH_ONE = 4,
    THREE_WITH_TWO = 5,
    FOUR_WITH_SINGLE = 6,
    FOUR_WITH_DOUBLE = 7,
    FOUR_WITH_THREE = 8,
    SINGLE_LINE = 9,
    DOUBLE_LINE = 10,
    PLANE = 11,
    PLANE_WITH_ONE = 12,
    PLANE_WITH_TWO = 13,
    BOMB = 14,
    MISSLE = 15
}

/** Properties of a DdzPlayerInfo. */
export interface IDdzPlayerInfo {

    /** DdzPlayerInfo handCards */
    handCards?: (number[]|null);

    /** DdzPlayerInfo chairId */
    chairId?: (number|null);

    /** DdzPlayerInfo totalScore */
    totalScore?: (number|null);

    /** DdzPlayerInfo roundScore */
    roundScore?: (number|null);
}

/** Represents a DdzPlayerInfo. */
export class DdzPlayerInfo implements IDdzPlayerInfo {

    /**
     * Constructs a new DdzPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDdzPlayerInfo);

    /** DdzPlayerInfo handCards. */
    public handCards: number[];

    /** DdzPlayerInfo chairId. */
    public chairId: number;

    /** DdzPlayerInfo totalScore. */
    public totalScore: number;

    /** DdzPlayerInfo roundScore. */
    public roundScore: number;

    /**
     * Creates a new DdzPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DdzPlayerInfo instance
     */
    public static create(properties?: IDdzPlayerInfo): DdzPlayerInfo;

    /**
     * Encodes the specified DdzPlayerInfo message. Does not implicitly {@link DdzPlayerInfo.verify|verify} messages.
     * @param message DdzPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDdzPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DdzPlayerInfo message, length delimited. Does not implicitly {@link DdzPlayerInfo.verify|verify} messages.
     * @param message DdzPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDdzPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DdzPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DdzPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DdzPlayerInfo;

    /**
     * Decodes a DdzPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DdzPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DdzPlayerInfo;

    /**
     * Verifies a DdzPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DdzPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DdzPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): DdzPlayerInfo;

    /**
     * Creates a plain object from a DdzPlayerInfo message. Also converts values to other types if specified.
     * @param message DdzPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DdzPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DdzPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DdzReconnectData. */
export interface IDdzReconnectData {

    /** DdzReconnectData actLeftTime */
    actLeftTime?: (number|null);

    /** DdzReconnectData lastDiscardChair */
    lastDiscardChair?: (number|null);

    /** DdzReconnectData lastDiscard */
    lastDiscard?: (number[]|null);

    /** DdzReconnectData totalScores */
    totalScores?: ({ [k: string]: string }|null);

    /** DdzReconnectData landlordCards */
    landlordCards?: (number[]|null);

    /** DdzReconnectData totalMoney */
    totalMoney?: ({ [k: string]: string }|null);
}

/** Represents a DdzReconnectData. */
export class DdzReconnectData implements IDdzReconnectData {

    /**
     * Constructs a new DdzReconnectData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDdzReconnectData);

    /** DdzReconnectData actLeftTime. */
    public actLeftTime: number;

    /** DdzReconnectData lastDiscardChair. */
    public lastDiscardChair: number;

    /** DdzReconnectData lastDiscard. */
    public lastDiscard: number[];

    /** DdzReconnectData totalScores. */
    public totalScores: { [k: string]: string };

    /** DdzReconnectData landlordCards. */
    public landlordCards: number[];

    /** DdzReconnectData totalMoney. */
    public totalMoney: { [k: string]: string };

    /**
     * Creates a new DdzReconnectData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DdzReconnectData instance
     */
    public static create(properties?: IDdzReconnectData): DdzReconnectData;

    /**
     * Encodes the specified DdzReconnectData message. Does not implicitly {@link DdzReconnectData.verify|verify} messages.
     * @param message DdzReconnectData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDdzReconnectData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DdzReconnectData message, length delimited. Does not implicitly {@link DdzReconnectData.verify|verify} messages.
     * @param message DdzReconnectData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDdzReconnectData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DdzReconnectData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DdzReconnectData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DdzReconnectData;

    /**
     * Decodes a DdzReconnectData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DdzReconnectData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DdzReconnectData;

    /**
     * Verifies a DdzReconnectData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DdzReconnectData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DdzReconnectData
     */
    public static fromObject(object: { [k: string]: any }): DdzReconnectData;

    /**
     * Creates a plain object from a DdzReconnectData message. Also converts values to other types if specified.
     * @param message DdzReconnectData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DdzReconnectData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DdzReconnectData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_DdzDeskEnter. */
export interface ISC_DdzDeskEnter {

    /** SC_DdzDeskEnter pbPlayers */
    pbPlayers?: (IDdzPlayerInfo[]|null);

    /** SC_DdzDeskEnter status */
    status?: (number|null);

    /** SC_DdzDeskEnter landlord */
    landlord?: (number|null);

    /** SC_DdzDeskEnter selfChairId */
    selfChairId?: (number|null);

    /** SC_DdzDeskEnter actTimeLimit */
    actTimeLimit?: (number|null);

    /** SC_DdzDeskEnter isReconnect */
    isReconnect?: (boolean|null);

    /** SC_DdzDeskEnter pbRecData */
    pbRecData?: (IDdzReconnectData|null);

    /** SC_DdzDeskEnter round */
    round?: (number|null);

    /** SC_DdzDeskEnter times */
    times?: (number|null);

    /** SC_DdzDeskEnter baseScore */
    baseScore?: (number|null);
}

/** Represents a SC_DdzDeskEnter. */
export class SC_DdzDeskEnter implements ISC_DdzDeskEnter {

    /**
     * Constructs a new SC_DdzDeskEnter.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzDeskEnter);

    /** SC_DdzDeskEnter pbPlayers. */
    public pbPlayers: IDdzPlayerInfo[];

    /** SC_DdzDeskEnter status. */
    public status: number;

    /** SC_DdzDeskEnter landlord. */
    public landlord: number;

    /** SC_DdzDeskEnter selfChairId. */
    public selfChairId: number;

    /** SC_DdzDeskEnter actTimeLimit. */
    public actTimeLimit: number;

    /** SC_DdzDeskEnter isReconnect. */
    public isReconnect: boolean;

    /** SC_DdzDeskEnter pbRecData. */
    public pbRecData?: (IDdzReconnectData|null);

    /** SC_DdzDeskEnter round. */
    public round: number;

    /** SC_DdzDeskEnter times. */
    public times: number;

    /** SC_DdzDeskEnter baseScore. */
    public baseScore: number;

    /**
     * Creates a new SC_DdzDeskEnter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzDeskEnter instance
     */
    public static create(properties?: ISC_DdzDeskEnter): SC_DdzDeskEnter;

    /**
     * Encodes the specified SC_DdzDeskEnter message. Does not implicitly {@link SC_DdzDeskEnter.verify|verify} messages.
     * @param message SC_DdzDeskEnter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzDeskEnter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzDeskEnter message, length delimited. Does not implicitly {@link SC_DdzDeskEnter.verify|verify} messages.
     * @param message SC_DdzDeskEnter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzDeskEnter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzDeskEnter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzDeskEnter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzDeskEnter;

    /**
     * Decodes a SC_DdzDeskEnter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzDeskEnter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzDeskEnter;

    /**
     * Verifies a SC_DdzDeskEnter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzDeskEnter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzDeskEnter
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzDeskEnter;

    /**
     * Creates a plain object from a SC_DdzDeskEnter message. Also converts values to other types if specified.
     * @param message SC_DdzDeskEnter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzDeskEnter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzDeskEnter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzDeskEnter {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25100
    }
}

/** Properties of a SC_DdzDiscardRound. */
export interface ISC_DdzDiscardRound {

    /** SC_DdzDiscardRound chairId */
    chairId?: (number|null);
}

/** Represents a SC_DdzDiscardRound. */
export class SC_DdzDiscardRound implements ISC_DdzDiscardRound {

    /**
     * Constructs a new SC_DdzDiscardRound.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzDiscardRound);

    /** SC_DdzDiscardRound chairId. */
    public chairId: number;

    /**
     * Creates a new SC_DdzDiscardRound instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzDiscardRound instance
     */
    public static create(properties?: ISC_DdzDiscardRound): SC_DdzDiscardRound;

    /**
     * Encodes the specified SC_DdzDiscardRound message. Does not implicitly {@link SC_DdzDiscardRound.verify|verify} messages.
     * @param message SC_DdzDiscardRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzDiscardRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzDiscardRound message, length delimited. Does not implicitly {@link SC_DdzDiscardRound.verify|verify} messages.
     * @param message SC_DdzDiscardRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzDiscardRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzDiscardRound message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzDiscardRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzDiscardRound;

    /**
     * Decodes a SC_DdzDiscardRound message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzDiscardRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzDiscardRound;

    /**
     * Verifies a SC_DdzDiscardRound message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzDiscardRound message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzDiscardRound
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzDiscardRound;

    /**
     * Creates a plain object from a SC_DdzDiscardRound message. Also converts values to other types if specified.
     * @param message SC_DdzDiscardRound
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzDiscardRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzDiscardRound to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzDiscardRound {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25101
    }
}

/** Properties of a SC_DdzActTrustee. */
export interface ISC_DdzActTrustee {

    /** SC_DdzActTrustee chairId */
    chairId?: (number|null);

    /** SC_DdzActTrustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SC_DdzActTrustee. */
export class SC_DdzActTrustee implements ISC_DdzActTrustee {

    /**
     * Constructs a new SC_DdzActTrustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzActTrustee);

    /** SC_DdzActTrustee chairId. */
    public chairId: number;

    /** SC_DdzActTrustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SC_DdzActTrustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzActTrustee instance
     */
    public static create(properties?: ISC_DdzActTrustee): SC_DdzActTrustee;

    /**
     * Encodes the specified SC_DdzActTrustee message. Does not implicitly {@link SC_DdzActTrustee.verify|verify} messages.
     * @param message SC_DdzActTrustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzActTrustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzActTrustee message, length delimited. Does not implicitly {@link SC_DdzActTrustee.verify|verify} messages.
     * @param message SC_DdzActTrustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzActTrustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzActTrustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzActTrustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzActTrustee;

    /**
     * Decodes a SC_DdzActTrustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzActTrustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzActTrustee;

    /**
     * Verifies a SC_DdzActTrustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzActTrustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzActTrustee
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzActTrustee;

    /**
     * Creates a plain object from a SC_DdzActTrustee message. Also converts values to other types if specified.
     * @param message SC_DdzActTrustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzActTrustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzActTrustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzActTrustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25103
    }
}

/** Properties of a CS_DdzDoAction. */
export interface ICS_DdzDoAction {

    /** CS_DdzDoAction action */
    action?: (number|null);

    /** CS_DdzDoAction cards */
    cards?: (number[]|null);
}

/** Represents a CS_DdzDoAction. */
export class CS_DdzDoAction implements ICS_DdzDoAction {

    /**
     * Constructs a new CS_DdzDoAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DdzDoAction);

    /** CS_DdzDoAction action. */
    public action: number;

    /** CS_DdzDoAction cards. */
    public cards: number[];

    /**
     * Creates a new CS_DdzDoAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DdzDoAction instance
     */
    public static create(properties?: ICS_DdzDoAction): CS_DdzDoAction;

    /**
     * Encodes the specified CS_DdzDoAction message. Does not implicitly {@link CS_DdzDoAction.verify|verify} messages.
     * @param message CS_DdzDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DdzDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DdzDoAction message, length delimited. Does not implicitly {@link CS_DdzDoAction.verify|verify} messages.
     * @param message CS_DdzDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DdzDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DdzDoAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DdzDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DdzDoAction;

    /**
     * Decodes a CS_DdzDoAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DdzDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DdzDoAction;

    /**
     * Verifies a CS_DdzDoAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DdzDoAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DdzDoAction
     */
    public static fromObject(object: { [k: string]: any }): CS_DdzDoAction;

    /**
     * Creates a plain object from a CS_DdzDoAction message. Also converts values to other types if specified.
     * @param message CS_DdzDoAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DdzDoAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DdzDoAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DdzDoAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25104
    }
}

/** Properties of a SC_DdzDoAction. */
export interface ISC_DdzDoAction {

    /** SC_DdzDoAction result */
    result?: (number|null);

    /** SC_DdzDoAction chairId */
    chairId?: (number|null);

    /** SC_DdzDoAction action */
    action?: (number|null);

    /** SC_DdzDoAction cards */
    cards?: (number[]|null);
}

/** Represents a SC_DdzDoAction. */
export class SC_DdzDoAction implements ISC_DdzDoAction {

    /**
     * Constructs a new SC_DdzDoAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzDoAction);

    /** SC_DdzDoAction result. */
    public result: number;

    /** SC_DdzDoAction chairId. */
    public chairId: number;

    /** SC_DdzDoAction action. */
    public action: number;

    /** SC_DdzDoAction cards. */
    public cards: number[];

    /**
     * Creates a new SC_DdzDoAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzDoAction instance
     */
    public static create(properties?: ISC_DdzDoAction): SC_DdzDoAction;

    /**
     * Encodes the specified SC_DdzDoAction message. Does not implicitly {@link SC_DdzDoAction.verify|verify} messages.
     * @param message SC_DdzDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzDoAction message, length delimited. Does not implicitly {@link SC_DdzDoAction.verify|verify} messages.
     * @param message SC_DdzDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzDoAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzDoAction;

    /**
     * Decodes a SC_DdzDoAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzDoAction;

    /**
     * Verifies a SC_DdzDoAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzDoAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzDoAction
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzDoAction;

    /**
     * Creates a plain object from a SC_DdzDoAction message. Also converts values to other types if specified.
     * @param message SC_DdzDoAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzDoAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzDoAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzDoAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25105
    }
}

/** Properties of a DdzBlanacePlayer. */
export interface IDdzBlanacePlayer {

    /** DdzBlanacePlayer chairId */
    chairId?: (number|null);

    /** DdzBlanacePlayer baseScore */
    baseScore?: (number|null);

    /** DdzBlanacePlayer times */
    times?: (number|null);

    /** DdzBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** DdzBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** DdzBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** DdzBlanacePlayer totalMoney */
    totalMoney?: (number|null);

    /** DdzBlanacePlayer handCards */
    handCards?: (number[]|null);
}

/** Represents a DdzBlanacePlayer. */
export class DdzBlanacePlayer implements IDdzBlanacePlayer {

    /**
     * Constructs a new DdzBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDdzBlanacePlayer);

    /** DdzBlanacePlayer chairId. */
    public chairId: number;

    /** DdzBlanacePlayer baseScore. */
    public baseScore: number;

    /** DdzBlanacePlayer times. */
    public times: number;

    /** DdzBlanacePlayer totalScore. */
    public totalScore: number;

    /** DdzBlanacePlayer roundScore. */
    public roundScore: number;

    /** DdzBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** DdzBlanacePlayer totalMoney. */
    public totalMoney: number;

    /** DdzBlanacePlayer handCards. */
    public handCards: number[];

    /**
     * Creates a new DdzBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DdzBlanacePlayer instance
     */
    public static create(properties?: IDdzBlanacePlayer): DdzBlanacePlayer;

    /**
     * Encodes the specified DdzBlanacePlayer message. Does not implicitly {@link DdzBlanacePlayer.verify|verify} messages.
     * @param message DdzBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDdzBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DdzBlanacePlayer message, length delimited. Does not implicitly {@link DdzBlanacePlayer.verify|verify} messages.
     * @param message DdzBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDdzBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DdzBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DdzBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DdzBlanacePlayer;

    /**
     * Decodes a DdzBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DdzBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DdzBlanacePlayer;

    /**
     * Verifies a DdzBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DdzBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DdzBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): DdzBlanacePlayer;

    /**
     * Creates a plain object from a DdzBlanacePlayer message. Also converts values to other types if specified.
     * @param message DdzBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DdzBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DdzBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_DdzGameOver. */
export interface ISC_DdzGameOver {

    /** SC_DdzGameOver playerBalance */
    playerBalance?: (IDdzBlanacePlayer[]|null);

    /** SC_DdzGameOver chunTian */
    chunTian?: (number|null);

    /** SC_DdzGameOver leftCards */
    leftCards?: (number[]|null);
}

/** Represents a SC_DdzGameOver. */
export class SC_DdzGameOver implements ISC_DdzGameOver {

    /**
     * Constructs a new SC_DdzGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzGameOver);

    /** SC_DdzGameOver playerBalance. */
    public playerBalance: IDdzBlanacePlayer[];

    /** SC_DdzGameOver chunTian. */
    public chunTian: number;

    /** SC_DdzGameOver leftCards. */
    public leftCards: number[];

    /**
     * Creates a new SC_DdzGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzGameOver instance
     */
    public static create(properties?: ISC_DdzGameOver): SC_DdzGameOver;

    /**
     * Encodes the specified SC_DdzGameOver message. Does not implicitly {@link SC_DdzGameOver.verify|verify} messages.
     * @param message SC_DdzGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzGameOver message, length delimited. Does not implicitly {@link SC_DdzGameOver.verify|verify} messages.
     * @param message SC_DdzGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzGameOver;

    /**
     * Decodes a SC_DdzGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzGameOver;

    /**
     * Verifies a SC_DdzGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzGameOver;

    /**
     * Creates a plain object from a SC_DdzGameOver message. Also converts values to other types if specified.
     * @param message SC_DdzGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzGameOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25106
    }
}

/** Properties of a DdzStatisticsItem. */
export interface IDdzStatisticsItem {

    /** DdzStatisticsItem type */
    type?: (number|null);

    /** DdzStatisticsItem count */
    count?: (number|null);
}

/** Represents a DdzStatisticsItem. */
export class DdzStatisticsItem implements IDdzStatisticsItem {

    /**
     * Constructs a new DdzStatisticsItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDdzStatisticsItem);

    /** DdzStatisticsItem type. */
    public type: number;

    /** DdzStatisticsItem count. */
    public count: number;

    /**
     * Creates a new DdzStatisticsItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DdzStatisticsItem instance
     */
    public static create(properties?: IDdzStatisticsItem): DdzStatisticsItem;

    /**
     * Encodes the specified DdzStatisticsItem message. Does not implicitly {@link DdzStatisticsItem.verify|verify} messages.
     * @param message DdzStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDdzStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DdzStatisticsItem message, length delimited. Does not implicitly {@link DdzStatisticsItem.verify|verify} messages.
     * @param message DdzStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDdzStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DdzStatisticsItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DdzStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DdzStatisticsItem;

    /**
     * Decodes a DdzStatisticsItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DdzStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DdzStatisticsItem;

    /**
     * Verifies a DdzStatisticsItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DdzStatisticsItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DdzStatisticsItem
     */
    public static fromObject(object: { [k: string]: any }): DdzStatisticsItem;

    /**
     * Creates a plain object from a DdzStatisticsItem message. Also converts values to other types if specified.
     * @param message DdzStatisticsItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DdzStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DdzStatisticsItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DdzFinalOverPlayerInfo. */
export interface IDdzFinalOverPlayerInfo {

    /** DdzFinalOverPlayerInfo chairId */
    chairId?: (number|null);

    /** DdzFinalOverPlayerInfo guid */
    guid?: (number|null);

    /** DdzFinalOverPlayerInfo score */
    score?: (number|null);

    /** DdzFinalOverPlayerInfo money */
    money?: (number|null);

    /** DdzFinalOverPlayerInfo statistics */
    statistics?: (IDdzStatisticsItem[]|null);
}

/** Represents a DdzFinalOverPlayerInfo. */
export class DdzFinalOverPlayerInfo implements IDdzFinalOverPlayerInfo {

    /**
     * Constructs a new DdzFinalOverPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDdzFinalOverPlayerInfo);

    /** DdzFinalOverPlayerInfo chairId. */
    public chairId: number;

    /** DdzFinalOverPlayerInfo guid. */
    public guid: number;

    /** DdzFinalOverPlayerInfo score. */
    public score: number;

    /** DdzFinalOverPlayerInfo money. */
    public money: number;

    /** DdzFinalOverPlayerInfo statistics. */
    public statistics: IDdzStatisticsItem[];

    /**
     * Creates a new DdzFinalOverPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DdzFinalOverPlayerInfo instance
     */
    public static create(properties?: IDdzFinalOverPlayerInfo): DdzFinalOverPlayerInfo;

    /**
     * Encodes the specified DdzFinalOverPlayerInfo message. Does not implicitly {@link DdzFinalOverPlayerInfo.verify|verify} messages.
     * @param message DdzFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDdzFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DdzFinalOverPlayerInfo message, length delimited. Does not implicitly {@link DdzFinalOverPlayerInfo.verify|verify} messages.
     * @param message DdzFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDdzFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DdzFinalOverPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DdzFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DdzFinalOverPlayerInfo;

    /**
     * Decodes a DdzFinalOverPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DdzFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DdzFinalOverPlayerInfo;

    /**
     * Verifies a DdzFinalOverPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DdzFinalOverPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DdzFinalOverPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): DdzFinalOverPlayerInfo;

    /**
     * Creates a plain object from a DdzFinalOverPlayerInfo message. Also converts values to other types if specified.
     * @param message DdzFinalOverPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DdzFinalOverPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DdzFinalOverPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_DdzFinalGameOver. */
export interface ISC_DdzFinalGameOver {

    /** SC_DdzFinalGameOver players */
    players?: (IDdzFinalOverPlayerInfo[]|null);
}

/** Represents a SC_DdzFinalGameOver. */
export class SC_DdzFinalGameOver implements ISC_DdzFinalGameOver {

    /**
     * Constructs a new SC_DdzFinalGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzFinalGameOver);

    /** SC_DdzFinalGameOver players. */
    public players: IDdzFinalOverPlayerInfo[];

    /**
     * Creates a new SC_DdzFinalGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzFinalGameOver instance
     */
    public static create(properties?: ISC_DdzFinalGameOver): SC_DdzFinalGameOver;

    /**
     * Encodes the specified SC_DdzFinalGameOver message. Does not implicitly {@link SC_DdzFinalGameOver.verify|verify} messages.
     * @param message SC_DdzFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzFinalGameOver message, length delimited. Does not implicitly {@link SC_DdzFinalGameOver.verify|verify} messages.
     * @param message SC_DdzFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzFinalGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzFinalGameOver;

    /**
     * Decodes a SC_DdzFinalGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzFinalGameOver;

    /**
     * Verifies a SC_DdzFinalGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzFinalGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzFinalGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzFinalGameOver;

    /**
     * Creates a plain object from a SC_DdzFinalGameOver message. Also converts values to other types if specified.
     * @param message SC_DdzFinalGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzFinalGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzFinalGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzFinalGameOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25107
    }
}

/** Properties of a SC_DdzCallLandlordRound. */
export interface ISC_DdzCallLandlordRound {

    /** SC_DdzCallLandlordRound chairId */
    chairId?: (number|null);
}

/** Represents a SC_DdzCallLandlordRound. */
export class SC_DdzCallLandlordRound implements ISC_DdzCallLandlordRound {

    /**
     * Constructs a new SC_DdzCallLandlordRound.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzCallLandlordRound);

    /** SC_DdzCallLandlordRound chairId. */
    public chairId: number;

    /**
     * Creates a new SC_DdzCallLandlordRound instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzCallLandlordRound instance
     */
    public static create(properties?: ISC_DdzCallLandlordRound): SC_DdzCallLandlordRound;

    /**
     * Encodes the specified SC_DdzCallLandlordRound message. Does not implicitly {@link SC_DdzCallLandlordRound.verify|verify} messages.
     * @param message SC_DdzCallLandlordRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzCallLandlordRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzCallLandlordRound message, length delimited. Does not implicitly {@link SC_DdzCallLandlordRound.verify|verify} messages.
     * @param message SC_DdzCallLandlordRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzCallLandlordRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzCallLandlordRound message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzCallLandlordRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzCallLandlordRound;

    /**
     * Decodes a SC_DdzCallLandlordRound message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzCallLandlordRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzCallLandlordRound;

    /**
     * Verifies a SC_DdzCallLandlordRound message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzCallLandlordRound message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzCallLandlordRound
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzCallLandlordRound;

    /**
     * Creates a plain object from a SC_DdzCallLandlordRound message. Also converts values to other types if specified.
     * @param message SC_DdzCallLandlordRound
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzCallLandlordRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzCallLandlordRound to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzCallLandlordRound {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25108
    }
}

/** Properties of a CS_DdzCallLandlord. */
export interface ICS_DdzCallLandlord {

    /** CS_DdzCallLandlord action */
    action?: (number|null);
}

/** Represents a CS_DdzCallLandlord. */
export class CS_DdzCallLandlord implements ICS_DdzCallLandlord {

    /**
     * Constructs a new CS_DdzCallLandlord.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DdzCallLandlord);

    /** CS_DdzCallLandlord action. */
    public action: number;

    /**
     * Creates a new CS_DdzCallLandlord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DdzCallLandlord instance
     */
    public static create(properties?: ICS_DdzCallLandlord): CS_DdzCallLandlord;

    /**
     * Encodes the specified CS_DdzCallLandlord message. Does not implicitly {@link CS_DdzCallLandlord.verify|verify} messages.
     * @param message CS_DdzCallLandlord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DdzCallLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DdzCallLandlord message, length delimited. Does not implicitly {@link CS_DdzCallLandlord.verify|verify} messages.
     * @param message CS_DdzCallLandlord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DdzCallLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DdzCallLandlord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DdzCallLandlord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DdzCallLandlord;

    /**
     * Decodes a CS_DdzCallLandlord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DdzCallLandlord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DdzCallLandlord;

    /**
     * Verifies a CS_DdzCallLandlord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DdzCallLandlord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DdzCallLandlord
     */
    public static fromObject(object: { [k: string]: any }): CS_DdzCallLandlord;

    /**
     * Creates a plain object from a CS_DdzCallLandlord message. Also converts values to other types if specified.
     * @param message CS_DdzCallLandlord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DdzCallLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DdzCallLandlord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DdzCallLandlord {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25109
    }
}

/** Properties of a SC_DdzCallLandlord. */
export interface ISC_DdzCallLandlord {

    /** SC_DdzCallLandlord result */
    result?: (number|null);

    /** SC_DdzCallLandlord chairId */
    chairId?: (number|null);

    /** SC_DdzCallLandlord aciton */
    aciton?: (number|null);

    /** SC_DdzCallLandlord baseScore */
    baseScore?: (number|null);

    /** SC_DdzCallLandlord times */
    times?: (number|null);
}

/** Represents a SC_DdzCallLandlord. */
export class SC_DdzCallLandlord implements ISC_DdzCallLandlord {

    /**
     * Constructs a new SC_DdzCallLandlord.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzCallLandlord);

    /** SC_DdzCallLandlord result. */
    public result: number;

    /** SC_DdzCallLandlord chairId. */
    public chairId: number;

    /** SC_DdzCallLandlord aciton. */
    public aciton: number;

    /** SC_DdzCallLandlord baseScore. */
    public baseScore: number;

    /** SC_DdzCallLandlord times. */
    public times: number;

    /**
     * Creates a new SC_DdzCallLandlord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzCallLandlord instance
     */
    public static create(properties?: ISC_DdzCallLandlord): SC_DdzCallLandlord;

    /**
     * Encodes the specified SC_DdzCallLandlord message. Does not implicitly {@link SC_DdzCallLandlord.verify|verify} messages.
     * @param message SC_DdzCallLandlord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzCallLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzCallLandlord message, length delimited. Does not implicitly {@link SC_DdzCallLandlord.verify|verify} messages.
     * @param message SC_DdzCallLandlord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzCallLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzCallLandlord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzCallLandlord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzCallLandlord;

    /**
     * Decodes a SC_DdzCallLandlord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzCallLandlord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzCallLandlord;

    /**
     * Verifies a SC_DdzCallLandlord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzCallLandlord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzCallLandlord
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzCallLandlord;

    /**
     * Creates a plain object from a SC_DdzCallLandlord message. Also converts values to other types if specified.
     * @param message SC_DdzCallLandlord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzCallLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzCallLandlord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzCallLandlord {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25110
    }
}

/** Properties of a SC_DdzCallLandlordOver. */
export interface ISC_DdzCallLandlordOver {

    /** SC_DdzCallLandlordOver landlord */
    landlord?: (number|null);

    /** SC_DdzCallLandlordOver cards */
    cards?: (number[]|null);
}

/** Represents a SC_DdzCallLandlordOver. */
export class SC_DdzCallLandlordOver implements ISC_DdzCallLandlordOver {

    /**
     * Constructs a new SC_DdzCallLandlordOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzCallLandlordOver);

    /** SC_DdzCallLandlordOver landlord. */
    public landlord: number;

    /** SC_DdzCallLandlordOver cards. */
    public cards: number[];

    /**
     * Creates a new SC_DdzCallLandlordOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzCallLandlordOver instance
     */
    public static create(properties?: ISC_DdzCallLandlordOver): SC_DdzCallLandlordOver;

    /**
     * Encodes the specified SC_DdzCallLandlordOver message. Does not implicitly {@link SC_DdzCallLandlordOver.verify|verify} messages.
     * @param message SC_DdzCallLandlordOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzCallLandlordOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzCallLandlordOver message, length delimited. Does not implicitly {@link SC_DdzCallLandlordOver.verify|verify} messages.
     * @param message SC_DdzCallLandlordOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzCallLandlordOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzCallLandlordOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzCallLandlordOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzCallLandlordOver;

    /**
     * Decodes a SC_DdzCallLandlordOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzCallLandlordOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzCallLandlordOver;

    /**
     * Verifies a SC_DdzCallLandlordOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzCallLandlordOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzCallLandlordOver
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzCallLandlordOver;

    /**
     * Creates a plain object from a SC_DdzCallLandlordOver message. Also converts values to other types if specified.
     * @param message SC_DdzCallLandlordOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzCallLandlordOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzCallLandlordOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzCallLandlordOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25111
    }
}

/** Properties of a SC_DdzCallLandlordInfo. */
export interface ISC_DdzCallLandlordInfo {

    /** SC_DdzCallLandlordInfo result */
    result?: (number|null);

    /** SC_DdzCallLandlordInfo info */
    info?: ({ [k: string]: number }|null);
}

/** Represents a SC_DdzCallLandlordInfo. */
export class SC_DdzCallLandlordInfo implements ISC_DdzCallLandlordInfo {

    /**
     * Constructs a new SC_DdzCallLandlordInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzCallLandlordInfo);

    /** SC_DdzCallLandlordInfo result. */
    public result: number;

    /** SC_DdzCallLandlordInfo info. */
    public info: { [k: string]: number };

    /**
     * Creates a new SC_DdzCallLandlordInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzCallLandlordInfo instance
     */
    public static create(properties?: ISC_DdzCallLandlordInfo): SC_DdzCallLandlordInfo;

    /**
     * Encodes the specified SC_DdzCallLandlordInfo message. Does not implicitly {@link SC_DdzCallLandlordInfo.verify|verify} messages.
     * @param message SC_DdzCallLandlordInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzCallLandlordInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzCallLandlordInfo message, length delimited. Does not implicitly {@link SC_DdzCallLandlordInfo.verify|verify} messages.
     * @param message SC_DdzCallLandlordInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzCallLandlordInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzCallLandlordInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzCallLandlordInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzCallLandlordInfo;

    /**
     * Decodes a SC_DdzCallLandlordInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzCallLandlordInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzCallLandlordInfo;

    /**
     * Verifies a SC_DdzCallLandlordInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzCallLandlordInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzCallLandlordInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzCallLandlordInfo;

    /**
     * Creates a plain object from a SC_DdzCallLandlordInfo message. Also converts values to other types if specified.
     * @param message SC_DdzCallLandlordInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzCallLandlordInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzCallLandlordInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzCallLandlordInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25112
    }
}

/** Properties of a SC_DdzRestart. */
export interface ISC_DdzRestart {
}

/** Represents a SC_DdzRestart. */
export class SC_DdzRestart implements ISC_DdzRestart {

    /**
     * Constructs a new SC_DdzRestart.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DdzRestart);

    /**
     * Creates a new SC_DdzRestart instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DdzRestart instance
     */
    public static create(properties?: ISC_DdzRestart): SC_DdzRestart;

    /**
     * Encodes the specified SC_DdzRestart message. Does not implicitly {@link SC_DdzRestart.verify|verify} messages.
     * @param message SC_DdzRestart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DdzRestart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DdzRestart message, length delimited. Does not implicitly {@link SC_DdzRestart.verify|verify} messages.
     * @param message SC_DdzRestart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DdzRestart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DdzRestart message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DdzRestart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DdzRestart;

    /**
     * Decodes a SC_DdzRestart message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DdzRestart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DdzRestart;

    /**
     * Verifies a SC_DdzRestart message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DdzRestart message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DdzRestart
     */
    public static fromObject(object: { [k: string]: any }): SC_DdzRestart;

    /**
     * Creates a plain object from a SC_DdzRestart message. Also converts values to other types if specified.
     * @param message SC_DdzRestart
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DdzRestart, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DdzRestart to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DdzRestart {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 25113
    }
}

/** Properties of a CS_Logout. */
export interface ICS_Logout {
}

/** Represents a CS_Logout. */
export class CS_Logout implements ICS_Logout {

    /**
     * Constructs a new CS_Logout.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Logout);

    /**
     * Creates a new CS_Logout instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Logout instance
     */
    public static create(properties?: ICS_Logout): CS_Logout;

    /**
     * Encodes the specified CS_Logout message. Does not implicitly {@link CS_Logout.verify|verify} messages.
     * @param message CS_Logout message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Logout, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Logout message, length delimited. Does not implicitly {@link CS_Logout.verify|verify} messages.
     * @param message CS_Logout message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Logout, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Logout message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Logout
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Logout;

    /**
     * Decodes a CS_Logout message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Logout
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Logout;

    /**
     * Verifies a CS_Logout message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Logout message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Logout
     */
    public static fromObject(object: { [k: string]: any }): CS_Logout;

    /**
     * Creates a plain object from a CS_Logout message. Also converts values to other types if specified.
     * @param message CS_Logout
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Logout, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Logout to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Logout {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 994
    }
}

/** Properties of a SC_Logout. */
export interface ISC_Logout {

    /** SC_Logout result */
    result?: (number|null);
}

/** Represents a SC_Logout. */
export class SC_Logout implements ISC_Logout {

    /**
     * Constructs a new SC_Logout.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Logout);

    /** SC_Logout result. */
    public result: number;

    /**
     * Creates a new SC_Logout instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Logout instance
     */
    public static create(properties?: ISC_Logout): SC_Logout;

    /**
     * Encodes the specified SC_Logout message. Does not implicitly {@link SC_Logout.verify|verify} messages.
     * @param message SC_Logout message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Logout, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Logout message, length delimited. Does not implicitly {@link SC_Logout.verify|verify} messages.
     * @param message SC_Logout message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Logout, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Logout message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Logout
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Logout;

    /**
     * Decodes a SC_Logout message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Logout
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Logout;

    /**
     * Verifies a SC_Logout message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Logout message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Logout
     */
    public static fromObject(object: { [k: string]: any }): SC_Logout;

    /**
     * Creates a plain object from a SC_Logout message. Also converts values to other types if specified.
     * @param message SC_Logout
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Logout, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Logout to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Logout {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 995
    }
}

/** Properties of a CL_Auth. */
export interface ICL_Auth {

    /** CL_Auth code */
    code?: (string|null);

    /** CL_Auth authPlatform */
    authPlatform?: (string|null);

    /** CL_Auth phoneType */
    phoneType?: (string|null);

    /** CL_Auth packageName */
    packageName?: (string|null);

    /** CL_Auth version */
    version?: (string|null);

    /** CL_Auth promoter */
    promoter?: (number|Long|null);

    /** CL_Auth channelId */
    channelId?: (string|null);

    /** CL_Auth sid */
    sid?: (string|null);

    /** CL_Auth imei */
    imei?: (string|null);
}

/** Represents a CL_Auth. */
export class CL_Auth implements ICL_Auth {

    /**
     * Constructs a new CL_Auth.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICL_Auth);

    /** CL_Auth code. */
    public code: string;

    /** CL_Auth authPlatform. */
    public authPlatform: string;

    /** CL_Auth phoneType. */
    public phoneType: string;

    /** CL_Auth packageName. */
    public packageName: string;

    /** CL_Auth version. */
    public version: string;

    /** CL_Auth promoter. */
    public promoter: (number|Long);

    /** CL_Auth channelId. */
    public channelId: string;

    /** CL_Auth sid. */
    public sid: string;

    /** CL_Auth imei. */
    public imei: string;

    /**
     * Creates a new CL_Auth instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CL_Auth instance
     */
    public static create(properties?: ICL_Auth): CL_Auth;

    /**
     * Encodes the specified CL_Auth message. Does not implicitly {@link CL_Auth.verify|verify} messages.
     * @param message CL_Auth message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICL_Auth, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CL_Auth message, length delimited. Does not implicitly {@link CL_Auth.verify|verify} messages.
     * @param message CL_Auth message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICL_Auth, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CL_Auth message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CL_Auth
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CL_Auth;

    /**
     * Decodes a CL_Auth message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CL_Auth
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CL_Auth;

    /**
     * Verifies a CL_Auth message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CL_Auth message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CL_Auth
     */
    public static fromObject(object: { [k: string]: any }): CL_Auth;

    /**
     * Creates a plain object from a CL_Auth message. Also converts values to other types if specified.
     * @param message CL_Auth
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CL_Auth, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CL_Auth to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CL_Auth {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 997
    }
}

/** Properties of a LC_Auth. */
export interface ILC_Auth {

    /** LC_Auth result */
    result?: (number|null);

    /** LC_Auth errmsg */
    errmsg?: (string|null);
}

/** Represents a LC_Auth. */
export class LC_Auth implements ILC_Auth {

    /**
     * Constructs a new LC_Auth.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILC_Auth);

    /** LC_Auth result. */
    public result: number;

    /** LC_Auth errmsg. */
    public errmsg: string;

    /**
     * Creates a new LC_Auth instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LC_Auth instance
     */
    public static create(properties?: ILC_Auth): LC_Auth;

    /**
     * Encodes the specified LC_Auth message. Does not implicitly {@link LC_Auth.verify|verify} messages.
     * @param message LC_Auth message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILC_Auth, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LC_Auth message, length delimited. Does not implicitly {@link LC_Auth.verify|verify} messages.
     * @param message LC_Auth message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILC_Auth, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LC_Auth message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LC_Auth
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LC_Auth;

    /**
     * Decodes a LC_Auth message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LC_Auth
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LC_Auth;

    /**
     * Verifies a LC_Auth message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LC_Auth message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LC_Auth
     */
    public static fromObject(object: { [k: string]: any }): LC_Auth;

    /**
     * Creates a plain object from a LC_Auth message. Also converts values to other types if specified.
     * @param message LC_Auth
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LC_Auth, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LC_Auth to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace LC_Auth {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 998
    }
}

/** Properties of a C_RequestPublicKey. */
export interface IC_RequestPublicKey {
}

/** Represents a C_RequestPublicKey. */
export class C_RequestPublicKey implements IC_RequestPublicKey {

    /**
     * Constructs a new C_RequestPublicKey.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC_RequestPublicKey);

    /**
     * Creates a new C_RequestPublicKey instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C_RequestPublicKey instance
     */
    public static create(properties?: IC_RequestPublicKey): C_RequestPublicKey;

    /**
     * Encodes the specified C_RequestPublicKey message. Does not implicitly {@link C_RequestPublicKey.verify|verify} messages.
     * @param message C_RequestPublicKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC_RequestPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C_RequestPublicKey message, length delimited. Does not implicitly {@link C_RequestPublicKey.verify|verify} messages.
     * @param message C_RequestPublicKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC_RequestPublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C_RequestPublicKey message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C_RequestPublicKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C_RequestPublicKey;

    /**
     * Decodes a C_RequestPublicKey message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C_RequestPublicKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C_RequestPublicKey;

    /**
     * Verifies a C_RequestPublicKey message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C_RequestPublicKey message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C_RequestPublicKey
     */
    public static fromObject(object: { [k: string]: any }): C_RequestPublicKey;

    /**
     * Creates a plain object from a C_RequestPublicKey message. Also converts values to other types if specified.
     * @param message C_RequestPublicKey
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C_RequestPublicKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C_RequestPublicKey to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C_RequestPublicKey {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 999
    }
}

/** Properties of a C_PublicKey. */
export interface IC_PublicKey {

    /** C_PublicKey publicKey */
    publicKey?: (string|null);
}

/** Represents a C_PublicKey. */
export class C_PublicKey implements IC_PublicKey {

    /**
     * Constructs a new C_PublicKey.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC_PublicKey);

    /** C_PublicKey publicKey. */
    public publicKey: string;

    /**
     * Creates a new C_PublicKey instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C_PublicKey instance
     */
    public static create(properties?: IC_PublicKey): C_PublicKey;

    /**
     * Encodes the specified C_PublicKey message. Does not implicitly {@link C_PublicKey.verify|verify} messages.
     * @param message C_PublicKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC_PublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C_PublicKey message, length delimited. Does not implicitly {@link C_PublicKey.verify|verify} messages.
     * @param message C_PublicKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC_PublicKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C_PublicKey message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C_PublicKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C_PublicKey;

    /**
     * Decodes a C_PublicKey message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C_PublicKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C_PublicKey;

    /**
     * Verifies a C_PublicKey message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C_PublicKey message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C_PublicKey
     */
    public static fromObject(object: { [k: string]: any }): C_PublicKey;

    /**
     * Creates a plain object from a C_PublicKey message. Also converts values to other types if specified.
     * @param message C_PublicKey
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C_PublicKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C_PublicKey to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C_PublicKey {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1000
    }
}

/** Properties of a CL_RegAccount. */
export interface ICL_RegAccount {

    /** CL_RegAccount pbRegaccount */
    pbRegaccount?: (IRegAccount|null);
}

/** Represents a CL_RegAccount. */
export class CL_RegAccount implements ICL_RegAccount {

    /**
     * Constructs a new CL_RegAccount.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICL_RegAccount);

    /** CL_RegAccount pbRegaccount. */
    public pbRegaccount?: (IRegAccount|null);

    /**
     * Creates a new CL_RegAccount instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CL_RegAccount instance
     */
    public static create(properties?: ICL_RegAccount): CL_RegAccount;

    /**
     * Encodes the specified CL_RegAccount message. Does not implicitly {@link CL_RegAccount.verify|verify} messages.
     * @param message CL_RegAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICL_RegAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CL_RegAccount message, length delimited. Does not implicitly {@link CL_RegAccount.verify|verify} messages.
     * @param message CL_RegAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICL_RegAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CL_RegAccount message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CL_RegAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CL_RegAccount;

    /**
     * Decodes a CL_RegAccount message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CL_RegAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CL_RegAccount;

    /**
     * Verifies a CL_RegAccount message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CL_RegAccount message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CL_RegAccount
     */
    public static fromObject(object: { [k: string]: any }): CL_RegAccount;

    /**
     * Creates a plain object from a CL_RegAccount message. Also converts values to other types if specified.
     * @param message CL_RegAccount
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CL_RegAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CL_RegAccount to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CL_RegAccount {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1001
    }
}

/** Properties of a CL_Login. */
export interface ICL_Login {

    /** CL_Login account */
    account?: (string|null);

    /** CL_Login password */
    password?: (string|null);

    /** CL_Login phone */
    phone?: (string|null);

    /** CL_Login phoneType */
    phoneType?: (string|null);

    /** CL_Login imei */
    imei?: (string|null);

    /** CL_Login ip */
    ip?: (string|null);

    /** CL_Login version */
    version?: (string|null);

    /** CL_Login channelId */
    channelId?: (string|null);

    /** CL_Login packageName */
    packageName?: (string|null);

    /** CL_Login ipArea */
    ipArea?: (string|null);

    /** CL_Login platformId */
    platformId?: (string|null);

    /** CL_Login openId */
    openId?: (string|null);

    /** CL_Login smsVerifyNo */
    smsVerifyNo?: (string|null);
}

/** Represents a CL_Login. */
export class CL_Login implements ICL_Login {

    /**
     * Constructs a new CL_Login.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICL_Login);

    /** CL_Login account. */
    public account: string;

    /** CL_Login password. */
    public password: string;

    /** CL_Login phone. */
    public phone: string;

    /** CL_Login phoneType. */
    public phoneType: string;

    /** CL_Login imei. */
    public imei: string;

    /** CL_Login ip. */
    public ip: string;

    /** CL_Login version. */
    public version: string;

    /** CL_Login channelId. */
    public channelId: string;

    /** CL_Login packageName. */
    public packageName: string;

    /** CL_Login ipArea. */
    public ipArea: string;

    /** CL_Login platformId. */
    public platformId: string;

    /** CL_Login openId. */
    public openId: string;

    /** CL_Login smsVerifyNo. */
    public smsVerifyNo: string;

    /**
     * Creates a new CL_Login instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CL_Login instance
     */
    public static create(properties?: ICL_Login): CL_Login;

    /**
     * Encodes the specified CL_Login message. Does not implicitly {@link CL_Login.verify|verify} messages.
     * @param message CL_Login message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICL_Login, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CL_Login message, length delimited. Does not implicitly {@link CL_Login.verify|verify} messages.
     * @param message CL_Login message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICL_Login, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CL_Login message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CL_Login
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CL_Login;

    /**
     * Decodes a CL_Login message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CL_Login
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CL_Login;

    /**
     * Verifies a CL_Login message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CL_Login message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CL_Login
     */
    public static fromObject(object: { [k: string]: any }): CL_Login;

    /**
     * Creates a plain object from a CL_Login message. Also converts values to other types if specified.
     * @param message CL_Login
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CL_Login, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CL_Login to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CL_Login {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1002
    }
}

/** Properties of a LoginValidatebox. */
export interface ILoginValidatebox {

    /** LoginValidatebox question */
    question?: (number[]|null);

    /** LoginValidatebox answer */
    answer?: (number[]|null);
}

/** Represents a LoginValidatebox. */
export class LoginValidatebox implements ILoginValidatebox {

    /**
     * Constructs a new LoginValidatebox.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILoginValidatebox);

    /** LoginValidatebox question. */
    public question: number[];

    /** LoginValidatebox answer. */
    public answer: number[];

    /**
     * Creates a new LoginValidatebox instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LoginValidatebox instance
     */
    public static create(properties?: ILoginValidatebox): LoginValidatebox;

    /**
     * Encodes the specified LoginValidatebox message. Does not implicitly {@link LoginValidatebox.verify|verify} messages.
     * @param message LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LoginValidatebox message, length delimited. Does not implicitly {@link LoginValidatebox.verify|verify} messages.
     * @param message LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LoginValidatebox message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LoginValidatebox;

    /**
     * Decodes a LoginValidatebox message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LoginValidatebox;

    /**
     * Verifies a LoginValidatebox message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LoginValidatebox message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LoginValidatebox
     */
    public static fromObject(object: { [k: string]: any }): LoginValidatebox;

    /**
     * Creates a plain object from a LoginValidatebox message. Also converts values to other types if specified.
     * @param message LoginValidatebox
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LoginValidatebox, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LoginValidatebox to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LC_Login. */
export interface ILC_Login {

    /** LC_Login result */
    result?: (number|null);

    /** LC_Login guid */
    guid?: (number|null);

    /** LC_Login account */
    account?: (string|null);

    /** LC_Login gameId */
    gameId?: (number|null);

    /** LC_Login isGuest */
    isGuest?: (boolean|null);

    /** LC_Login password */
    password?: (string|null);

    /** LC_Login alipayAccount */
    alipayAccount?: (string|null);

    /** LC_Login alipayName */
    alipayName?: (string|null);

    /** LC_Login isValidatebox */
    isValidatebox?: (boolean|null);

    /** LC_Login pbValidatebox */
    pbValidatebox?: (ILoginValidatebox|null);

    /** LC_Login changeAlipayNum */
    changeAlipayNum?: (number|null);

    /** LC_Login ipArea */
    ipArea?: (string|null);

    /** LC_Login enableTransfer */
    enableTransfer?: (boolean|null);

    /** LC_Login isFirst */
    isFirst?: (number|null);

    /** LC_Login hasBankPassword */
    hasBankPassword?: (boolean|null);

    /** LC_Login imei */
    imei?: (string|null);

    /** LC_Login platformId */
    platformId?: (string|null);

    /** LC_Login bankCardName */
    bankCardName?: (string|null);

    /** LC_Login bankCardNum */
    bankCardNum?: (string|null);

    /** LC_Login changeBankcardNum */
    changeBankcardNum?: (number|null);

    /** LC_Login bankName */
    bankName?: (string|null);

    /** LC_Login ip */
    ip?: (string|null);

    /** LC_Login channelId */
    channelId?: (string|null);

    /** LC_Login openId */
    openId?: (string|null);

    /** LC_Login nickname */
    nickname?: (string|null);

    /** LC_Login phone */
    phone?: (string|null);

    /** LC_Login phoneType */
    phoneType?: (string|null);

    /** LC_Login smsNo */
    smsNo?: (string|null);

    /** LC_Login inviteCode */
    inviteCode?: (string|null);

    /** LC_Login inviteType */
    inviteType?: (number|null);

    /** LC_Login reconnect */
    reconnect?: (number|null);

    /** LC_Login psErrorCounts */
    psErrorCounts?: (number|null);
}

/** Represents a LC_Login. */
export class LC_Login implements ILC_Login {

    /**
     * Constructs a new LC_Login.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILC_Login);

    /** LC_Login result. */
    public result: number;

    /** LC_Login guid. */
    public guid: number;

    /** LC_Login account. */
    public account: string;

    /** LC_Login gameId. */
    public gameId: number;

    /** LC_Login isGuest. */
    public isGuest: boolean;

    /** LC_Login password. */
    public password: string;

    /** LC_Login alipayAccount. */
    public alipayAccount: string;

    /** LC_Login alipayName. */
    public alipayName: string;

    /** LC_Login isValidatebox. */
    public isValidatebox: boolean;

    /** LC_Login pbValidatebox. */
    public pbValidatebox?: (ILoginValidatebox|null);

    /** LC_Login changeAlipayNum. */
    public changeAlipayNum: number;

    /** LC_Login ipArea. */
    public ipArea: string;

    /** LC_Login enableTransfer. */
    public enableTransfer: boolean;

    /** LC_Login isFirst. */
    public isFirst: number;

    /** LC_Login hasBankPassword. */
    public hasBankPassword: boolean;

    /** LC_Login imei. */
    public imei: string;

    /** LC_Login platformId. */
    public platformId: string;

    /** LC_Login bankCardName. */
    public bankCardName: string;

    /** LC_Login bankCardNum. */
    public bankCardNum: string;

    /** LC_Login changeBankcardNum. */
    public changeBankcardNum: number;

    /** LC_Login bankName. */
    public bankName: string;

    /** LC_Login ip. */
    public ip: string;

    /** LC_Login channelId. */
    public channelId: string;

    /** LC_Login openId. */
    public openId: string;

    /** LC_Login nickname. */
    public nickname: string;

    /** LC_Login phone. */
    public phone: string;

    /** LC_Login phoneType. */
    public phoneType: string;

    /** LC_Login smsNo. */
    public smsNo: string;

    /** LC_Login inviteCode. */
    public inviteCode: string;

    /** LC_Login inviteType. */
    public inviteType: number;

    /** LC_Login reconnect. */
    public reconnect: number;

    /** LC_Login psErrorCounts. */
    public psErrorCounts: number;

    /**
     * Creates a new LC_Login instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LC_Login instance
     */
    public static create(properties?: ILC_Login): LC_Login;

    /**
     * Encodes the specified LC_Login message. Does not implicitly {@link LC_Login.verify|verify} messages.
     * @param message LC_Login message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILC_Login, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LC_Login message, length delimited. Does not implicitly {@link LC_Login.verify|verify} messages.
     * @param message LC_Login message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILC_Login, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LC_Login message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LC_Login
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LC_Login;

    /**
     * Decodes a LC_Login message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LC_Login
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LC_Login;

    /**
     * Verifies a LC_Login message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LC_Login message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LC_Login
     */
    public static fromObject(object: { [k: string]: any }): LC_Login;

    /**
     * Creates a plain object from a LC_Login message. Also converts values to other types if specified.
     * @param message LC_Login
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LC_Login, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LC_Login to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace LC_Login {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1003
    }
}

/** Properties of a CS_RequestSmsVerifyCode. */
export interface ICS_RequestSmsVerifyCode {

    /** CS_RequestSmsVerifyCode phoneNumber */
    phoneNumber?: (string|null);

    /** CS_RequestSmsVerifyCode guid */
    guid?: (number|null);

    /** CS_RequestSmsVerifyCode platformId */
    platformId?: (string|null);
}

/** Represents a CS_RequestSmsVerifyCode. */
export class CS_RequestSmsVerifyCode implements ICS_RequestSmsVerifyCode {

    /**
     * Constructs a new CS_RequestSmsVerifyCode.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RequestSmsVerifyCode);

    /** CS_RequestSmsVerifyCode phoneNumber. */
    public phoneNumber: string;

    /** CS_RequestSmsVerifyCode guid. */
    public guid: number;

    /** CS_RequestSmsVerifyCode platformId. */
    public platformId: string;

    /**
     * Creates a new CS_RequestSmsVerifyCode instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RequestSmsVerifyCode instance
     */
    public static create(properties?: ICS_RequestSmsVerifyCode): CS_RequestSmsVerifyCode;

    /**
     * Encodes the specified CS_RequestSmsVerifyCode message. Does not implicitly {@link CS_RequestSmsVerifyCode.verify|verify} messages.
     * @param message CS_RequestSmsVerifyCode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RequestSmsVerifyCode, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RequestSmsVerifyCode message, length delimited. Does not implicitly {@link CS_RequestSmsVerifyCode.verify|verify} messages.
     * @param message CS_RequestSmsVerifyCode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RequestSmsVerifyCode, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RequestSmsVerifyCode message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RequestSmsVerifyCode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RequestSmsVerifyCode;

    /**
     * Decodes a CS_RequestSmsVerifyCode message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RequestSmsVerifyCode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RequestSmsVerifyCode;

    /**
     * Verifies a CS_RequestSmsVerifyCode message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RequestSmsVerifyCode message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RequestSmsVerifyCode
     */
    public static fromObject(object: { [k: string]: any }): CS_RequestSmsVerifyCode;

    /**
     * Creates a plain object from a CS_RequestSmsVerifyCode message. Also converts values to other types if specified.
     * @param message CS_RequestSmsVerifyCode
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RequestSmsVerifyCode, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RequestSmsVerifyCode to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RequestSmsVerifyCode {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1005
    }
}

/** Properties of a SC_RequestSmsVerifyCode. */
export interface ISC_RequestSmsVerifyCode {

    /** SC_RequestSmsVerifyCode result */
    result?: (number|null);

    /** SC_RequestSmsVerifyCode smsNo */
    smsNo?: (string|null);

    /** SC_RequestSmsVerifyCode phoneNumber */
    phoneNumber?: (string|null);

    /** SC_RequestSmsVerifyCode timeout */
    timeout?: (number|null);
}

/** Represents a SC_RequestSmsVerifyCode. */
export class SC_RequestSmsVerifyCode implements ISC_RequestSmsVerifyCode {

    /**
     * Constructs a new SC_RequestSmsVerifyCode.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_RequestSmsVerifyCode);

    /** SC_RequestSmsVerifyCode result. */
    public result: number;

    /** SC_RequestSmsVerifyCode smsNo. */
    public smsNo: string;

    /** SC_RequestSmsVerifyCode phoneNumber. */
    public phoneNumber: string;

    /** SC_RequestSmsVerifyCode timeout. */
    public timeout: number;

    /**
     * Creates a new SC_RequestSmsVerifyCode instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_RequestSmsVerifyCode instance
     */
    public static create(properties?: ISC_RequestSmsVerifyCode): SC_RequestSmsVerifyCode;

    /**
     * Encodes the specified SC_RequestSmsVerifyCode message. Does not implicitly {@link SC_RequestSmsVerifyCode.verify|verify} messages.
     * @param message SC_RequestSmsVerifyCode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_RequestSmsVerifyCode, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_RequestSmsVerifyCode message, length delimited. Does not implicitly {@link SC_RequestSmsVerifyCode.verify|verify} messages.
     * @param message SC_RequestSmsVerifyCode message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_RequestSmsVerifyCode, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_RequestSmsVerifyCode message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_RequestSmsVerifyCode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_RequestSmsVerifyCode;

    /**
     * Decodes a SC_RequestSmsVerifyCode message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_RequestSmsVerifyCode
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_RequestSmsVerifyCode;

    /**
     * Verifies a SC_RequestSmsVerifyCode message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_RequestSmsVerifyCode message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_RequestSmsVerifyCode
     */
    public static fromObject(object: { [k: string]: any }): SC_RequestSmsVerifyCode;

    /**
     * Creates a plain object from a SC_RequestSmsVerifyCode message. Also converts values to other types if specified.
     * @param message SC_RequestSmsVerifyCode
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_RequestSmsVerifyCode, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_RequestSmsVerifyCode to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_RequestSmsVerifyCode {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1006
    }
}

/** Properties of a CS_ResetAccount. */
export interface ICS_ResetAccount {

    /** CS_ResetAccount account */
    account?: (string|null);

    /** CS_ResetAccount password */
    password?: (string|null);

    /** CS_ResetAccount nickname */
    nickname?: (string|null);

    /** CS_ResetAccount type */
    type?: (number|null);

    /** CS_ResetAccount key */
    key?: (string|null);
}

/** Represents a CS_ResetAccount. */
export class CS_ResetAccount implements ICS_ResetAccount {

    /**
     * Constructs a new CS_ResetAccount.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ResetAccount);

    /** CS_ResetAccount account. */
    public account: string;

    /** CS_ResetAccount password. */
    public password: string;

    /** CS_ResetAccount nickname. */
    public nickname: string;

    /** CS_ResetAccount type. */
    public type: number;

    /** CS_ResetAccount key. */
    public key: string;

    /**
     * Creates a new CS_ResetAccount instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ResetAccount instance
     */
    public static create(properties?: ICS_ResetAccount): CS_ResetAccount;

    /**
     * Encodes the specified CS_ResetAccount message. Does not implicitly {@link CS_ResetAccount.verify|verify} messages.
     * @param message CS_ResetAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ResetAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ResetAccount message, length delimited. Does not implicitly {@link CS_ResetAccount.verify|verify} messages.
     * @param message CS_ResetAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ResetAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ResetAccount message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ResetAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ResetAccount;

    /**
     * Decodes a CS_ResetAccount message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ResetAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ResetAccount;

    /**
     * Verifies a CS_ResetAccount message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ResetAccount message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ResetAccount
     */
    public static fromObject(object: { [k: string]: any }): CS_ResetAccount;

    /**
     * Creates a plain object from a CS_ResetAccount message. Also converts values to other types if specified.
     * @param message CS_ResetAccount
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ResetAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ResetAccount to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ResetAccount {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1007
    }
}

/** Properties of a SC_ResetAccount. */
export interface ISC_ResetAccount {

    /** SC_ResetAccount result */
    result?: (number|null);

    /** SC_ResetAccount account */
    account?: (string|null);

    /** SC_ResetAccount nickname */
    nickname?: (string|null);
}

/** Represents a SC_ResetAccount. */
export class SC_ResetAccount implements ISC_ResetAccount {

    /**
     * Constructs a new SC_ResetAccount.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ResetAccount);

    /** SC_ResetAccount result. */
    public result: number;

    /** SC_ResetAccount account. */
    public account: string;

    /** SC_ResetAccount nickname. */
    public nickname: string;

    /**
     * Creates a new SC_ResetAccount instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ResetAccount instance
     */
    public static create(properties?: ISC_ResetAccount): SC_ResetAccount;

    /**
     * Encodes the specified SC_ResetAccount message. Does not implicitly {@link SC_ResetAccount.verify|verify} messages.
     * @param message SC_ResetAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ResetAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ResetAccount message, length delimited. Does not implicitly {@link SC_ResetAccount.verify|verify} messages.
     * @param message SC_ResetAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ResetAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ResetAccount message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ResetAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ResetAccount;

    /**
     * Decodes a SC_ResetAccount message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ResetAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ResetAccount;

    /**
     * Verifies a SC_ResetAccount message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ResetAccount message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ResetAccount
     */
    public static fromObject(object: { [k: string]: any }): SC_ResetAccount;

    /**
     * Creates a plain object from a SC_ResetAccount message. Also converts values to other types if specified.
     * @param message SC_ResetAccount
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ResetAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ResetAccount to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ResetAccount {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1008
    }
}

/** Properties of a CS_SetPassword. */
export interface ICS_SetPassword {

    /** CS_SetPassword oldPassword */
    oldPassword?: (string|null);

    /** CS_SetPassword password */
    password?: (string|null);
}

/** Represents a CS_SetPassword. */
export class CS_SetPassword implements ICS_SetPassword {

    /**
     * Constructs a new CS_SetPassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SetPassword);

    /** CS_SetPassword oldPassword. */
    public oldPassword: string;

    /** CS_SetPassword password. */
    public password: string;

    /**
     * Creates a new CS_SetPassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SetPassword instance
     */
    public static create(properties?: ICS_SetPassword): CS_SetPassword;

    /**
     * Encodes the specified CS_SetPassword message. Does not implicitly {@link CS_SetPassword.verify|verify} messages.
     * @param message CS_SetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SetPassword message, length delimited. Does not implicitly {@link CS_SetPassword.verify|verify} messages.
     * @param message CS_SetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SetPassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SetPassword;

    /**
     * Decodes a CS_SetPassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SetPassword;

    /**
     * Verifies a CS_SetPassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SetPassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SetPassword
     */
    public static fromObject(object: { [k: string]: any }): CS_SetPassword;

    /**
     * Creates a plain object from a CS_SetPassword message. Also converts values to other types if specified.
     * @param message CS_SetPassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SetPassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SetPassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SetPassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1009
    }
}

/** Properties of a SC_SetPassword. */
export interface ISC_SetPassword {

    /** SC_SetPassword result */
    result?: (number|null);
}

/** Represents a SC_SetPassword. */
export class SC_SetPassword implements ISC_SetPassword {

    /**
     * Constructs a new SC_SetPassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SetPassword);

    /** SC_SetPassword result. */
    public result: number;

    /**
     * Creates a new SC_SetPassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SetPassword instance
     */
    public static create(properties?: ISC_SetPassword): SC_SetPassword;

    /**
     * Encodes the specified SC_SetPassword message. Does not implicitly {@link SC_SetPassword.verify|verify} messages.
     * @param message SC_SetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SetPassword message, length delimited. Does not implicitly {@link SC_SetPassword.verify|verify} messages.
     * @param message SC_SetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SetPassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SetPassword;

    /**
     * Decodes a SC_SetPassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SetPassword;

    /**
     * Verifies a SC_SetPassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SetPassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SetPassword
     */
    public static fromObject(object: { [k: string]: any }): SC_SetPassword;

    /**
     * Creates a plain object from a SC_SetPassword message. Also converts values to other types if specified.
     * @param message SC_SetPassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SetPassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SetPassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SetPassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1010
    }
}

/** Properties of a CS_SetPasswordBySms. */
export interface ICS_SetPasswordBySms {

    /** CS_SetPasswordBySms password */
    password?: (string|null);

    /** CS_SetPasswordBySms smsNo */
    smsNo?: (string|null);
}

/** Represents a CS_SetPasswordBySms. */
export class CS_SetPasswordBySms implements ICS_SetPasswordBySms {

    /**
     * Constructs a new CS_SetPasswordBySms.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SetPasswordBySms);

    /** CS_SetPasswordBySms password. */
    public password: string;

    /** CS_SetPasswordBySms smsNo. */
    public smsNo: string;

    /**
     * Creates a new CS_SetPasswordBySms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SetPasswordBySms instance
     */
    public static create(properties?: ICS_SetPasswordBySms): CS_SetPasswordBySms;

    /**
     * Encodes the specified CS_SetPasswordBySms message. Does not implicitly {@link CS_SetPasswordBySms.verify|verify} messages.
     * @param message CS_SetPasswordBySms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SetPasswordBySms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SetPasswordBySms message, length delimited. Does not implicitly {@link CS_SetPasswordBySms.verify|verify} messages.
     * @param message CS_SetPasswordBySms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SetPasswordBySms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SetPasswordBySms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SetPasswordBySms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SetPasswordBySms;

    /**
     * Decodes a CS_SetPasswordBySms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SetPasswordBySms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SetPasswordBySms;

    /**
     * Verifies a CS_SetPasswordBySms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SetPasswordBySms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SetPasswordBySms
     */
    public static fromObject(object: { [k: string]: any }): CS_SetPasswordBySms;

    /**
     * Creates a plain object from a CS_SetPasswordBySms message. Also converts values to other types if specified.
     * @param message CS_SetPasswordBySms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SetPasswordBySms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SetPasswordBySms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SetPasswordBySms {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1011
    }
}

/** Properties of a CS_SetNickname. */
export interface ICS_SetNickname {

    /** CS_SetNickname nickname */
    nickname?: (string|null);
}

/** Represents a CS_SetNickname. */
export class CS_SetNickname implements ICS_SetNickname {

    /**
     * Constructs a new CS_SetNickname.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SetNickname);

    /** CS_SetNickname nickname. */
    public nickname: string;

    /**
     * Creates a new CS_SetNickname instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SetNickname instance
     */
    public static create(properties?: ICS_SetNickname): CS_SetNickname;

    /**
     * Encodes the specified CS_SetNickname message. Does not implicitly {@link CS_SetNickname.verify|verify} messages.
     * @param message CS_SetNickname message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SetNickname, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SetNickname message, length delimited. Does not implicitly {@link CS_SetNickname.verify|verify} messages.
     * @param message CS_SetNickname message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SetNickname, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SetNickname message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SetNickname
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SetNickname;

    /**
     * Decodes a CS_SetNickname message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SetNickname
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SetNickname;

    /**
     * Verifies a CS_SetNickname message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SetNickname message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SetNickname
     */
    public static fromObject(object: { [k: string]: any }): CS_SetNickname;

    /**
     * Creates a plain object from a CS_SetNickname message. Also converts values to other types if specified.
     * @param message CS_SetNickname
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SetNickname, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SetNickname to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SetNickname {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1012
    }
}

/** Properties of a SC_SetNickname. */
export interface ISC_SetNickname {

    /** SC_SetNickname nickname */
    nickname?: (string|null);

    /** SC_SetNickname result */
    result?: (number|null);
}

/** Represents a SC_SetNickname. */
export class SC_SetNickname implements ISC_SetNickname {

    /**
     * Constructs a new SC_SetNickname.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SetNickname);

    /** SC_SetNickname nickname. */
    public nickname: string;

    /** SC_SetNickname result. */
    public result: number;

    /**
     * Creates a new SC_SetNickname instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SetNickname instance
     */
    public static create(properties?: ISC_SetNickname): SC_SetNickname;

    /**
     * Encodes the specified SC_SetNickname message. Does not implicitly {@link SC_SetNickname.verify|verify} messages.
     * @param message SC_SetNickname message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SetNickname, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SetNickname message, length delimited. Does not implicitly {@link SC_SetNickname.verify|verify} messages.
     * @param message SC_SetNickname message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SetNickname, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SetNickname message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SetNickname
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SetNickname;

    /**
     * Decodes a SC_SetNickname message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SetNickname
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SetNickname;

    /**
     * Verifies a SC_SetNickname message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SetNickname message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SetNickname
     */
    public static fromObject(object: { [k: string]: any }): SC_SetNickname;

    /**
     * Creates a plain object from a SC_SetNickname message. Also converts values to other types if specified.
     * @param message SC_SetNickname
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SetNickname, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SetNickname to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SetNickname {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1013
    }
}

/** Properties of a CS_ChangeHeaderIcon. */
export interface ICS_ChangeHeaderIcon {

    /** CS_ChangeHeaderIcon headerIcon */
    headerIcon?: (string|null);
}

/** Represents a CS_ChangeHeaderIcon. */
export class CS_ChangeHeaderIcon implements ICS_ChangeHeaderIcon {

    /**
     * Constructs a new CS_ChangeHeaderIcon.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChangeHeaderIcon);

    /** CS_ChangeHeaderIcon headerIcon. */
    public headerIcon: string;

    /**
     * Creates a new CS_ChangeHeaderIcon instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChangeHeaderIcon instance
     */
    public static create(properties?: ICS_ChangeHeaderIcon): CS_ChangeHeaderIcon;

    /**
     * Encodes the specified CS_ChangeHeaderIcon message. Does not implicitly {@link CS_ChangeHeaderIcon.verify|verify} messages.
     * @param message CS_ChangeHeaderIcon message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChangeHeaderIcon, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChangeHeaderIcon message, length delimited. Does not implicitly {@link CS_ChangeHeaderIcon.verify|verify} messages.
     * @param message CS_ChangeHeaderIcon message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChangeHeaderIcon, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChangeHeaderIcon message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChangeHeaderIcon
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChangeHeaderIcon;

    /**
     * Decodes a CS_ChangeHeaderIcon message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChangeHeaderIcon
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChangeHeaderIcon;

    /**
     * Verifies a CS_ChangeHeaderIcon message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChangeHeaderIcon message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChangeHeaderIcon
     */
    public static fromObject(object: { [k: string]: any }): CS_ChangeHeaderIcon;

    /**
     * Creates a plain object from a CS_ChangeHeaderIcon message. Also converts values to other types if specified.
     * @param message CS_ChangeHeaderIcon
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChangeHeaderIcon, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChangeHeaderIcon to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChangeHeaderIcon {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1014
    }
}

/** Properties of a SC_ChangeHeaderIcon. */
export interface ISC_ChangeHeaderIcon {

    /** SC_ChangeHeaderIcon headerIcon */
    headerIcon?: (string|null);
}

/** Represents a SC_ChangeHeaderIcon. */
export class SC_ChangeHeaderIcon implements ISC_ChangeHeaderIcon {

    /**
     * Constructs a new SC_ChangeHeaderIcon.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChangeHeaderIcon);

    /** SC_ChangeHeaderIcon headerIcon. */
    public headerIcon: string;

    /**
     * Creates a new SC_ChangeHeaderIcon instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChangeHeaderIcon instance
     */
    public static create(properties?: ISC_ChangeHeaderIcon): SC_ChangeHeaderIcon;

    /**
     * Encodes the specified SC_ChangeHeaderIcon message. Does not implicitly {@link SC_ChangeHeaderIcon.verify|verify} messages.
     * @param message SC_ChangeHeaderIcon message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChangeHeaderIcon, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChangeHeaderIcon message, length delimited. Does not implicitly {@link SC_ChangeHeaderIcon.verify|verify} messages.
     * @param message SC_ChangeHeaderIcon message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChangeHeaderIcon, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChangeHeaderIcon message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChangeHeaderIcon
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChangeHeaderIcon;

    /**
     * Decodes a SC_ChangeHeaderIcon message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChangeHeaderIcon
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChangeHeaderIcon;

    /**
     * Verifies a SC_ChangeHeaderIcon message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChangeHeaderIcon message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChangeHeaderIcon
     */
    public static fromObject(object: { [k: string]: any }): SC_ChangeHeaderIcon;

    /**
     * Creates a plain object from a SC_ChangeHeaderIcon message. Also converts values to other types if specified.
     * @param message SC_ChangeHeaderIcon
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChangeHeaderIcon, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChangeHeaderIcon to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChangeHeaderIcon {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1015
    }
}

/** Properties of an InviterInfo. */
export interface IInviterInfo {

    /** InviterInfo guid */
    guid?: (number|null);

    /** InviterInfo account */
    account?: (string|null);

    /** InviterInfo alipayNameY */
    alipayNameY?: (string|null);

    /** InviterInfo alipayAccountY */
    alipayAccountY?: (string|null);
}

/** Represents an InviterInfo. */
export class InviterInfo implements IInviterInfo {

    /**
     * Constructs a new InviterInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInviterInfo);

    /** InviterInfo guid. */
    public guid: number;

    /** InviterInfo account. */
    public account: string;

    /** InviterInfo alipayNameY. */
    public alipayNameY: string;

    /** InviterInfo alipayAccountY. */
    public alipayAccountY: string;

    /**
     * Creates a new InviterInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InviterInfo instance
     */
    public static create(properties?: IInviterInfo): InviterInfo;

    /**
     * Encodes the specified InviterInfo message. Does not implicitly {@link InviterInfo.verify|verify} messages.
     * @param message InviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InviterInfo message, length delimited. Does not implicitly {@link InviterInfo.verify|verify} messages.
     * @param message InviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InviterInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InviterInfo;

    /**
     * Decodes an InviterInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InviterInfo;

    /**
     * Verifies an InviterInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InviterInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InviterInfo
     */
    public static fromObject(object: { [k: string]: any }): InviterInfo;

    /**
     * Creates a plain object from an InviterInfo message. Also converts values to other types if specified.
     * @param message InviterInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InviterInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InviterInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CL_GetInviterInfo. */
export interface ICL_GetInviterInfo {

    /** CL_GetInviterInfo inviteCode */
    inviteCode?: (string|null);

    /** CL_GetInviterInfo gateSessionId */
    gateSessionId?: (number|null);

    /** CL_GetInviterInfo gateId */
    gateId?: (number|null);

    /** CL_GetInviterInfo guid */
    guid?: (number|null);
}

/** Represents a CL_GetInviterInfo. */
export class CL_GetInviterInfo implements ICL_GetInviterInfo {

    /**
     * Constructs a new CL_GetInviterInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICL_GetInviterInfo);

    /** CL_GetInviterInfo inviteCode. */
    public inviteCode: string;

    /** CL_GetInviterInfo gateSessionId. */
    public gateSessionId: number;

    /** CL_GetInviterInfo gateId. */
    public gateId: number;

    /** CL_GetInviterInfo guid. */
    public guid: number;

    /**
     * Creates a new CL_GetInviterInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CL_GetInviterInfo instance
     */
    public static create(properties?: ICL_GetInviterInfo): CL_GetInviterInfo;

    /**
     * Encodes the specified CL_GetInviterInfo message. Does not implicitly {@link CL_GetInviterInfo.verify|verify} messages.
     * @param message CL_GetInviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICL_GetInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CL_GetInviterInfo message, length delimited. Does not implicitly {@link CL_GetInviterInfo.verify|verify} messages.
     * @param message CL_GetInviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICL_GetInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CL_GetInviterInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CL_GetInviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CL_GetInviterInfo;

    /**
     * Decodes a CL_GetInviterInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CL_GetInviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CL_GetInviterInfo;

    /**
     * Verifies a CL_GetInviterInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CL_GetInviterInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CL_GetInviterInfo
     */
    public static fromObject(object: { [k: string]: any }): CL_GetInviterInfo;

    /**
     * Creates a plain object from a CL_GetInviterInfo message. Also converts values to other types if specified.
     * @param message CL_GetInviterInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CL_GetInviterInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CL_GetInviterInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CL_GetInviterInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1016
    }
}

/** Properties of a LC_GetInviterInfo. */
export interface ILC_GetInviterInfo {

    /** LC_GetInviterInfo guid */
    guid?: (number|null);

    /** LC_GetInviterInfo account */
    account?: (string|null);

    /** LC_GetInviterInfo alipayAccount */
    alipayAccount?: (string|null);

    /** LC_GetInviterInfo alipayName */
    alipayName?: (string|null);

    /** LC_GetInviterInfo gateSessionId */
    gateSessionId?: (number|null);

    /** LC_GetInviterInfo gateId */
    gateId?: (number|null);

    /** LC_GetInviterInfo guidSelf */
    guidSelf?: (number|null);
}

/** Represents a LC_GetInviterInfo. */
export class LC_GetInviterInfo implements ILC_GetInviterInfo {

    /**
     * Constructs a new LC_GetInviterInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILC_GetInviterInfo);

    /** LC_GetInviterInfo guid. */
    public guid: number;

    /** LC_GetInviterInfo account. */
    public account: string;

    /** LC_GetInviterInfo alipayAccount. */
    public alipayAccount: string;

    /** LC_GetInviterInfo alipayName. */
    public alipayName: string;

    /** LC_GetInviterInfo gateSessionId. */
    public gateSessionId: number;

    /** LC_GetInviterInfo gateId. */
    public gateId: number;

    /** LC_GetInviterInfo guidSelf. */
    public guidSelf: number;

    /**
     * Creates a new LC_GetInviterInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LC_GetInviterInfo instance
     */
    public static create(properties?: ILC_GetInviterInfo): LC_GetInviterInfo;

    /**
     * Encodes the specified LC_GetInviterInfo message. Does not implicitly {@link LC_GetInviterInfo.verify|verify} messages.
     * @param message LC_GetInviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILC_GetInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LC_GetInviterInfo message, length delimited. Does not implicitly {@link LC_GetInviterInfo.verify|verify} messages.
     * @param message LC_GetInviterInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILC_GetInviterInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LC_GetInviterInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LC_GetInviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LC_GetInviterInfo;

    /**
     * Decodes a LC_GetInviterInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LC_GetInviterInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LC_GetInviterInfo;

    /**
     * Verifies a LC_GetInviterInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LC_GetInviterInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LC_GetInviterInfo
     */
    public static fromObject(object: { [k: string]: any }): LC_GetInviterInfo;

    /**
     * Creates a plain object from a LC_GetInviterInfo message. Also converts values to other types if specified.
     * @param message LC_GetInviterInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LC_GetInviterInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LC_GetInviterInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace LC_GetInviterInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1017
    }
}

/** Properties of a CS_RequestPlayerInfo. */
export interface ICS_RequestPlayerInfo {
}

/** Represents a CS_RequestPlayerInfo. */
export class CS_RequestPlayerInfo implements ICS_RequestPlayerInfo {

    /**
     * Constructs a new CS_RequestPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RequestPlayerInfo);

    /**
     * Creates a new CS_RequestPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RequestPlayerInfo instance
     */
    public static create(properties?: ICS_RequestPlayerInfo): CS_RequestPlayerInfo;

    /**
     * Encodes the specified CS_RequestPlayerInfo message. Does not implicitly {@link CS_RequestPlayerInfo.verify|verify} messages.
     * @param message CS_RequestPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RequestPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RequestPlayerInfo message, length delimited. Does not implicitly {@link CS_RequestPlayerInfo.verify|verify} messages.
     * @param message CS_RequestPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RequestPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RequestPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RequestPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RequestPlayerInfo;

    /**
     * Decodes a CS_RequestPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RequestPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RequestPlayerInfo;

    /**
     * Verifies a CS_RequestPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RequestPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RequestPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): CS_RequestPlayerInfo;

    /**
     * Creates a plain object from a CS_RequestPlayerInfo message. Also converts values to other types if specified.
     * @param message CS_RequestPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RequestPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RequestPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RequestPlayerInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1018
    }
}

/** Properties of a SC_ReplyPlayerInfo. */
export interface ISC_ReplyPlayerInfo {

    /** SC_ReplyPlayerInfo guid */
    guid?: (number|null);

    /** SC_ReplyPlayerInfo pbBaseInfo */
    pbBaseInfo?: (IPlayerBaseInfo|null);
}

/** Represents a SC_ReplyPlayerInfo. */
export class SC_ReplyPlayerInfo implements ISC_ReplyPlayerInfo {

    /**
     * Constructs a new SC_ReplyPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyPlayerInfo);

    /** SC_ReplyPlayerInfo guid. */
    public guid: number;

    /** SC_ReplyPlayerInfo pbBaseInfo. */
    public pbBaseInfo?: (IPlayerBaseInfo|null);

    /**
     * Creates a new SC_ReplyPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyPlayerInfo instance
     */
    public static create(properties?: ISC_ReplyPlayerInfo): SC_ReplyPlayerInfo;

    /**
     * Encodes the specified SC_ReplyPlayerInfo message. Does not implicitly {@link SC_ReplyPlayerInfo.verify|verify} messages.
     * @param message SC_ReplyPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyPlayerInfo message, length delimited. Does not implicitly {@link SC_ReplyPlayerInfo.verify|verify} messages.
     * @param message SC_ReplyPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyPlayerInfo;

    /**
     * Decodes a SC_ReplyPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyPlayerInfo;

    /**
     * Verifies a SC_ReplyPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyPlayerInfo;

    /**
     * Creates a plain object from a SC_ReplyPlayerInfo message. Also converts values to other types if specified.
     * @param message SC_ReplyPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyPlayerInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1019
    }
}

/** Properties of a GameMsg. */
export interface IGameMsg {

    /** GameMsg firstGameType */
    firstGameType?: (number|null);

    /** GameMsg secondGameType */
    secondGameType?: (number|null);

    /** GameMsg roomId */
    roomId?: (number|null);

    /** GameMsg tableId */
    tableId?: (number|null);

    /** GameMsg chairId */
    chairId?: (number|null);
}

/** Represents a GameMsg. */
export class GameMsg implements IGameMsg {

    /**
     * Constructs a new GameMsg.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGameMsg);

    /** GameMsg firstGameType. */
    public firstGameType: number;

    /** GameMsg secondGameType. */
    public secondGameType: number;

    /** GameMsg roomId. */
    public roomId: number;

    /** GameMsg tableId. */
    public tableId: number;

    /** GameMsg chairId. */
    public chairId: number;

    /**
     * Creates a new GameMsg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GameMsg instance
     */
    public static create(properties?: IGameMsg): GameMsg;

    /**
     * Encodes the specified GameMsg message. Does not implicitly {@link GameMsg.verify|verify} messages.
     * @param message GameMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGameMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GameMsg message, length delimited. Does not implicitly {@link GameMsg.verify|verify} messages.
     * @param message GameMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGameMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GameMsg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GameMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GameMsg;

    /**
     * Decodes a GameMsg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GameMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GameMsg;

    /**
     * Verifies a GameMsg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GameMsg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GameMsg
     */
    public static fromObject(object: { [k: string]: any }): GameMsg;

    /**
     * Creates a plain object from a GameMsg message. Also converts values to other types if specified.
     * @param message GameMsg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GameMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GameMsg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_ReplyPlayerInfoComplete. */
export interface ISC_ReplyPlayerInfoComplete {

    /** SC_ReplyPlayerInfoComplete pbGmMessage */
    pbGmMessage?: (IGameMsg|null);
}

/** Represents a SC_ReplyPlayerInfoComplete. */
export class SC_ReplyPlayerInfoComplete implements ISC_ReplyPlayerInfoComplete {

    /**
     * Constructs a new SC_ReplyPlayerInfoComplete.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyPlayerInfoComplete);

    /** SC_ReplyPlayerInfoComplete pbGmMessage. */
    public pbGmMessage?: (IGameMsg|null);

    /**
     * Creates a new SC_ReplyPlayerInfoComplete instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyPlayerInfoComplete instance
     */
    public static create(properties?: ISC_ReplyPlayerInfoComplete): SC_ReplyPlayerInfoComplete;

    /**
     * Encodes the specified SC_ReplyPlayerInfoComplete message. Does not implicitly {@link SC_ReplyPlayerInfoComplete.verify|verify} messages.
     * @param message SC_ReplyPlayerInfoComplete message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyPlayerInfoComplete, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyPlayerInfoComplete message, length delimited. Does not implicitly {@link SC_ReplyPlayerInfoComplete.verify|verify} messages.
     * @param message SC_ReplyPlayerInfoComplete message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyPlayerInfoComplete, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyPlayerInfoComplete message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyPlayerInfoComplete
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyPlayerInfoComplete;

    /**
     * Decodes a SC_ReplyPlayerInfoComplete message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyPlayerInfoComplete
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyPlayerInfoComplete;

    /**
     * Verifies a SC_ReplyPlayerInfoComplete message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyPlayerInfoComplete message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyPlayerInfoComplete
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyPlayerInfoComplete;

    /**
     * Creates a plain object from a SC_ReplyPlayerInfoComplete message. Also converts values to other types if specified.
     * @param message SC_ReplyPlayerInfoComplete
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyPlayerInfoComplete, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyPlayerInfoComplete to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyPlayerInfoComplete {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1020
    }
}

/** Properties of a CS_LoginValidatebox. */
export interface ICS_LoginValidatebox {

    /** CS_LoginValidatebox answer */
    answer?: (number[]|null);
}

/** Represents a CS_LoginValidatebox. */
export class CS_LoginValidatebox implements ICS_LoginValidatebox {

    /**
     * Constructs a new CS_LoginValidatebox.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_LoginValidatebox);

    /** CS_LoginValidatebox answer. */
    public answer: number[];

    /**
     * Creates a new CS_LoginValidatebox instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_LoginValidatebox instance
     */
    public static create(properties?: ICS_LoginValidatebox): CS_LoginValidatebox;

    /**
     * Encodes the specified CS_LoginValidatebox message. Does not implicitly {@link CS_LoginValidatebox.verify|verify} messages.
     * @param message CS_LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_LoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_LoginValidatebox message, length delimited. Does not implicitly {@link CS_LoginValidatebox.verify|verify} messages.
     * @param message CS_LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_LoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_LoginValidatebox message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_LoginValidatebox;

    /**
     * Decodes a CS_LoginValidatebox message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_LoginValidatebox;

    /**
     * Verifies a CS_LoginValidatebox message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_LoginValidatebox message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_LoginValidatebox
     */
    public static fromObject(object: { [k: string]: any }): CS_LoginValidatebox;

    /**
     * Creates a plain object from a CS_LoginValidatebox message. Also converts values to other types if specified.
     * @param message CS_LoginValidatebox
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_LoginValidatebox, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_LoginValidatebox to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_LoginValidatebox {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1021
    }
}

/** Properties of a SC_LoginValidatebox. */
export interface ISC_LoginValidatebox {

    /** SC_LoginValidatebox result */
    result?: (number|null);

    /** SC_LoginValidatebox pbValidatebox */
    pbValidatebox?: (ILoginValidatebox|null);
}

/** Represents a SC_LoginValidatebox. */
export class SC_LoginValidatebox implements ISC_LoginValidatebox {

    /**
     * Constructs a new SC_LoginValidatebox.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_LoginValidatebox);

    /** SC_LoginValidatebox result. */
    public result: number;

    /** SC_LoginValidatebox pbValidatebox. */
    public pbValidatebox?: (ILoginValidatebox|null);

    /**
     * Creates a new SC_LoginValidatebox instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_LoginValidatebox instance
     */
    public static create(properties?: ISC_LoginValidatebox): SC_LoginValidatebox;

    /**
     * Encodes the specified SC_LoginValidatebox message. Does not implicitly {@link SC_LoginValidatebox.verify|verify} messages.
     * @param message SC_LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_LoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_LoginValidatebox message, length delimited. Does not implicitly {@link SC_LoginValidatebox.verify|verify} messages.
     * @param message SC_LoginValidatebox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_LoginValidatebox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_LoginValidatebox message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_LoginValidatebox;

    /**
     * Decodes a SC_LoginValidatebox message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_LoginValidatebox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_LoginValidatebox;

    /**
     * Verifies a SC_LoginValidatebox message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_LoginValidatebox message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_LoginValidatebox
     */
    public static fromObject(object: { [k: string]: any }): SC_LoginValidatebox;

    /**
     * Creates a plain object from a SC_LoginValidatebox message. Also converts values to other types if specified.
     * @param message SC_LoginValidatebox
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_LoginValidatebox, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_LoginValidatebox to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_LoginValidatebox {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1022
    }
}

/** Properties of a CS_ChangeGame. */
export interface ICS_ChangeGame {

    /** CS_ChangeGame firstGameType */
    firstGameType?: (number|null);

    /** CS_ChangeGame secondGameType */
    secondGameType?: (number|null);

    /** CS_ChangeGame privateRoomOpt */
    privateRoomOpt?: (number|null);

    /** CS_ChangeGame ownerGuid */
    ownerGuid?: (number|null);

    /** CS_ChangeGame tableId */
    tableId?: (number|null);

    /** CS_ChangeGame privateRoomChairCount */
    privateRoomChairCount?: (number|null);

    /** CS_ChangeGame privateRoomScoreType */
    privateRoomScoreType?: (number|null);
}

/** Represents a CS_ChangeGame. */
export class CS_ChangeGame implements ICS_ChangeGame {

    /**
     * Constructs a new CS_ChangeGame.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChangeGame);

    /** CS_ChangeGame firstGameType. */
    public firstGameType: number;

    /** CS_ChangeGame secondGameType. */
    public secondGameType: number;

    /** CS_ChangeGame privateRoomOpt. */
    public privateRoomOpt: number;

    /** CS_ChangeGame ownerGuid. */
    public ownerGuid: number;

    /** CS_ChangeGame tableId. */
    public tableId: number;

    /** CS_ChangeGame privateRoomChairCount. */
    public privateRoomChairCount: number;

    /** CS_ChangeGame privateRoomScoreType. */
    public privateRoomScoreType: number;

    /**
     * Creates a new CS_ChangeGame instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChangeGame instance
     */
    public static create(properties?: ICS_ChangeGame): CS_ChangeGame;

    /**
     * Encodes the specified CS_ChangeGame message. Does not implicitly {@link CS_ChangeGame.verify|verify} messages.
     * @param message CS_ChangeGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChangeGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChangeGame message, length delimited. Does not implicitly {@link CS_ChangeGame.verify|verify} messages.
     * @param message CS_ChangeGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChangeGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChangeGame message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChangeGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChangeGame;

    /**
     * Decodes a CS_ChangeGame message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChangeGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChangeGame;

    /**
     * Verifies a CS_ChangeGame message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChangeGame message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChangeGame
     */
    public static fromObject(object: { [k: string]: any }): CS_ChangeGame;

    /**
     * Creates a plain object from a CS_ChangeGame message. Also converts values to other types if specified.
     * @param message CS_ChangeGame
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChangeGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChangeGame to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChangeGame {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1023
    }
}

/** Properties of a PrivateRoomInfo. */
export interface IPrivateRoomInfo {

    /** PrivateRoomInfo gameType */
    gameType?: (number|null);

    /** PrivateRoomInfo owner */
    owner?: (number|null);

    /** PrivateRoomInfo clubId */
    clubId?: (number|null);

    /** PrivateRoomInfo tableId */
    tableId?: (number|null);

    /** PrivateRoomInfo club */
    club?: (string|null);
}

/** Represents a PrivateRoomInfo. */
export class PrivateRoomInfo implements IPrivateRoomInfo {

    /**
     * Constructs a new PrivateRoomInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPrivateRoomInfo);

    /** PrivateRoomInfo gameType. */
    public gameType: number;

    /** PrivateRoomInfo owner. */
    public owner: number;

    /** PrivateRoomInfo clubId. */
    public clubId: number;

    /** PrivateRoomInfo tableId. */
    public tableId: number;

    /** PrivateRoomInfo club. */
    public club: string;

    /**
     * Creates a new PrivateRoomInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PrivateRoomInfo instance
     */
    public static create(properties?: IPrivateRoomInfo): PrivateRoomInfo;

    /**
     * Encodes the specified PrivateRoomInfo message. Does not implicitly {@link PrivateRoomInfo.verify|verify} messages.
     * @param message PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PrivateRoomInfo message, length delimited. Does not implicitly {@link PrivateRoomInfo.verify|verify} messages.
     * @param message PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PrivateRoomInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PrivateRoomInfo;

    /**
     * Decodes a PrivateRoomInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PrivateRoomInfo;

    /**
     * Verifies a PrivateRoomInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PrivateRoomInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PrivateRoomInfo
     */
    public static fromObject(object: { [k: string]: any }): PrivateRoomInfo;

    /**
     * Creates a plain object from a PrivateRoomInfo message. Also converts values to other types if specified.
     * @param message PrivateRoomInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PrivateRoomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PrivateRoomInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CS_JoinPrivateRoom. */
export interface ICS_JoinPrivateRoom {

    /** CS_JoinPrivateRoom tableId */
    tableId?: (number|null);
}

/** Represents a CS_JoinPrivateRoom. */
export class CS_JoinPrivateRoom implements ICS_JoinPrivateRoom {

    /**
     * Constructs a new CS_JoinPrivateRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_JoinPrivateRoom);

    /** CS_JoinPrivateRoom tableId. */
    public tableId: number;

    /**
     * Creates a new CS_JoinPrivateRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_JoinPrivateRoom instance
     */
    public static create(properties?: ICS_JoinPrivateRoom): CS_JoinPrivateRoom;

    /**
     * Encodes the specified CS_JoinPrivateRoom message. Does not implicitly {@link CS_JoinPrivateRoom.verify|verify} messages.
     * @param message CS_JoinPrivateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_JoinPrivateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_JoinPrivateRoom message, length delimited. Does not implicitly {@link CS_JoinPrivateRoom.verify|verify} messages.
     * @param message CS_JoinPrivateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_JoinPrivateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_JoinPrivateRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_JoinPrivateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_JoinPrivateRoom;

    /**
     * Decodes a CS_JoinPrivateRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_JoinPrivateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_JoinPrivateRoom;

    /**
     * Verifies a CS_JoinPrivateRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_JoinPrivateRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_JoinPrivateRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_JoinPrivateRoom;

    /**
     * Creates a plain object from a CS_JoinPrivateRoom message. Also converts values to other types if specified.
     * @param message CS_JoinPrivateRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_JoinPrivateRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_JoinPrivateRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_JoinPrivateRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1024
    }
}

/** Properties of a SC_JoinPrivateRoom. */
export interface ISC_JoinPrivateRoom {

    /** SC_JoinPrivateRoom result */
    result?: (number|null);

    /** SC_JoinPrivateRoom info */
    info?: (IPrivateRoomInfo|null);
}

/** Represents a SC_JoinPrivateRoom. */
export class SC_JoinPrivateRoom implements ISC_JoinPrivateRoom {

    /**
     * Constructs a new SC_JoinPrivateRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_JoinPrivateRoom);

    /** SC_JoinPrivateRoom result. */
    public result: number;

    /** SC_JoinPrivateRoom info. */
    public info?: (IPrivateRoomInfo|null);

    /**
     * Creates a new SC_JoinPrivateRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_JoinPrivateRoom instance
     */
    public static create(properties?: ISC_JoinPrivateRoom): SC_JoinPrivateRoom;

    /**
     * Encodes the specified SC_JoinPrivateRoom message. Does not implicitly {@link SC_JoinPrivateRoom.verify|verify} messages.
     * @param message SC_JoinPrivateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_JoinPrivateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_JoinPrivateRoom message, length delimited. Does not implicitly {@link SC_JoinPrivateRoom.verify|verify} messages.
     * @param message SC_JoinPrivateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_JoinPrivateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_JoinPrivateRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_JoinPrivateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_JoinPrivateRoom;

    /**
     * Decodes a SC_JoinPrivateRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_JoinPrivateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_JoinPrivateRoom;

    /**
     * Verifies a SC_JoinPrivateRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_JoinPrivateRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_JoinPrivateRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_JoinPrivateRoom;

    /**
     * Creates a plain object from a SC_JoinPrivateRoom message. Also converts values to other types if specified.
     * @param message SC_JoinPrivateRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_JoinPrivateRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_JoinPrivateRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_JoinPrivateRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1025
    }
}

/** Properties of a CS_PrivateRoomInfo. */
export interface ICS_PrivateRoomInfo {
}

/** Represents a CS_PrivateRoomInfo. */
export class CS_PrivateRoomInfo implements ICS_PrivateRoomInfo {

    /**
     * Constructs a new CS_PrivateRoomInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PrivateRoomInfo);

    /**
     * Creates a new CS_PrivateRoomInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PrivateRoomInfo instance
     */
    public static create(properties?: ICS_PrivateRoomInfo): CS_PrivateRoomInfo;

    /**
     * Encodes the specified CS_PrivateRoomInfo message. Does not implicitly {@link CS_PrivateRoomInfo.verify|verify} messages.
     * @param message CS_PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PrivateRoomInfo message, length delimited. Does not implicitly {@link CS_PrivateRoomInfo.verify|verify} messages.
     * @param message CS_PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PrivateRoomInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PrivateRoomInfo;

    /**
     * Decodes a CS_PrivateRoomInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PrivateRoomInfo;

    /**
     * Verifies a CS_PrivateRoomInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PrivateRoomInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PrivateRoomInfo
     */
    public static fromObject(object: { [k: string]: any }): CS_PrivateRoomInfo;

    /**
     * Creates a plain object from a CS_PrivateRoomInfo message. Also converts values to other types if specified.
     * @param message CS_PrivateRoomInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PrivateRoomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PrivateRoomInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PrivateRoomInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1026
    }
}

/** Properties of a SC_PrivateRoomInfo. */
export interface ISC_PrivateRoomInfo {

    /** SC_PrivateRoomInfo pbInfo */
    pbInfo?: (IPrivateRoomInfo|null);
}

/** Represents a SC_PrivateRoomInfo. */
export class SC_PrivateRoomInfo implements ISC_PrivateRoomInfo {

    /**
     * Constructs a new SC_PrivateRoomInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PrivateRoomInfo);

    /** SC_PrivateRoomInfo pbInfo. */
    public pbInfo?: (IPrivateRoomInfo|null);

    /**
     * Creates a new SC_PrivateRoomInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PrivateRoomInfo instance
     */
    public static create(properties?: ISC_PrivateRoomInfo): SC_PrivateRoomInfo;

    /**
     * Encodes the specified SC_PrivateRoomInfo message. Does not implicitly {@link SC_PrivateRoomInfo.verify|verify} messages.
     * @param message SC_PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PrivateRoomInfo message, length delimited. Does not implicitly {@link SC_PrivateRoomInfo.verify|verify} messages.
     * @param message SC_PrivateRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PrivateRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PrivateRoomInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PrivateRoomInfo;

    /**
     * Decodes a SC_PrivateRoomInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PrivateRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PrivateRoomInfo;

    /**
     * Verifies a SC_PrivateRoomInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PrivateRoomInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PrivateRoomInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_PrivateRoomInfo;

    /**
     * Creates a plain object from a SC_PrivateRoomInfo message. Also converts values to other types if specified.
     * @param message SC_PrivateRoomInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PrivateRoomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PrivateRoomInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PrivateRoomInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1027
    }
}

/** Properties of a GC_GameServerCfg. */
export interface IGC_GameServerCfg {

    /** GC_GameServerCfg pbCfg */
    pbCfg?: (IGameClientRoomListCfg[]|null);
}

/** Represents a GC_GameServerCfg. */
export class GC_GameServerCfg implements IGC_GameServerCfg {

    /**
     * Constructs a new GC_GameServerCfg.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGC_GameServerCfg);

    /** GC_GameServerCfg pbCfg. */
    public pbCfg: IGameClientRoomListCfg[];

    /**
     * Creates a new GC_GameServerCfg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GC_GameServerCfg instance
     */
    public static create(properties?: IGC_GameServerCfg): GC_GameServerCfg;

    /**
     * Encodes the specified GC_GameServerCfg message. Does not implicitly {@link GC_GameServerCfg.verify|verify} messages.
     * @param message GC_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGC_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GC_GameServerCfg message, length delimited. Does not implicitly {@link GC_GameServerCfg.verify|verify} messages.
     * @param message GC_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGC_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GC_GameServerCfg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GC_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GC_GameServerCfg;

    /**
     * Decodes a GC_GameServerCfg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GC_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GC_GameServerCfg;

    /**
     * Verifies a GC_GameServerCfg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GC_GameServerCfg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GC_GameServerCfg
     */
    public static fromObject(object: { [k: string]: any }): GC_GameServerCfg;

    /**
     * Creates a plain object from a GC_GameServerCfg message. Also converts values to other types if specified.
     * @param message GC_GameServerCfg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GC_GameServerCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GC_GameServerCfg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace GC_GameServerCfg {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1028
    }
}

/** Properties of a CG_GameServerCfg. */
export interface ICG_GameServerCfg {

    /** CG_GameServerCfg platformId */
    platformId?: (string|null);
}

/** Represents a CG_GameServerCfg. */
export class CG_GameServerCfg implements ICG_GameServerCfg {

    /**
     * Constructs a new CG_GameServerCfg.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICG_GameServerCfg);

    /** CG_GameServerCfg platformId. */
    public platformId: string;

    /**
     * Creates a new CG_GameServerCfg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CG_GameServerCfg instance
     */
    public static create(properties?: ICG_GameServerCfg): CG_GameServerCfg;

    /**
     * Encodes the specified CG_GameServerCfg message. Does not implicitly {@link CG_GameServerCfg.verify|verify} messages.
     * @param message CG_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICG_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CG_GameServerCfg message, length delimited. Does not implicitly {@link CG_GameServerCfg.verify|verify} messages.
     * @param message CG_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICG_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CG_GameServerCfg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CG_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CG_GameServerCfg;

    /**
     * Decodes a CG_GameServerCfg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CG_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CG_GameServerCfg;

    /**
     * Verifies a CG_GameServerCfg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CG_GameServerCfg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CG_GameServerCfg
     */
    public static fromObject(object: { [k: string]: any }): CG_GameServerCfg;

    /**
     * Creates a plain object from a CG_GameServerCfg message. Also converts values to other types if specified.
     * @param message CG_GameServerCfg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CG_GameServerCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CG_GameServerCfg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CG_GameServerCfg {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1029
    }
}

/** Properties of a CS_BankSetPassword. */
export interface ICS_BankSetPassword {

    /** CS_BankSetPassword password */
    password?: (string|null);
}

/** Represents a CS_BankSetPassword. */
export class CS_BankSetPassword implements ICS_BankSetPassword {

    /**
     * Constructs a new CS_BankSetPassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankSetPassword);

    /** CS_BankSetPassword password. */
    public password: string;

    /**
     * Creates a new CS_BankSetPassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankSetPassword instance
     */
    public static create(properties?: ICS_BankSetPassword): CS_BankSetPassword;

    /**
     * Encodes the specified CS_BankSetPassword message. Does not implicitly {@link CS_BankSetPassword.verify|verify} messages.
     * @param message CS_BankSetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankSetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankSetPassword message, length delimited. Does not implicitly {@link CS_BankSetPassword.verify|verify} messages.
     * @param message CS_BankSetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankSetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankSetPassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankSetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankSetPassword;

    /**
     * Decodes a CS_BankSetPassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankSetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankSetPassword;

    /**
     * Verifies a CS_BankSetPassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankSetPassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankSetPassword
     */
    public static fromObject(object: { [k: string]: any }): CS_BankSetPassword;

    /**
     * Creates a plain object from a CS_BankSetPassword message. Also converts values to other types if specified.
     * @param message CS_BankSetPassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankSetPassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankSetPassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankSetPassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1030
    }
}

/** Properties of a SC_BankSetPassword. */
export interface ISC_BankSetPassword {

    /** SC_BankSetPassword result */
    result?: (number|null);
}

/** Represents a SC_BankSetPassword. */
export class SC_BankSetPassword implements ISC_BankSetPassword {

    /**
     * Constructs a new SC_BankSetPassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankSetPassword);

    /** SC_BankSetPassword result. */
    public result: number;

    /**
     * Creates a new SC_BankSetPassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankSetPassword instance
     */
    public static create(properties?: ISC_BankSetPassword): SC_BankSetPassword;

    /**
     * Encodes the specified SC_BankSetPassword message. Does not implicitly {@link SC_BankSetPassword.verify|verify} messages.
     * @param message SC_BankSetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankSetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankSetPassword message, length delimited. Does not implicitly {@link SC_BankSetPassword.verify|verify} messages.
     * @param message SC_BankSetPassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankSetPassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankSetPassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankSetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankSetPassword;

    /**
     * Decodes a SC_BankSetPassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankSetPassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankSetPassword;

    /**
     * Verifies a SC_BankSetPassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankSetPassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankSetPassword
     */
    public static fromObject(object: { [k: string]: any }): SC_BankSetPassword;

    /**
     * Creates a plain object from a SC_BankSetPassword message. Also converts values to other types if specified.
     * @param message SC_BankSetPassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankSetPassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankSetPassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankSetPassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1031
    }
}

/** Properties of a CS_BankChangePassword. */
export interface ICS_BankChangePassword {

    /** CS_BankChangePassword oldPassword */
    oldPassword?: (string|null);

    /** CS_BankChangePassword password */
    password?: (string|null);
}

/** Represents a CS_BankChangePassword. */
export class CS_BankChangePassword implements ICS_BankChangePassword {

    /**
     * Constructs a new CS_BankChangePassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankChangePassword);

    /** CS_BankChangePassword oldPassword. */
    public oldPassword: string;

    /** CS_BankChangePassword password. */
    public password: string;

    /**
     * Creates a new CS_BankChangePassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankChangePassword instance
     */
    public static create(properties?: ICS_BankChangePassword): CS_BankChangePassword;

    /**
     * Encodes the specified CS_BankChangePassword message. Does not implicitly {@link CS_BankChangePassword.verify|verify} messages.
     * @param message CS_BankChangePassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankChangePassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankChangePassword message, length delimited. Does not implicitly {@link CS_BankChangePassword.verify|verify} messages.
     * @param message CS_BankChangePassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankChangePassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankChangePassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankChangePassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankChangePassword;

    /**
     * Decodes a CS_BankChangePassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankChangePassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankChangePassword;

    /**
     * Verifies a CS_BankChangePassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankChangePassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankChangePassword
     */
    public static fromObject(object: { [k: string]: any }): CS_BankChangePassword;

    /**
     * Creates a plain object from a CS_BankChangePassword message. Also converts values to other types if specified.
     * @param message CS_BankChangePassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankChangePassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankChangePassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankChangePassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1032
    }
}

/** Properties of a SC_BankChangePassword. */
export interface ISC_BankChangePassword {

    /** SC_BankChangePassword result */
    result?: (number|null);
}

/** Represents a SC_BankChangePassword. */
export class SC_BankChangePassword implements ISC_BankChangePassword {

    /**
     * Constructs a new SC_BankChangePassword.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankChangePassword);

    /** SC_BankChangePassword result. */
    public result: number;

    /**
     * Creates a new SC_BankChangePassword instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankChangePassword instance
     */
    public static create(properties?: ISC_BankChangePassword): SC_BankChangePassword;

    /**
     * Encodes the specified SC_BankChangePassword message. Does not implicitly {@link SC_BankChangePassword.verify|verify} messages.
     * @param message SC_BankChangePassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankChangePassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankChangePassword message, length delimited. Does not implicitly {@link SC_BankChangePassword.verify|verify} messages.
     * @param message SC_BankChangePassword message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankChangePassword, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankChangePassword message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankChangePassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankChangePassword;

    /**
     * Decodes a SC_BankChangePassword message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankChangePassword
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankChangePassword;

    /**
     * Verifies a SC_BankChangePassword message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankChangePassword message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankChangePassword
     */
    public static fromObject(object: { [k: string]: any }): SC_BankChangePassword;

    /**
     * Creates a plain object from a SC_BankChangePassword message. Also converts values to other types if specified.
     * @param message SC_BankChangePassword
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankChangePassword, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankChangePassword to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankChangePassword {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1033
    }
}

/** Properties of a CS_BankLogin. */
export interface ICS_BankLogin {

    /** CS_BankLogin password */
    password?: (string|null);
}

/** Represents a CS_BankLogin. */
export class CS_BankLogin implements ICS_BankLogin {

    /**
     * Constructs a new CS_BankLogin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankLogin);

    /** CS_BankLogin password. */
    public password: string;

    /**
     * Creates a new CS_BankLogin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankLogin instance
     */
    public static create(properties?: ICS_BankLogin): CS_BankLogin;

    /**
     * Encodes the specified CS_BankLogin message. Does not implicitly {@link CS_BankLogin.verify|verify} messages.
     * @param message CS_BankLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankLogin message, length delimited. Does not implicitly {@link CS_BankLogin.verify|verify} messages.
     * @param message CS_BankLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankLogin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankLogin;

    /**
     * Decodes a CS_BankLogin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankLogin;

    /**
     * Verifies a CS_BankLogin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankLogin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankLogin
     */
    public static fromObject(object: { [k: string]: any }): CS_BankLogin;

    /**
     * Creates a plain object from a CS_BankLogin message. Also converts values to other types if specified.
     * @param message CS_BankLogin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankLogin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankLogin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1034
    }
}

/** Properties of a SC_BankLogin. */
export interface ISC_BankLogin {

    /** SC_BankLogin result */
    result?: (number|null);
}

/** Represents a SC_BankLogin. */
export class SC_BankLogin implements ISC_BankLogin {

    /**
     * Constructs a new SC_BankLogin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankLogin);

    /** SC_BankLogin result. */
    public result: number;

    /**
     * Creates a new SC_BankLogin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankLogin instance
     */
    public static create(properties?: ISC_BankLogin): SC_BankLogin;

    /**
     * Encodes the specified SC_BankLogin message. Does not implicitly {@link SC_BankLogin.verify|verify} messages.
     * @param message SC_BankLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankLogin message, length delimited. Does not implicitly {@link SC_BankLogin.verify|verify} messages.
     * @param message SC_BankLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankLogin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankLogin;

    /**
     * Decodes a SC_BankLogin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankLogin;

    /**
     * Verifies a SC_BankLogin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankLogin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankLogin
     */
    public static fromObject(object: { [k: string]: any }): SC_BankLogin;

    /**
     * Creates a plain object from a SC_BankLogin message. Also converts values to other types if specified.
     * @param message SC_BankLogin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankLogin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankLogin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1035
    }
}

/** Properties of a CL_ResetBankPW. */
export interface ICL_ResetBankPW {

    /** CL_ResetBankPW guid */
    guid?: (number|null);

    /** CL_ResetBankPW bankPwSms */
    bankPwSms?: (string|null);

    /** CL_ResetBankPW bankPasswordNew */
    bankPasswordNew?: (string|null);

    /** CL_ResetBankPW tel */
    tel?: (string|null);
}

/** Represents a CL_ResetBankPW. */
export class CL_ResetBankPW implements ICL_ResetBankPW {

    /**
     * Constructs a new CL_ResetBankPW.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICL_ResetBankPW);

    /** CL_ResetBankPW guid. */
    public guid: number;

    /** CL_ResetBankPW bankPwSms. */
    public bankPwSms: string;

    /** CL_ResetBankPW bankPasswordNew. */
    public bankPasswordNew: string;

    /** CL_ResetBankPW tel. */
    public tel: string;

    /**
     * Creates a new CL_ResetBankPW instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CL_ResetBankPW instance
     */
    public static create(properties?: ICL_ResetBankPW): CL_ResetBankPW;

    /**
     * Encodes the specified CL_ResetBankPW message. Does not implicitly {@link CL_ResetBankPW.verify|verify} messages.
     * @param message CL_ResetBankPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICL_ResetBankPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CL_ResetBankPW message, length delimited. Does not implicitly {@link CL_ResetBankPW.verify|verify} messages.
     * @param message CL_ResetBankPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICL_ResetBankPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CL_ResetBankPW message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CL_ResetBankPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CL_ResetBankPW;

    /**
     * Decodes a CL_ResetBankPW message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CL_ResetBankPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CL_ResetBankPW;

    /**
     * Verifies a CL_ResetBankPW message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CL_ResetBankPW message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CL_ResetBankPW
     */
    public static fromObject(object: { [k: string]: any }): CL_ResetBankPW;

    /**
     * Creates a plain object from a CL_ResetBankPW message. Also converts values to other types if specified.
     * @param message CL_ResetBankPW
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CL_ResetBankPW, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CL_ResetBankPW to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CL_ResetBankPW {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1036
    }
}

/** Properties of a SC_ResetBankPW. */
export interface ISC_ResetBankPW {

    /** SC_ResetBankPW guid */
    guid?: (number|null);

    /** SC_ResetBankPW result */
    result?: (number|null);
}

/** Represents a SC_ResetBankPW. */
export class SC_ResetBankPW implements ISC_ResetBankPW {

    /**
     * Constructs a new SC_ResetBankPW.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ResetBankPW);

    /** SC_ResetBankPW guid. */
    public guid: number;

    /** SC_ResetBankPW result. */
    public result: number;

    /**
     * Creates a new SC_ResetBankPW instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ResetBankPW instance
     */
    public static create(properties?: ISC_ResetBankPW): SC_ResetBankPW;

    /**
     * Encodes the specified SC_ResetBankPW message. Does not implicitly {@link SC_ResetBankPW.verify|verify} messages.
     * @param message SC_ResetBankPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ResetBankPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ResetBankPW message, length delimited. Does not implicitly {@link SC_ResetBankPW.verify|verify} messages.
     * @param message SC_ResetBankPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ResetBankPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ResetBankPW message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ResetBankPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ResetBankPW;

    /**
     * Decodes a SC_ResetBankPW message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ResetBankPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ResetBankPW;

    /**
     * Verifies a SC_ResetBankPW message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ResetBankPW message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ResetBankPW
     */
    public static fromObject(object: { [k: string]: any }): SC_ResetBankPW;

    /**
     * Creates a plain object from a SC_ResetBankPW message. Also converts values to other types if specified.
     * @param message SC_ResetBankPW
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ResetBankPW, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ResetBankPW to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ResetBankPW {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1037
    }
}

/** Properties of a SD_ResetPW. */
export interface ISD_ResetPW {

    /** SD_ResetPW guid */
    guid?: (number|null);

    /** SD_ResetPW bankPasswordNew */
    bankPasswordNew?: (string|null);
}

/** Represents a SD_ResetPW. */
export class SD_ResetPW implements ISD_ResetPW {

    /**
     * Constructs a new SD_ResetPW.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISD_ResetPW);

    /** SD_ResetPW guid. */
    public guid: number;

    /** SD_ResetPW bankPasswordNew. */
    public bankPasswordNew: string;

    /**
     * Creates a new SD_ResetPW instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SD_ResetPW instance
     */
    public static create(properties?: ISD_ResetPW): SD_ResetPW;

    /**
     * Encodes the specified SD_ResetPW message. Does not implicitly {@link SD_ResetPW.verify|verify} messages.
     * @param message SD_ResetPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISD_ResetPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SD_ResetPW message, length delimited. Does not implicitly {@link SD_ResetPW.verify|verify} messages.
     * @param message SD_ResetPW message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISD_ResetPW, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SD_ResetPW message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SD_ResetPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SD_ResetPW;

    /**
     * Decodes a SD_ResetPW message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SD_ResetPW
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SD_ResetPW;

    /**
     * Verifies a SD_ResetPW message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SD_ResetPW message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SD_ResetPW
     */
    public static fromObject(object: { [k: string]: any }): SD_ResetPW;

    /**
     * Creates a plain object from a SD_ResetPW message. Also converts values to other types if specified.
     * @param message SD_ResetPW
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SD_ResetPW, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SD_ResetPW to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SD_ResetPW {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1038
    }
}

/** Properties of a CS_BankDeposit. */
export interface ICS_BankDeposit {

    /** CS_BankDeposit money */
    money?: (number|Long|null);
}

/** Represents a CS_BankDeposit. */
export class CS_BankDeposit implements ICS_BankDeposit {

    /**
     * Constructs a new CS_BankDeposit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankDeposit);

    /** CS_BankDeposit money. */
    public money: (number|Long);

    /**
     * Creates a new CS_BankDeposit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankDeposit instance
     */
    public static create(properties?: ICS_BankDeposit): CS_BankDeposit;

    /**
     * Encodes the specified CS_BankDeposit message. Does not implicitly {@link CS_BankDeposit.verify|verify} messages.
     * @param message CS_BankDeposit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankDeposit message, length delimited. Does not implicitly {@link CS_BankDeposit.verify|verify} messages.
     * @param message CS_BankDeposit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankDeposit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankDeposit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankDeposit;

    /**
     * Decodes a CS_BankDeposit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankDeposit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankDeposit;

    /**
     * Verifies a CS_BankDeposit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankDeposit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankDeposit
     */
    public static fromObject(object: { [k: string]: any }): CS_BankDeposit;

    /**
     * Creates a plain object from a CS_BankDeposit message. Also converts values to other types if specified.
     * @param message CS_BankDeposit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankDeposit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankDeposit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1039
    }
}

/** Properties of a SC_BankDeposit. */
export interface ISC_BankDeposit {

    /** SC_BankDeposit result */
    result?: (number|null);

    /** SC_BankDeposit money */
    money?: (number|Long|null);
}

/** Represents a SC_BankDeposit. */
export class SC_BankDeposit implements ISC_BankDeposit {

    /**
     * Constructs a new SC_BankDeposit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankDeposit);

    /** SC_BankDeposit result. */
    public result: number;

    /** SC_BankDeposit money. */
    public money: (number|Long);

    /**
     * Creates a new SC_BankDeposit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankDeposit instance
     */
    public static create(properties?: ISC_BankDeposit): SC_BankDeposit;

    /**
     * Encodes the specified SC_BankDeposit message. Does not implicitly {@link SC_BankDeposit.verify|verify} messages.
     * @param message SC_BankDeposit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankDeposit message, length delimited. Does not implicitly {@link SC_BankDeposit.verify|verify} messages.
     * @param message SC_BankDeposit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankDeposit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankDeposit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankDeposit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankDeposit;

    /**
     * Decodes a SC_BankDeposit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankDeposit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankDeposit;

    /**
     * Verifies a SC_BankDeposit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankDeposit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankDeposit
     */
    public static fromObject(object: { [k: string]: any }): SC_BankDeposit;

    /**
     * Creates a plain object from a SC_BankDeposit message. Also converts values to other types if specified.
     * @param message SC_BankDeposit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankDeposit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankDeposit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankDeposit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1040
    }
}

/** Properties of a CS_BankDraw. */
export interface ICS_BankDraw {

    /** CS_BankDraw money */
    money?: (number|Long|null);

    /** CS_BankDraw bankPassword */
    bankPassword?: (string|null);
}

/** Represents a CS_BankDraw. */
export class CS_BankDraw implements ICS_BankDraw {

    /**
     * Constructs a new CS_BankDraw.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankDraw);

    /** CS_BankDraw money. */
    public money: (number|Long);

    /** CS_BankDraw bankPassword. */
    public bankPassword: string;

    /**
     * Creates a new CS_BankDraw instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankDraw instance
     */
    public static create(properties?: ICS_BankDraw): CS_BankDraw;

    /**
     * Encodes the specified CS_BankDraw message. Does not implicitly {@link CS_BankDraw.verify|verify} messages.
     * @param message CS_BankDraw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankDraw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankDraw message, length delimited. Does not implicitly {@link CS_BankDraw.verify|verify} messages.
     * @param message CS_BankDraw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankDraw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankDraw message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankDraw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankDraw;

    /**
     * Decodes a CS_BankDraw message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankDraw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankDraw;

    /**
     * Verifies a CS_BankDraw message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankDraw message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankDraw
     */
    public static fromObject(object: { [k: string]: any }): CS_BankDraw;

    /**
     * Creates a plain object from a CS_BankDraw message. Also converts values to other types if specified.
     * @param message CS_BankDraw
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankDraw, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankDraw to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankDraw {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1041
    }
}

/** Properties of a SC_BankDraw. */
export interface ISC_BankDraw {

    /** SC_BankDraw result */
    result?: (number|null);

    /** SC_BankDraw money */
    money?: (number|Long|null);
}

/** Represents a SC_BankDraw. */
export class SC_BankDraw implements ISC_BankDraw {

    /**
     * Constructs a new SC_BankDraw.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankDraw);

    /** SC_BankDraw result. */
    public result: number;

    /** SC_BankDraw money. */
    public money: (number|Long);

    /**
     * Creates a new SC_BankDraw instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankDraw instance
     */
    public static create(properties?: ISC_BankDraw): SC_BankDraw;

    /**
     * Encodes the specified SC_BankDraw message. Does not implicitly {@link SC_BankDraw.verify|verify} messages.
     * @param message SC_BankDraw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankDraw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankDraw message, length delimited. Does not implicitly {@link SC_BankDraw.verify|verify} messages.
     * @param message SC_BankDraw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankDraw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankDraw message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankDraw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankDraw;

    /**
     * Decodes a SC_BankDraw message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankDraw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankDraw;

    /**
     * Verifies a SC_BankDraw message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankDraw message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankDraw
     */
    public static fromObject(object: { [k: string]: any }): SC_BankDraw;

    /**
     * Creates a plain object from a SC_BankDraw message. Also converts values to other types if specified.
     * @param message SC_BankDraw
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankDraw, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankDraw to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankDraw {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1042
    }
}

/** Properties of a SC_NotifyBankStatement. */
export interface ISC_NotifyBankStatement {

    /** SC_NotifyBankStatement pbStatement */
    pbStatement?: (IBankStatement|null);
}

/** Represents a SC_NotifyBankStatement. */
export class SC_NotifyBankStatement implements ISC_NotifyBankStatement {

    /**
     * Constructs a new SC_NotifyBankStatement.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyBankStatement);

    /** SC_NotifyBankStatement pbStatement. */
    public pbStatement?: (IBankStatement|null);

    /**
     * Creates a new SC_NotifyBankStatement instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyBankStatement instance
     */
    public static create(properties?: ISC_NotifyBankStatement): SC_NotifyBankStatement;

    /**
     * Encodes the specified SC_NotifyBankStatement message. Does not implicitly {@link SC_NotifyBankStatement.verify|verify} messages.
     * @param message SC_NotifyBankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyBankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyBankStatement message, length delimited. Does not implicitly {@link SC_NotifyBankStatement.verify|verify} messages.
     * @param message SC_NotifyBankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyBankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyBankStatement message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyBankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyBankStatement;

    /**
     * Decodes a SC_NotifyBankStatement message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyBankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyBankStatement;

    /**
     * Verifies a SC_NotifyBankStatement message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyBankStatement message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyBankStatement
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyBankStatement;

    /**
     * Creates a plain object from a SC_NotifyBankStatement message. Also converts values to other types if specified.
     * @param message SC_NotifyBankStatement
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyBankStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyBankStatement to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyBankStatement {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1043
    }
}

/** Properties of a CS_BankStatement. */
export interface ICS_BankStatement {

    /** CS_BankStatement curSerial */
    curSerial?: (number|Long|null);
}

/** Represents a CS_BankStatement. */
export class CS_BankStatement implements ICS_BankStatement {

    /**
     * Constructs a new CS_BankStatement.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankStatement);

    /** CS_BankStatement curSerial. */
    public curSerial: (number|Long);

    /**
     * Creates a new CS_BankStatement instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankStatement instance
     */
    public static create(properties?: ICS_BankStatement): CS_BankStatement;

    /**
     * Encodes the specified CS_BankStatement message. Does not implicitly {@link CS_BankStatement.verify|verify} messages.
     * @param message CS_BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankStatement message, length delimited. Does not implicitly {@link CS_BankStatement.verify|verify} messages.
     * @param message CS_BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankStatement message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankStatement;

    /**
     * Decodes a CS_BankStatement message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankStatement;

    /**
     * Verifies a CS_BankStatement message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankStatement message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankStatement
     */
    public static fromObject(object: { [k: string]: any }): CS_BankStatement;

    /**
     * Creates a plain object from a CS_BankStatement message. Also converts values to other types if specified.
     * @param message CS_BankStatement
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankStatement to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankStatement {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1044
    }
}

/** Properties of a SC_BankStatement. */
export interface ISC_BankStatement {

    /** SC_BankStatement pbStatement */
    pbStatement?: (IBankStatement[]|null);
}

/** Represents a SC_BankStatement. */
export class SC_BankStatement implements ISC_BankStatement {

    /**
     * Constructs a new SC_BankStatement.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankStatement);

    /** SC_BankStatement pbStatement. */
    public pbStatement: IBankStatement[];

    /**
     * Creates a new SC_BankStatement instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankStatement instance
     */
    public static create(properties?: ISC_BankStatement): SC_BankStatement;

    /**
     * Encodes the specified SC_BankStatement message. Does not implicitly {@link SC_BankStatement.verify|verify} messages.
     * @param message SC_BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankStatement message, length delimited. Does not implicitly {@link SC_BankStatement.verify|verify} messages.
     * @param message SC_BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankStatement message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankStatement;

    /**
     * Decodes a SC_BankStatement message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankStatement;

    /**
     * Verifies a SC_BankStatement message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankStatement message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankStatement
     */
    public static fromObject(object: { [k: string]: any }): SC_BankStatement;

    /**
     * Creates a plain object from a SC_BankStatement message. Also converts values to other types if specified.
     * @param message SC_BankStatement
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankStatement to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankStatement {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1045
    }
}

/** Properties of a CS_BankTransfer. */
export interface ICS_BankTransfer {

    /** CS_BankTransfer account */
    account?: (string|null);

    /** CS_BankTransfer money */
    money?: (number|Long|null);
}

/** Represents a CS_BankTransfer. */
export class CS_BankTransfer implements ICS_BankTransfer {

    /**
     * Constructs a new CS_BankTransfer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankTransfer);

    /** CS_BankTransfer account. */
    public account: string;

    /** CS_BankTransfer money. */
    public money: (number|Long);

    /**
     * Creates a new CS_BankTransfer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankTransfer instance
     */
    public static create(properties?: ICS_BankTransfer): CS_BankTransfer;

    /**
     * Encodes the specified CS_BankTransfer message. Does not implicitly {@link CS_BankTransfer.verify|verify} messages.
     * @param message CS_BankTransfer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankTransfer message, length delimited. Does not implicitly {@link CS_BankTransfer.verify|verify} messages.
     * @param message CS_BankTransfer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankTransfer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankTransfer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankTransfer;

    /**
     * Decodes a CS_BankTransfer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankTransfer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankTransfer;

    /**
     * Verifies a CS_BankTransfer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankTransfer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankTransfer
     */
    public static fromObject(object: { [k: string]: any }): CS_BankTransfer;

    /**
     * Creates a plain object from a CS_BankTransfer message. Also converts values to other types if specified.
     * @param message CS_BankTransfer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankTransfer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankTransfer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1046
    }
}

/** Properties of a SC_BankTransfer. */
export interface ISC_BankTransfer {

    /** SC_BankTransfer result */
    result?: (number|null);

    /** SC_BankTransfer money */
    money?: (number|Long|null);

    /** SC_BankTransfer bank */
    bank?: (number|Long|null);
}

/** Represents a SC_BankTransfer. */
export class SC_BankTransfer implements ISC_BankTransfer {

    /**
     * Constructs a new SC_BankTransfer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankTransfer);

    /** SC_BankTransfer result. */
    public result: number;

    /** SC_BankTransfer money. */
    public money: (number|Long);

    /** SC_BankTransfer bank. */
    public bank: (number|Long);

    /**
     * Creates a new SC_BankTransfer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankTransfer instance
     */
    public static create(properties?: ISC_BankTransfer): SC_BankTransfer;

    /**
     * Encodes the specified SC_BankTransfer message. Does not implicitly {@link SC_BankTransfer.verify|verify} messages.
     * @param message SC_BankTransfer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankTransfer message, length delimited. Does not implicitly {@link SC_BankTransfer.verify|verify} messages.
     * @param message SC_BankTransfer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankTransfer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankTransfer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankTransfer;

    /**
     * Decodes a SC_BankTransfer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankTransfer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankTransfer;

    /**
     * Verifies a SC_BankTransfer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankTransfer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankTransfer
     */
    public static fromObject(object: { [k: string]: any }): SC_BankTransfer;

    /**
     * Creates a plain object from a SC_BankTransfer message. Also converts values to other types if specified.
     * @param message SC_BankTransfer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankTransfer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankTransfer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1047
    }
}

/** Properties of a SC_NotifyMoney. */
export interface ISC_NotifyMoney {

    /** SC_NotifyMoney optType */
    optType?: (number|null);

    /** SC_NotifyMoney money */
    money?: (number|Long|null);

    /** SC_NotifyMoney changeMoney */
    changeMoney?: (number|Long|null);
}

/** Represents a SC_NotifyMoney. */
export class SC_NotifyMoney implements ISC_NotifyMoney {

    /**
     * Constructs a new SC_NotifyMoney.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyMoney);

    /** SC_NotifyMoney optType. */
    public optType: number;

    /** SC_NotifyMoney money. */
    public money: (number|Long);

    /** SC_NotifyMoney changeMoney. */
    public changeMoney: (number|Long);

    /**
     * Creates a new SC_NotifyMoney instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyMoney instance
     */
    public static create(properties?: ISC_NotifyMoney): SC_NotifyMoney;

    /**
     * Encodes the specified SC_NotifyMoney message. Does not implicitly {@link SC_NotifyMoney.verify|verify} messages.
     * @param message SC_NotifyMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyMoney message, length delimited. Does not implicitly {@link SC_NotifyMoney.verify|verify} messages.
     * @param message SC_NotifyMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyMoney message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyMoney;

    /**
     * Decodes a SC_NotifyMoney message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyMoney;

    /**
     * Verifies a SC_NotifyMoney message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyMoney message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyMoney
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyMoney;

    /**
     * Creates a plain object from a SC_NotifyMoney message. Also converts values to other types if specified.
     * @param message SC_NotifyMoney
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyMoney to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyMoney {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1048
    }
}

/** Properties of a CS_BankTransferByGuid. */
export interface ICS_BankTransferByGuid {

    /** CS_BankTransferByGuid guid */
    guid?: (number|null);

    /** CS_BankTransferByGuid money */
    money?: (number|Long|null);
}

/** Represents a CS_BankTransferByGuid. */
export class CS_BankTransferByGuid implements ICS_BankTransferByGuid {

    /**
     * Constructs a new CS_BankTransferByGuid.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BankTransferByGuid);

    /** CS_BankTransferByGuid guid. */
    public guid: number;

    /** CS_BankTransferByGuid money. */
    public money: (number|Long);

    /**
     * Creates a new CS_BankTransferByGuid instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BankTransferByGuid instance
     */
    public static create(properties?: ICS_BankTransferByGuid): CS_BankTransferByGuid;

    /**
     * Encodes the specified CS_BankTransferByGuid message. Does not implicitly {@link CS_BankTransferByGuid.verify|verify} messages.
     * @param message CS_BankTransferByGuid message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BankTransferByGuid, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BankTransferByGuid message, length delimited. Does not implicitly {@link CS_BankTransferByGuid.verify|verify} messages.
     * @param message CS_BankTransferByGuid message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BankTransferByGuid, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BankTransferByGuid message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BankTransferByGuid
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BankTransferByGuid;

    /**
     * Decodes a CS_BankTransferByGuid message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BankTransferByGuid
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BankTransferByGuid;

    /**
     * Verifies a CS_BankTransferByGuid message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BankTransferByGuid message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BankTransferByGuid
     */
    public static fromObject(object: { [k: string]: any }): CS_BankTransferByGuid;

    /**
     * Creates a plain object from a CS_BankTransferByGuid message. Also converts values to other types if specified.
     * @param message CS_BankTransferByGuid
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BankTransferByGuid, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BankTransferByGuid to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BankTransferByGuid {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1049
    }
}

/** Properties of a CS_BuyItem. */
export interface ICS_BuyItem {

    /** CS_BuyItem itemId */
    itemId?: (number|null);

    /** CS_BuyItem itemNum */
    itemNum?: (number|null);
}

/** Represents a CS_BuyItem. */
export class CS_BuyItem implements ICS_BuyItem {

    /**
     * Constructs a new CS_BuyItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BuyItem);

    /** CS_BuyItem itemId. */
    public itemId: number;

    /** CS_BuyItem itemNum. */
    public itemNum: number;

    /**
     * Creates a new CS_BuyItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BuyItem instance
     */
    public static create(properties?: ICS_BuyItem): CS_BuyItem;

    /**
     * Encodes the specified CS_BuyItem message. Does not implicitly {@link CS_BuyItem.verify|verify} messages.
     * @param message CS_BuyItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BuyItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BuyItem message, length delimited. Does not implicitly {@link CS_BuyItem.verify|verify} messages.
     * @param message CS_BuyItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BuyItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BuyItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BuyItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BuyItem;

    /**
     * Decodes a CS_BuyItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BuyItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BuyItem;

    /**
     * Verifies a CS_BuyItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BuyItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BuyItem
     */
    public static fromObject(object: { [k: string]: any }): CS_BuyItem;

    /**
     * Creates a plain object from a CS_BuyItem message. Also converts values to other types if specified.
     * @param message CS_BuyItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BuyItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BuyItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BuyItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1050
    }
}

/** Properties of a SC_BuyItem. */
export interface ISC_BuyItem {

    /** SC_BuyItem itemId */
    itemId?: (number|null);

    /** SC_BuyItem itemNum */
    itemNum?: (number|null);

    /** SC_BuyItem result */
    result?: (number|null);
}

/** Represents a SC_BuyItem. */
export class SC_BuyItem implements ISC_BuyItem {

    /**
     * Constructs a new SC_BuyItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BuyItem);

    /** SC_BuyItem itemId. */
    public itemId: number;

    /** SC_BuyItem itemNum. */
    public itemNum: number;

    /** SC_BuyItem result. */
    public result: number;

    /**
     * Creates a new SC_BuyItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BuyItem instance
     */
    public static create(properties?: ISC_BuyItem): SC_BuyItem;

    /**
     * Encodes the specified SC_BuyItem message. Does not implicitly {@link SC_BuyItem.verify|verify} messages.
     * @param message SC_BuyItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BuyItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BuyItem message, length delimited. Does not implicitly {@link SC_BuyItem.verify|verify} messages.
     * @param message SC_BuyItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BuyItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BuyItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BuyItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BuyItem;

    /**
     * Decodes a SC_BuyItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BuyItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BuyItem;

    /**
     * Verifies a SC_BuyItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BuyItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BuyItem
     */
    public static fromObject(object: { [k: string]: any }): SC_BuyItem;

    /**
     * Creates a plain object from a SC_BuyItem message. Also converts values to other types if specified.
     * @param message SC_BuyItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BuyItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BuyItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BuyItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1051
    }
}

/** Properties of a CS_DelItem. */
export interface ICS_DelItem {

    /** CS_DelItem itemId */
    itemId?: (number|null);

    /** CS_DelItem itemNum */
    itemNum?: (number|null);
}

/** Represents a CS_DelItem. */
export class CS_DelItem implements ICS_DelItem {

    /**
     * Constructs a new CS_DelItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DelItem);

    /** CS_DelItem itemId. */
    public itemId: number;

    /** CS_DelItem itemNum. */
    public itemNum: number;

    /**
     * Creates a new CS_DelItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DelItem instance
     */
    public static create(properties?: ICS_DelItem): CS_DelItem;

    /**
     * Encodes the specified CS_DelItem message. Does not implicitly {@link CS_DelItem.verify|verify} messages.
     * @param message CS_DelItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DelItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DelItem message, length delimited. Does not implicitly {@link CS_DelItem.verify|verify} messages.
     * @param message CS_DelItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DelItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DelItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DelItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DelItem;

    /**
     * Decodes a CS_DelItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DelItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DelItem;

    /**
     * Verifies a CS_DelItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DelItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DelItem
     */
    public static fromObject(object: { [k: string]: any }): CS_DelItem;

    /**
     * Creates a plain object from a CS_DelItem message. Also converts values to other types if specified.
     * @param message CS_DelItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DelItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DelItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DelItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1052
    }
}

/** Properties of a SC_DelItem. */
export interface ISC_DelItem {

    /** SC_DelItem itemId */
    itemId?: (number|null);

    /** SC_DelItem itemNum */
    itemNum?: (number|null);

    /** SC_DelItem result */
    result?: (number|null);
}

/** Represents a SC_DelItem. */
export class SC_DelItem implements ISC_DelItem {

    /**
     * Constructs a new SC_DelItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DelItem);

    /** SC_DelItem itemId. */
    public itemId: number;

    /** SC_DelItem itemNum. */
    public itemNum: number;

    /** SC_DelItem result. */
    public result: number;

    /**
     * Creates a new SC_DelItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DelItem instance
     */
    public static create(properties?: ISC_DelItem): SC_DelItem;

    /**
     * Encodes the specified SC_DelItem message. Does not implicitly {@link SC_DelItem.verify|verify} messages.
     * @param message SC_DelItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DelItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DelItem message, length delimited. Does not implicitly {@link SC_DelItem.verify|verify} messages.
     * @param message SC_DelItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DelItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DelItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DelItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DelItem;

    /**
     * Decodes a SC_DelItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DelItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DelItem;

    /**
     * Verifies a SC_DelItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DelItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DelItem
     */
    public static fromObject(object: { [k: string]: any }): SC_DelItem;

    /**
     * Creates a plain object from a SC_DelItem message. Also converts values to other types if specified.
     * @param message SC_DelItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DelItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DelItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DelItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1053
    }
}

/** Properties of a CS_UseItem. */
export interface ICS_UseItem {

    /** CS_UseItem itemId */
    itemId?: (number|null);

    /** CS_UseItem itemNum */
    itemNum?: (number|null);
}

/** Represents a CS_UseItem. */
export class CS_UseItem implements ICS_UseItem {

    /**
     * Constructs a new CS_UseItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_UseItem);

    /** CS_UseItem itemId. */
    public itemId: number;

    /** CS_UseItem itemNum. */
    public itemNum: number;

    /**
     * Creates a new CS_UseItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_UseItem instance
     */
    public static create(properties?: ICS_UseItem): CS_UseItem;

    /**
     * Encodes the specified CS_UseItem message. Does not implicitly {@link CS_UseItem.verify|verify} messages.
     * @param message CS_UseItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_UseItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_UseItem message, length delimited. Does not implicitly {@link CS_UseItem.verify|verify} messages.
     * @param message CS_UseItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_UseItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_UseItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_UseItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_UseItem;

    /**
     * Decodes a CS_UseItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_UseItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_UseItem;

    /**
     * Verifies a CS_UseItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_UseItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_UseItem
     */
    public static fromObject(object: { [k: string]: any }): CS_UseItem;

    /**
     * Creates a plain object from a CS_UseItem message. Also converts values to other types if specified.
     * @param message CS_UseItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_UseItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_UseItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_UseItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1054
    }
}

/** Properties of a SC_UseItem. */
export interface ISC_UseItem {

    /** SC_UseItem itemId */
    itemId?: (number|null);

    /** SC_UseItem itemNum */
    itemNum?: (number|null);

    /** SC_UseItem result */
    result?: (number|null);
}

/** Represents a SC_UseItem. */
export class SC_UseItem implements ISC_UseItem {

    /**
     * Constructs a new SC_UseItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_UseItem);

    /** SC_UseItem itemId. */
    public itemId: number;

    /** SC_UseItem itemNum. */
    public itemNum: number;

    /** SC_UseItem result. */
    public result: number;

    /**
     * Creates a new SC_UseItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_UseItem instance
     */
    public static create(properties?: ISC_UseItem): SC_UseItem;

    /**
     * Encodes the specified SC_UseItem message. Does not implicitly {@link SC_UseItem.verify|verify} messages.
     * @param message SC_UseItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_UseItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_UseItem message, length delimited. Does not implicitly {@link SC_UseItem.verify|verify} messages.
     * @param message SC_UseItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_UseItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_UseItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_UseItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_UseItem;

    /**
     * Decodes a SC_UseItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_UseItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_UseItem;

    /**
     * Verifies a SC_UseItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_UseItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_UseItem
     */
    public static fromObject(object: { [k: string]: any }): SC_UseItem;

    /**
     * Creates a plain object from a SC_UseItem message. Also converts values to other types if specified.
     * @param message SC_UseItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_UseItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_UseItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_UseItem {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1055
    }
}

/** Properties of a CS_ChatWorld. */
export interface ICS_ChatWorld {

    /** CS_ChatWorld chatContent */
    chatContent?: (string|null);
}

/** Represents a CS_ChatWorld. */
export class CS_ChatWorld implements ICS_ChatWorld {

    /**
     * Constructs a new CS_ChatWorld.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChatWorld);

    /** CS_ChatWorld chatContent. */
    public chatContent: string;

    /**
     * Creates a new CS_ChatWorld instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChatWorld instance
     */
    public static create(properties?: ICS_ChatWorld): CS_ChatWorld;

    /**
     * Encodes the specified CS_ChatWorld message. Does not implicitly {@link CS_ChatWorld.verify|verify} messages.
     * @param message CS_ChatWorld message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChatWorld, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChatWorld message, length delimited. Does not implicitly {@link CS_ChatWorld.verify|verify} messages.
     * @param message CS_ChatWorld message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChatWorld, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChatWorld message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChatWorld
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChatWorld;

    /**
     * Decodes a CS_ChatWorld message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChatWorld
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChatWorld;

    /**
     * Verifies a CS_ChatWorld message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChatWorld message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChatWorld
     */
    public static fromObject(object: { [k: string]: any }): CS_ChatWorld;

    /**
     * Creates a plain object from a CS_ChatWorld message. Also converts values to other types if specified.
     * @param message CS_ChatWorld
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChatWorld, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChatWorld to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChatWorld {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1056
    }
}

/** Properties of a SC_ChatWorld. */
export interface ISC_ChatWorld {

    /** SC_ChatWorld chatContent */
    chatContent?: (string|null);

    /** SC_ChatWorld chatGuid */
    chatGuid?: (number|null);

    /** SC_ChatWorld chatName */
    chatName?: (string|null);
}

/** Represents a SC_ChatWorld. */
export class SC_ChatWorld implements ISC_ChatWorld {

    /**
     * Constructs a new SC_ChatWorld.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChatWorld);

    /** SC_ChatWorld chatContent. */
    public chatContent: string;

    /** SC_ChatWorld chatGuid. */
    public chatGuid: number;

    /** SC_ChatWorld chatName. */
    public chatName: string;

    /**
     * Creates a new SC_ChatWorld instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChatWorld instance
     */
    public static create(properties?: ISC_ChatWorld): SC_ChatWorld;

    /**
     * Encodes the specified SC_ChatWorld message. Does not implicitly {@link SC_ChatWorld.verify|verify} messages.
     * @param message SC_ChatWorld message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChatWorld, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChatWorld message, length delimited. Does not implicitly {@link SC_ChatWorld.verify|verify} messages.
     * @param message SC_ChatWorld message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChatWorld, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChatWorld message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChatWorld
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChatWorld;

    /**
     * Decodes a SC_ChatWorld message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChatWorld
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChatWorld;

    /**
     * Verifies a SC_ChatWorld message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChatWorld message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChatWorld
     */
    public static fromObject(object: { [k: string]: any }): SC_ChatWorld;

    /**
     * Creates a plain object from a SC_ChatWorld message. Also converts values to other types if specified.
     * @param message SC_ChatWorld
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChatWorld, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChatWorld to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChatWorld {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1057
    }
}

/** Properties of a CS_ChatPrivate. */
export interface ICS_ChatPrivate {

    /** CS_ChatPrivate chatContent */
    chatContent?: (string|null);

    /** CS_ChatPrivate privateName */
    privateName?: (string|null);
}

/** Represents a CS_ChatPrivate. */
export class CS_ChatPrivate implements ICS_ChatPrivate {

    /**
     * Constructs a new CS_ChatPrivate.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChatPrivate);

    /** CS_ChatPrivate chatContent. */
    public chatContent: string;

    /** CS_ChatPrivate privateName. */
    public privateName: string;

    /**
     * Creates a new CS_ChatPrivate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChatPrivate instance
     */
    public static create(properties?: ICS_ChatPrivate): CS_ChatPrivate;

    /**
     * Encodes the specified CS_ChatPrivate message. Does not implicitly {@link CS_ChatPrivate.verify|verify} messages.
     * @param message CS_ChatPrivate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChatPrivate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChatPrivate message, length delimited. Does not implicitly {@link CS_ChatPrivate.verify|verify} messages.
     * @param message CS_ChatPrivate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChatPrivate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChatPrivate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChatPrivate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChatPrivate;

    /**
     * Decodes a CS_ChatPrivate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChatPrivate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChatPrivate;

    /**
     * Verifies a CS_ChatPrivate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChatPrivate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChatPrivate
     */
    public static fromObject(object: { [k: string]: any }): CS_ChatPrivate;

    /**
     * Creates a plain object from a CS_ChatPrivate message. Also converts values to other types if specified.
     * @param message CS_ChatPrivate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChatPrivate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChatPrivate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChatPrivate {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1058
    }
}

/** Properties of a SC_ChatPrivate. */
export interface ISC_ChatPrivate {

    /** SC_ChatPrivate chatContent */
    chatContent?: (string|null);

    /** SC_ChatPrivate privateName */
    privateName?: (string|null);

    /** SC_ChatPrivate chatName */
    chatName?: (string|null);
}

/** Represents a SC_ChatPrivate. */
export class SC_ChatPrivate implements ISC_ChatPrivate {

    /**
     * Constructs a new SC_ChatPrivate.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChatPrivate);

    /** SC_ChatPrivate chatContent. */
    public chatContent: string;

    /** SC_ChatPrivate privateName. */
    public privateName: string;

    /** SC_ChatPrivate chatName. */
    public chatName: string;

    /**
     * Creates a new SC_ChatPrivate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChatPrivate instance
     */
    public static create(properties?: ISC_ChatPrivate): SC_ChatPrivate;

    /**
     * Encodes the specified SC_ChatPrivate message. Does not implicitly {@link SC_ChatPrivate.verify|verify} messages.
     * @param message SC_ChatPrivate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChatPrivate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChatPrivate message, length delimited. Does not implicitly {@link SC_ChatPrivate.verify|verify} messages.
     * @param message SC_ChatPrivate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChatPrivate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChatPrivate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChatPrivate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChatPrivate;

    /**
     * Decodes a SC_ChatPrivate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChatPrivate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChatPrivate;

    /**
     * Verifies a SC_ChatPrivate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChatPrivate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChatPrivate
     */
    public static fromObject(object: { [k: string]: any }): SC_ChatPrivate;

    /**
     * Creates a plain object from a SC_ChatPrivate message. Also converts values to other types if specified.
     * @param message SC_ChatPrivate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChatPrivate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChatPrivate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChatPrivate {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1059
    }
}

/** Properties of a CS_ChatServer. */
export interface ICS_ChatServer {

    /** CS_ChatServer chatContent */
    chatContent?: (string|null);
}

/** Represents a CS_ChatServer. */
export class CS_ChatServer implements ICS_ChatServer {

    /**
     * Constructs a new CS_ChatServer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChatServer);

    /** CS_ChatServer chatContent. */
    public chatContent: string;

    /**
     * Creates a new CS_ChatServer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChatServer instance
     */
    public static create(properties?: ICS_ChatServer): CS_ChatServer;

    /**
     * Encodes the specified CS_ChatServer message. Does not implicitly {@link CS_ChatServer.verify|verify} messages.
     * @param message CS_ChatServer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChatServer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChatServer message, length delimited. Does not implicitly {@link CS_ChatServer.verify|verify} messages.
     * @param message CS_ChatServer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChatServer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChatServer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChatServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChatServer;

    /**
     * Decodes a CS_ChatServer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChatServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChatServer;

    /**
     * Verifies a CS_ChatServer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChatServer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChatServer
     */
    public static fromObject(object: { [k: string]: any }): CS_ChatServer;

    /**
     * Creates a plain object from a CS_ChatServer message. Also converts values to other types if specified.
     * @param message CS_ChatServer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChatServer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChatServer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChatServer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1060
    }
}

/** Properties of a SC_ChatServer. */
export interface ISC_ChatServer {

    /** SC_ChatServer chatContent */
    chatContent?: (string|null);

    /** SC_ChatServer chatGuid */
    chatGuid?: (number|null);

    /** SC_ChatServer chatName */
    chatName?: (string|null);
}

/** Represents a SC_ChatServer. */
export class SC_ChatServer implements ISC_ChatServer {

    /**
     * Constructs a new SC_ChatServer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChatServer);

    /** SC_ChatServer chatContent. */
    public chatContent: string;

    /** SC_ChatServer chatGuid. */
    public chatGuid: number;

    /** SC_ChatServer chatName. */
    public chatName: string;

    /**
     * Creates a new SC_ChatServer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChatServer instance
     */
    public static create(properties?: ISC_ChatServer): SC_ChatServer;

    /**
     * Encodes the specified SC_ChatServer message. Does not implicitly {@link SC_ChatServer.verify|verify} messages.
     * @param message SC_ChatServer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChatServer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChatServer message, length delimited. Does not implicitly {@link SC_ChatServer.verify|verify} messages.
     * @param message SC_ChatServer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChatServer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChatServer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChatServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChatServer;

    /**
     * Decodes a SC_ChatServer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChatServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChatServer;

    /**
     * Verifies a SC_ChatServer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChatServer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChatServer
     */
    public static fromObject(object: { [k: string]: any }): SC_ChatServer;

    /**
     * Creates a plain object from a SC_ChatServer message. Also converts values to other types if specified.
     * @param message SC_ChatServer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChatServer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChatServer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChatServer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1061
    }
}

/** Properties of a CS_ChatRoom. */
export interface ICS_ChatRoom {

    /** CS_ChatRoom chatContent */
    chatContent?: (string|null);
}

/** Represents a CS_ChatRoom. */
export class CS_ChatRoom implements ICS_ChatRoom {

    /**
     * Constructs a new CS_ChatRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChatRoom);

    /** CS_ChatRoom chatContent. */
    public chatContent: string;

    /**
     * Creates a new CS_ChatRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChatRoom instance
     */
    public static create(properties?: ICS_ChatRoom): CS_ChatRoom;

    /**
     * Encodes the specified CS_ChatRoom message. Does not implicitly {@link CS_ChatRoom.verify|verify} messages.
     * @param message CS_ChatRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChatRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChatRoom message, length delimited. Does not implicitly {@link CS_ChatRoom.verify|verify} messages.
     * @param message CS_ChatRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChatRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChatRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChatRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChatRoom;

    /**
     * Decodes a CS_ChatRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChatRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChatRoom;

    /**
     * Verifies a CS_ChatRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChatRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChatRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_ChatRoom;

    /**
     * Creates a plain object from a CS_ChatRoom message. Also converts values to other types if specified.
     * @param message CS_ChatRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChatRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChatRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChatRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1062
    }
}

/** Properties of a SC_ChatRoom. */
export interface ISC_ChatRoom {

    /** SC_ChatRoom chatContent */
    chatContent?: (string|null);

    /** SC_ChatRoom chatGuid */
    chatGuid?: (number|null);

    /** SC_ChatRoom chatName */
    chatName?: (string|null);
}

/** Represents a SC_ChatRoom. */
export class SC_ChatRoom implements ISC_ChatRoom {

    /**
     * Constructs a new SC_ChatRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChatRoom);

    /** SC_ChatRoom chatContent. */
    public chatContent: string;

    /** SC_ChatRoom chatGuid. */
    public chatGuid: number;

    /** SC_ChatRoom chatName. */
    public chatName: string;

    /**
     * Creates a new SC_ChatRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChatRoom instance
     */
    public static create(properties?: ISC_ChatRoom): SC_ChatRoom;

    /**
     * Encodes the specified SC_ChatRoom message. Does not implicitly {@link SC_ChatRoom.verify|verify} messages.
     * @param message SC_ChatRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChatRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChatRoom message, length delimited. Does not implicitly {@link SC_ChatRoom.verify|verify} messages.
     * @param message SC_ChatRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChatRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChatRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChatRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChatRoom;

    /**
     * Decodes a SC_ChatRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChatRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChatRoom;

    /**
     * Verifies a SC_ChatRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChatRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChatRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_ChatRoom;

    /**
     * Creates a plain object from a SC_ChatRoom message. Also converts values to other types if specified.
     * @param message SC_ChatRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChatRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChatRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChatRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1063
    }
}

/** Properties of a CS_ChatTable. */
export interface ICS_ChatTable {

    /** CS_ChatTable chatContent */
    chatContent?: (string|null);
}

/** Represents a CS_ChatTable. */
export class CS_ChatTable implements ICS_ChatTable {

    /**
     * Constructs a new CS_ChatTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChatTable);

    /** CS_ChatTable chatContent. */
    public chatContent: string;

    /**
     * Creates a new CS_ChatTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChatTable instance
     */
    public static create(properties?: ICS_ChatTable): CS_ChatTable;

    /**
     * Encodes the specified CS_ChatTable message. Does not implicitly {@link CS_ChatTable.verify|verify} messages.
     * @param message CS_ChatTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChatTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChatTable message, length delimited. Does not implicitly {@link CS_ChatTable.verify|verify} messages.
     * @param message CS_ChatTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChatTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChatTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChatTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChatTable;

    /**
     * Decodes a CS_ChatTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChatTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChatTable;

    /**
     * Verifies a CS_ChatTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChatTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChatTable
     */
    public static fromObject(object: { [k: string]: any }): CS_ChatTable;

    /**
     * Creates a plain object from a CS_ChatTable message. Also converts values to other types if specified.
     * @param message CS_ChatTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChatTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChatTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChatTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1064
    }
}

/** Properties of a SC_ChatTable. */
export interface ISC_ChatTable {

    /** SC_ChatTable chatContent */
    chatContent?: (string|null);

    /** SC_ChatTable chatGuid */
    chatGuid?: (number|null);

    /** SC_ChatTable chatName */
    chatName?: (string|null);
}

/** Represents a SC_ChatTable. */
export class SC_ChatTable implements ISC_ChatTable {

    /**
     * Constructs a new SC_ChatTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChatTable);

    /** SC_ChatTable chatContent. */
    public chatContent: string;

    /** SC_ChatTable chatGuid. */
    public chatGuid: number;

    /** SC_ChatTable chatName. */
    public chatName: string;

    /**
     * Creates a new SC_ChatTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChatTable instance
     */
    public static create(properties?: ISC_ChatTable): SC_ChatTable;

    /**
     * Encodes the specified SC_ChatTable message. Does not implicitly {@link SC_ChatTable.verify|verify} messages.
     * @param message SC_ChatTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChatTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChatTable message, length delimited. Does not implicitly {@link SC_ChatTable.verify|verify} messages.
     * @param message SC_ChatTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChatTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChatTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChatTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChatTable;

    /**
     * Decodes a SC_ChatTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChatTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChatTable;

    /**
     * Verifies a SC_ChatTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChatTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChatTable
     */
    public static fromObject(object: { [k: string]: any }): SC_ChatTable;

    /**
     * Creates a plain object from a SC_ChatTable message. Also converts values to other types if specified.
     * @param message SC_ChatTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChatTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChatTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChatTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1065
    }
}

/** Properties of a SC_Marquee. */
export interface ISC_Marquee {

    /** SC_Marquee content */
    content?: (string|null);
}

/** Represents a SC_Marquee. */
export class SC_Marquee implements ISC_Marquee {

    /**
     * Constructs a new SC_Marquee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Marquee);

    /** SC_Marquee content. */
    public content: string;

    /**
     * Creates a new SC_Marquee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Marquee instance
     */
    public static create(properties?: ISC_Marquee): SC_Marquee;

    /**
     * Encodes the specified SC_Marquee message. Does not implicitly {@link SC_Marquee.verify|verify} messages.
     * @param message SC_Marquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Marquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Marquee message, length delimited. Does not implicitly {@link SC_Marquee.verify|verify} messages.
     * @param message SC_Marquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Marquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Marquee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Marquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Marquee;

    /**
     * Decodes a SC_Marquee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Marquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Marquee;

    /**
     * Verifies a SC_Marquee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Marquee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Marquee
     */
    public static fromObject(object: { [k: string]: any }): SC_Marquee;

    /**
     * Creates a plain object from a SC_Marquee message. Also converts values to other types if specified.
     * @param message SC_Marquee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Marquee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Marquee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Marquee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1066
    }
}

/** Properties of a CS_QueryPlayerMarquee. */
export interface ICS_QueryPlayerMarquee {
}

/** Represents a CS_QueryPlayerMarquee. */
export class CS_QueryPlayerMarquee implements ICS_QueryPlayerMarquee {

    /**
     * Constructs a new CS_QueryPlayerMarquee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_QueryPlayerMarquee);

    /**
     * Creates a new CS_QueryPlayerMarquee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_QueryPlayerMarquee instance
     */
    public static create(properties?: ICS_QueryPlayerMarquee): CS_QueryPlayerMarquee;

    /**
     * Encodes the specified CS_QueryPlayerMarquee message. Does not implicitly {@link CS_QueryPlayerMarquee.verify|verify} messages.
     * @param message CS_QueryPlayerMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_QueryPlayerMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_QueryPlayerMarquee message, length delimited. Does not implicitly {@link CS_QueryPlayerMarquee.verify|verify} messages.
     * @param message CS_QueryPlayerMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_QueryPlayerMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_QueryPlayerMarquee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_QueryPlayerMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_QueryPlayerMarquee;

    /**
     * Decodes a CS_QueryPlayerMarquee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_QueryPlayerMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_QueryPlayerMarquee;

    /**
     * Verifies a CS_QueryPlayerMarquee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_QueryPlayerMarquee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_QueryPlayerMarquee
     */
    public static fromObject(object: { [k: string]: any }): CS_QueryPlayerMarquee;

    /**
     * Creates a plain object from a CS_QueryPlayerMarquee message. Also converts values to other types if specified.
     * @param message CS_QueryPlayerMarquee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_QueryPlayerMarquee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_QueryPlayerMarquee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_QueryPlayerMarquee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1067
    }
}

/** Properties of a SC_QueryPlayerMarquee. */
export interface ISC_QueryPlayerMarquee {

    /** SC_QueryPlayerMarquee pbMsgData */
    pbMsgData?: (IMarquee[]|null);
}

/** Represents a SC_QueryPlayerMarquee. */
export class SC_QueryPlayerMarquee implements ISC_QueryPlayerMarquee {

    /**
     * Constructs a new SC_QueryPlayerMarquee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_QueryPlayerMarquee);

    /** SC_QueryPlayerMarquee pbMsgData. */
    public pbMsgData: IMarquee[];

    /**
     * Creates a new SC_QueryPlayerMarquee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_QueryPlayerMarquee instance
     */
    public static create(properties?: ISC_QueryPlayerMarquee): SC_QueryPlayerMarquee;

    /**
     * Encodes the specified SC_QueryPlayerMarquee message. Does not implicitly {@link SC_QueryPlayerMarquee.verify|verify} messages.
     * @param message SC_QueryPlayerMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_QueryPlayerMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_QueryPlayerMarquee message, length delimited. Does not implicitly {@link SC_QueryPlayerMarquee.verify|verify} messages.
     * @param message SC_QueryPlayerMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_QueryPlayerMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_QueryPlayerMarquee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_QueryPlayerMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_QueryPlayerMarquee;

    /**
     * Decodes a SC_QueryPlayerMarquee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_QueryPlayerMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_QueryPlayerMarquee;

    /**
     * Verifies a SC_QueryPlayerMarquee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_QueryPlayerMarquee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_QueryPlayerMarquee
     */
    public static fromObject(object: { [k: string]: any }): SC_QueryPlayerMarquee;

    /**
     * Creates a plain object from a SC_QueryPlayerMarquee message. Also converts values to other types if specified.
     * @param message SC_QueryPlayerMarquee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_QueryPlayerMarquee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_QueryPlayerMarquee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_QueryPlayerMarquee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1068
    }
}

/** Properties of a SC_NewMarquee. */
export interface ISC_NewMarquee {

    /** SC_NewMarquee pbMsgData */
    pbMsgData?: (IMarquee[]|null);
}

/** Represents a SC_NewMarquee. */
export class SC_NewMarquee implements ISC_NewMarquee {

    /**
     * Constructs a new SC_NewMarquee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NewMarquee);

    /** SC_NewMarquee pbMsgData. */
    public pbMsgData: IMarquee[];

    /**
     * Creates a new SC_NewMarquee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NewMarquee instance
     */
    public static create(properties?: ISC_NewMarquee): SC_NewMarquee;

    /**
     * Encodes the specified SC_NewMarquee message. Does not implicitly {@link SC_NewMarquee.verify|verify} messages.
     * @param message SC_NewMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NewMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NewMarquee message, length delimited. Does not implicitly {@link SC_NewMarquee.verify|verify} messages.
     * @param message SC_NewMarquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NewMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NewMarquee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NewMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NewMarquee;

    /**
     * Decodes a SC_NewMarquee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NewMarquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NewMarquee;

    /**
     * Verifies a SC_NewMarquee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NewMarquee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NewMarquee
     */
    public static fromObject(object: { [k: string]: any }): SC_NewMarquee;

    /**
     * Creates a plain object from a SC_NewMarquee message. Also converts values to other types if specified.
     * @param message SC_NewMarquee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NewMarquee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NewMarquee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NewMarquee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1069
    }
}

/** Properties of a CS_SendMail. */
export interface ICS_SendMail {

    /** CS_SendMail mail */
    mail?: (IMailInfo|null);
}

/** Represents a CS_SendMail. */
export class CS_SendMail implements ICS_SendMail {

    /**
     * Constructs a new CS_SendMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SendMail);

    /** CS_SendMail mail. */
    public mail?: (IMailInfo|null);

    /**
     * Creates a new CS_SendMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SendMail instance
     */
    public static create(properties?: ICS_SendMail): CS_SendMail;

    /**
     * Encodes the specified CS_SendMail message. Does not implicitly {@link CS_SendMail.verify|verify} messages.
     * @param message CS_SendMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SendMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SendMail message, length delimited. Does not implicitly {@link CS_SendMail.verify|verify} messages.
     * @param message CS_SendMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SendMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SendMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SendMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SendMail;

    /**
     * Decodes a CS_SendMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SendMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SendMail;

    /**
     * Verifies a CS_SendMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SendMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SendMail
     */
    public static fromObject(object: { [k: string]: any }): CS_SendMail;

    /**
     * Creates a plain object from a CS_SendMail message. Also converts values to other types if specified.
     * @param message CS_SendMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SendMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SendMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SendMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1070
    }
}

/** Properties of a SC_SendMail. */
export interface ISC_SendMail {

    /** SC_SendMail result */
    result?: (number|null);

    /** SC_SendMail mail */
    mail?: (IMailInfo|null);
}

/** Represents a SC_SendMail. */
export class SC_SendMail implements ISC_SendMail {

    /**
     * Constructs a new SC_SendMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SendMail);

    /** SC_SendMail result. */
    public result: number;

    /** SC_SendMail mail. */
    public mail?: (IMailInfo|null);

    /**
     * Creates a new SC_SendMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SendMail instance
     */
    public static create(properties?: ISC_SendMail): SC_SendMail;

    /**
     * Encodes the specified SC_SendMail message. Does not implicitly {@link SC_SendMail.verify|verify} messages.
     * @param message SC_SendMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SendMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SendMail message, length delimited. Does not implicitly {@link SC_SendMail.verify|verify} messages.
     * @param message SC_SendMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SendMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SendMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SendMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SendMail;

    /**
     * Decodes a SC_SendMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SendMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SendMail;

    /**
     * Verifies a SC_SendMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SendMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SendMail
     */
    public static fromObject(object: { [k: string]: any }): SC_SendMail;

    /**
     * Creates a plain object from a SC_SendMail message. Also converts values to other types if specified.
     * @param message SC_SendMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SendMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SendMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SendMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1071
    }
}

/** Properties of a SC_ReceiveMail. */
export interface ISC_ReceiveMail {

    /** SC_ReceiveMail mail */
    mail?: (IMailInfo|null);
}

/** Represents a SC_ReceiveMail. */
export class SC_ReceiveMail implements ISC_ReceiveMail {

    /**
     * Constructs a new SC_ReceiveMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReceiveMail);

    /** SC_ReceiveMail mail. */
    public mail?: (IMailInfo|null);

    /**
     * Creates a new SC_ReceiveMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReceiveMail instance
     */
    public static create(properties?: ISC_ReceiveMail): SC_ReceiveMail;

    /**
     * Encodes the specified SC_ReceiveMail message. Does not implicitly {@link SC_ReceiveMail.verify|verify} messages.
     * @param message SC_ReceiveMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReceiveMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReceiveMail message, length delimited. Does not implicitly {@link SC_ReceiveMail.verify|verify} messages.
     * @param message SC_ReceiveMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReceiveMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReceiveMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReceiveMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReceiveMail;

    /**
     * Decodes a SC_ReceiveMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReceiveMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReceiveMail;

    /**
     * Verifies a SC_ReceiveMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReceiveMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReceiveMail
     */
    public static fromObject(object: { [k: string]: any }): SC_ReceiveMail;

    /**
     * Creates a plain object from a SC_ReceiveMail message. Also converts values to other types if specified.
     * @param message SC_ReceiveMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReceiveMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReceiveMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReceiveMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1072
    }
}

/** Properties of a CS_DelMail. */
export interface ICS_DelMail {

    /** CS_DelMail mailIds */
    mailIds?: (string[]|null);
}

/** Represents a CS_DelMail. */
export class CS_DelMail implements ICS_DelMail {

    /**
     * Constructs a new CS_DelMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DelMail);

    /** CS_DelMail mailIds. */
    public mailIds: string[];

    /**
     * Creates a new CS_DelMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DelMail instance
     */
    public static create(properties?: ICS_DelMail): CS_DelMail;

    /**
     * Encodes the specified CS_DelMail message. Does not implicitly {@link CS_DelMail.verify|verify} messages.
     * @param message CS_DelMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DelMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DelMail message, length delimited. Does not implicitly {@link CS_DelMail.verify|verify} messages.
     * @param message CS_DelMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DelMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DelMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DelMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DelMail;

    /**
     * Decodes a CS_DelMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DelMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DelMail;

    /**
     * Verifies a CS_DelMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DelMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DelMail
     */
    public static fromObject(object: { [k: string]: any }): CS_DelMail;

    /**
     * Creates a plain object from a CS_DelMail message. Also converts values to other types if specified.
     * @param message CS_DelMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DelMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DelMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DelMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1073
    }
}

/** Properties of a SC_DelMail. */
export interface ISC_DelMail {

    /** SC_DelMail result */
    result?: (number|null);

    /** SC_DelMail mailIds */
    mailIds?: (string[]|null);
}

/** Represents a SC_DelMail. */
export class SC_DelMail implements ISC_DelMail {

    /**
     * Constructs a new SC_DelMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DelMail);

    /** SC_DelMail result. */
    public result: number;

    /** SC_DelMail mailIds. */
    public mailIds: string[];

    /**
     * Creates a new SC_DelMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DelMail instance
     */
    public static create(properties?: ISC_DelMail): SC_DelMail;

    /**
     * Encodes the specified SC_DelMail message. Does not implicitly {@link SC_DelMail.verify|verify} messages.
     * @param message SC_DelMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DelMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DelMail message, length delimited. Does not implicitly {@link SC_DelMail.verify|verify} messages.
     * @param message SC_DelMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DelMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DelMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DelMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DelMail;

    /**
     * Decodes a SC_DelMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DelMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DelMail;

    /**
     * Verifies a SC_DelMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DelMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DelMail
     */
    public static fromObject(object: { [k: string]: any }): SC_DelMail;

    /**
     * Creates a plain object from a SC_DelMail message. Also converts values to other types if specified.
     * @param message SC_DelMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DelMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DelMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DelMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1074
    }
}

/** Properties of a CS_PullMailAttachment. */
export interface ICS_PullMailAttachment {

    /** CS_PullMailAttachment mailId */
    mailId?: (string|null);
}

/** Represents a CS_PullMailAttachment. */
export class CS_PullMailAttachment implements ICS_PullMailAttachment {

    /**
     * Constructs a new CS_PullMailAttachment.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullMailAttachment);

    /** CS_PullMailAttachment mailId. */
    public mailId: string;

    /**
     * Creates a new CS_PullMailAttachment instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullMailAttachment instance
     */
    public static create(properties?: ICS_PullMailAttachment): CS_PullMailAttachment;

    /**
     * Encodes the specified CS_PullMailAttachment message. Does not implicitly {@link CS_PullMailAttachment.verify|verify} messages.
     * @param message CS_PullMailAttachment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullMailAttachment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullMailAttachment message, length delimited. Does not implicitly {@link CS_PullMailAttachment.verify|verify} messages.
     * @param message CS_PullMailAttachment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullMailAttachment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullMailAttachment message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullMailAttachment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullMailAttachment;

    /**
     * Decodes a CS_PullMailAttachment message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullMailAttachment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullMailAttachment;

    /**
     * Verifies a CS_PullMailAttachment message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullMailAttachment message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullMailAttachment
     */
    public static fromObject(object: { [k: string]: any }): CS_PullMailAttachment;

    /**
     * Creates a plain object from a CS_PullMailAttachment message. Also converts values to other types if specified.
     * @param message CS_PullMailAttachment
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullMailAttachment, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullMailAttachment to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullMailAttachment {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1075
    }
}

/** Properties of a SC_PullMailAttachment. */
export interface ISC_PullMailAttachment {

    /** SC_PullMailAttachment result */
    result?: (number|null);

    /** SC_PullMailAttachment mailId */
    mailId?: (string|null);

    /** SC_PullMailAttachment pbAttachment */
    pbAttachment?: (IItemInfo[]|null);
}

/** Represents a SC_PullMailAttachment. */
export class SC_PullMailAttachment implements ISC_PullMailAttachment {

    /**
     * Constructs a new SC_PullMailAttachment.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullMailAttachment);

    /** SC_PullMailAttachment result. */
    public result: number;

    /** SC_PullMailAttachment mailId. */
    public mailId: string;

    /** SC_PullMailAttachment pbAttachment. */
    public pbAttachment: IItemInfo[];

    /**
     * Creates a new SC_PullMailAttachment instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullMailAttachment instance
     */
    public static create(properties?: ISC_PullMailAttachment): SC_PullMailAttachment;

    /**
     * Encodes the specified SC_PullMailAttachment message. Does not implicitly {@link SC_PullMailAttachment.verify|verify} messages.
     * @param message SC_PullMailAttachment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullMailAttachment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullMailAttachment message, length delimited. Does not implicitly {@link SC_PullMailAttachment.verify|verify} messages.
     * @param message SC_PullMailAttachment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullMailAttachment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullMailAttachment message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullMailAttachment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullMailAttachment;

    /**
     * Decodes a SC_PullMailAttachment message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullMailAttachment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullMailAttachment;

    /**
     * Verifies a SC_PullMailAttachment message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullMailAttachment message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullMailAttachment
     */
    public static fromObject(object: { [k: string]: any }): SC_PullMailAttachment;

    /**
     * Creates a plain object from a SC_PullMailAttachment message. Also converts values to other types if specified.
     * @param message SC_PullMailAttachment
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullMailAttachment, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullMailAttachment to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullMailAttachment {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1076
    }
}

/** Properties of a CS_PullRewardLogin. */
export interface ICS_PullRewardLogin {
}

/** Represents a CS_PullRewardLogin. */
export class CS_PullRewardLogin implements ICS_PullRewardLogin {

    /**
     * Constructs a new CS_PullRewardLogin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullRewardLogin);

    /**
     * Creates a new CS_PullRewardLogin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullRewardLogin instance
     */
    public static create(properties?: ICS_PullRewardLogin): CS_PullRewardLogin;

    /**
     * Encodes the specified CS_PullRewardLogin message. Does not implicitly {@link CS_PullRewardLogin.verify|verify} messages.
     * @param message CS_PullRewardLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullRewardLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullRewardLogin message, length delimited. Does not implicitly {@link CS_PullRewardLogin.verify|verify} messages.
     * @param message CS_PullRewardLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullRewardLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullRewardLogin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullRewardLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullRewardLogin;

    /**
     * Decodes a CS_PullRewardLogin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullRewardLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullRewardLogin;

    /**
     * Verifies a CS_PullRewardLogin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullRewardLogin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullRewardLogin
     */
    public static fromObject(object: { [k: string]: any }): CS_PullRewardLogin;

    /**
     * Creates a plain object from a CS_PullRewardLogin message. Also converts values to other types if specified.
     * @param message CS_PullRewardLogin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullRewardLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullRewardLogin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullRewardLogin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1077
    }
}

/** Properties of a SC_PullRewardLogin. */
export interface ISC_PullRewardLogin {

    /** SC_PullRewardLogin result */
    result?: (number|null);

    /** SC_PullRewardLogin money */
    money?: (number|Long|null);
}

/** Represents a SC_PullRewardLogin. */
export class SC_PullRewardLogin implements ISC_PullRewardLogin {

    /**
     * Constructs a new SC_PullRewardLogin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullRewardLogin);

    /** SC_PullRewardLogin result. */
    public result: number;

    /** SC_PullRewardLogin money. */
    public money: (number|Long);

    /**
     * Creates a new SC_PullRewardLogin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullRewardLogin instance
     */
    public static create(properties?: ISC_PullRewardLogin): SC_PullRewardLogin;

    /**
     * Encodes the specified SC_PullRewardLogin message. Does not implicitly {@link SC_PullRewardLogin.verify|verify} messages.
     * @param message SC_PullRewardLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullRewardLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullRewardLogin message, length delimited. Does not implicitly {@link SC_PullRewardLogin.verify|verify} messages.
     * @param message SC_PullRewardLogin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullRewardLogin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullRewardLogin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullRewardLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullRewardLogin;

    /**
     * Decodes a SC_PullRewardLogin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullRewardLogin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullRewardLogin;

    /**
     * Verifies a SC_PullRewardLogin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullRewardLogin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullRewardLogin
     */
    public static fromObject(object: { [k: string]: any }): SC_PullRewardLogin;

    /**
     * Creates a plain object from a SC_PullRewardLogin message. Also converts values to other types if specified.
     * @param message SC_PullRewardLogin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullRewardLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullRewardLogin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullRewardLogin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1078
    }
}

/** Properties of a CS_PullRewardOnline. */
export interface ICS_PullRewardOnline {
}

/** Represents a CS_PullRewardOnline. */
export class CS_PullRewardOnline implements ICS_PullRewardOnline {

    /**
     * Constructs a new CS_PullRewardOnline.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullRewardOnline);

    /**
     * Creates a new CS_PullRewardOnline instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullRewardOnline instance
     */
    public static create(properties?: ICS_PullRewardOnline): CS_PullRewardOnline;

    /**
     * Encodes the specified CS_PullRewardOnline message. Does not implicitly {@link CS_PullRewardOnline.verify|verify} messages.
     * @param message CS_PullRewardOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullRewardOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullRewardOnline message, length delimited. Does not implicitly {@link CS_PullRewardOnline.verify|verify} messages.
     * @param message CS_PullRewardOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullRewardOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullRewardOnline message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullRewardOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullRewardOnline;

    /**
     * Decodes a CS_PullRewardOnline message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullRewardOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullRewardOnline;

    /**
     * Verifies a CS_PullRewardOnline message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullRewardOnline message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullRewardOnline
     */
    public static fromObject(object: { [k: string]: any }): CS_PullRewardOnline;

    /**
     * Creates a plain object from a CS_PullRewardOnline message. Also converts values to other types if specified.
     * @param message CS_PullRewardOnline
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullRewardOnline, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullRewardOnline to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullRewardOnline {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1079
    }
}

/** Properties of a SC_PullRewardOnline. */
export interface ISC_PullRewardOnline {

    /** SC_PullRewardOnline result */
    result?: (number|null);

    /** SC_PullRewardOnline money */
    money?: (number|Long|null);
}

/** Represents a SC_PullRewardOnline. */
export class SC_PullRewardOnline implements ISC_PullRewardOnline {

    /**
     * Constructs a new SC_PullRewardOnline.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullRewardOnline);

    /** SC_PullRewardOnline result. */
    public result: number;

    /** SC_PullRewardOnline money. */
    public money: (number|Long);

    /**
     * Creates a new SC_PullRewardOnline instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullRewardOnline instance
     */
    public static create(properties?: ISC_PullRewardOnline): SC_PullRewardOnline;

    /**
     * Encodes the specified SC_PullRewardOnline message. Does not implicitly {@link SC_PullRewardOnline.verify|verify} messages.
     * @param message SC_PullRewardOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullRewardOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullRewardOnline message, length delimited. Does not implicitly {@link SC_PullRewardOnline.verify|verify} messages.
     * @param message SC_PullRewardOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullRewardOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullRewardOnline message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullRewardOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullRewardOnline;

    /**
     * Decodes a SC_PullRewardOnline message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullRewardOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullRewardOnline;

    /**
     * Verifies a SC_PullRewardOnline message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullRewardOnline message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullRewardOnline
     */
    public static fromObject(object: { [k: string]: any }): SC_PullRewardOnline;

    /**
     * Creates a plain object from a SC_PullRewardOnline message. Also converts values to other types if specified.
     * @param message SC_PullRewardOnline
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullRewardOnline, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullRewardOnline to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullRewardOnline {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1080
    }
}

/** Properties of a CS_PullReliefPayment. */
export interface ICS_PullReliefPayment {
}

/** Represents a CS_PullReliefPayment. */
export class CS_PullReliefPayment implements ICS_PullReliefPayment {

    /**
     * Constructs a new CS_PullReliefPayment.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullReliefPayment);

    /**
     * Creates a new CS_PullReliefPayment instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullReliefPayment instance
     */
    public static create(properties?: ICS_PullReliefPayment): CS_PullReliefPayment;

    /**
     * Encodes the specified CS_PullReliefPayment message. Does not implicitly {@link CS_PullReliefPayment.verify|verify} messages.
     * @param message CS_PullReliefPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullReliefPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullReliefPayment message, length delimited. Does not implicitly {@link CS_PullReliefPayment.verify|verify} messages.
     * @param message CS_PullReliefPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullReliefPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullReliefPayment message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullReliefPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullReliefPayment;

    /**
     * Decodes a CS_PullReliefPayment message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullReliefPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullReliefPayment;

    /**
     * Verifies a CS_PullReliefPayment message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullReliefPayment message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullReliefPayment
     */
    public static fromObject(object: { [k: string]: any }): CS_PullReliefPayment;

    /**
     * Creates a plain object from a CS_PullReliefPayment message. Also converts values to other types if specified.
     * @param message CS_PullReliefPayment
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullReliefPayment, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullReliefPayment to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullReliefPayment {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1081
    }
}

/** Properties of a SC_PullReliefPayment. */
export interface ISC_PullReliefPayment {

    /** SC_PullReliefPayment result */
    result?: (number|null);

    /** SC_PullReliefPayment money */
    money?: (number|Long|null);
}

/** Represents a SC_PullReliefPayment. */
export class SC_PullReliefPayment implements ISC_PullReliefPayment {

    /**
     * Constructs a new SC_PullReliefPayment.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullReliefPayment);

    /** SC_PullReliefPayment result. */
    public result: number;

    /** SC_PullReliefPayment money. */
    public money: (number|Long);

    /**
     * Creates a new SC_PullReliefPayment instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullReliefPayment instance
     */
    public static create(properties?: ISC_PullReliefPayment): SC_PullReliefPayment;

    /**
     * Encodes the specified SC_PullReliefPayment message. Does not implicitly {@link SC_PullReliefPayment.verify|verify} messages.
     * @param message SC_PullReliefPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullReliefPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullReliefPayment message, length delimited. Does not implicitly {@link SC_PullReliefPayment.verify|verify} messages.
     * @param message SC_PullReliefPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullReliefPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullReliefPayment message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullReliefPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullReliefPayment;

    /**
     * Decodes a SC_PullReliefPayment message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullReliefPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullReliefPayment;

    /**
     * Verifies a SC_PullReliefPayment message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullReliefPayment message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullReliefPayment
     */
    public static fromObject(object: { [k: string]: any }): SC_PullReliefPayment;

    /**
     * Creates a plain object from a SC_PullReliefPayment message. Also converts values to other types if specified.
     * @param message SC_PullReliefPayment
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullReliefPayment, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullReliefPayment to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullReliefPayment {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1082
    }
}

/** Properties of a CE_RequestRank. */
export interface ICE_RequestRank {

    /** CE_RequestRank rankType */
    rankType?: (number|null);
}

/** Represents a CE_RequestRank. */
export class CE_RequestRank implements ICE_RequestRank {

    /**
     * Constructs a new CE_RequestRank.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICE_RequestRank);

    /** CE_RequestRank rankType. */
    public rankType: number;

    /**
     * Creates a new CE_RequestRank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CE_RequestRank instance
     */
    public static create(properties?: ICE_RequestRank): CE_RequestRank;

    /**
     * Encodes the specified CE_RequestRank message. Does not implicitly {@link CE_RequestRank.verify|verify} messages.
     * @param message CE_RequestRank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICE_RequestRank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CE_RequestRank message, length delimited. Does not implicitly {@link CE_RequestRank.verify|verify} messages.
     * @param message CE_RequestRank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICE_RequestRank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CE_RequestRank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CE_RequestRank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CE_RequestRank;

    /**
     * Decodes a CE_RequestRank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CE_RequestRank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CE_RequestRank;

    /**
     * Verifies a CE_RequestRank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CE_RequestRank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CE_RequestRank
     */
    public static fromObject(object: { [k: string]: any }): CE_RequestRank;

    /**
     * Creates a plain object from a CE_RequestRank message. Also converts values to other types if specified.
     * @param message CE_RequestRank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CE_RequestRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CE_RequestRank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CE_RequestRank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1083
    }
}

/** Properties of a EC_ReplyRank. */
export interface IEC_ReplyRank {

    /** EC_ReplyRank rankType */
    rankType?: (number|null);

    /** EC_ReplyRank pbRank */
    pbRank?: (IRankItem[]|null);
}

/** Represents a EC_ReplyRank. */
export class EC_ReplyRank implements IEC_ReplyRank {

    /**
     * Constructs a new EC_ReplyRank.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEC_ReplyRank);

    /** EC_ReplyRank rankType. */
    public rankType: number;

    /** EC_ReplyRank pbRank. */
    public pbRank: IRankItem[];

    /**
     * Creates a new EC_ReplyRank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EC_ReplyRank instance
     */
    public static create(properties?: IEC_ReplyRank): EC_ReplyRank;

    /**
     * Encodes the specified EC_ReplyRank message. Does not implicitly {@link EC_ReplyRank.verify|verify} messages.
     * @param message EC_ReplyRank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEC_ReplyRank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EC_ReplyRank message, length delimited. Does not implicitly {@link EC_ReplyRank.verify|verify} messages.
     * @param message EC_ReplyRank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEC_ReplyRank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a EC_ReplyRank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EC_ReplyRank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EC_ReplyRank;

    /**
     * Decodes a EC_ReplyRank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EC_ReplyRank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EC_ReplyRank;

    /**
     * Verifies a EC_ReplyRank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a EC_ReplyRank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EC_ReplyRank
     */
    public static fromObject(object: { [k: string]: any }): EC_ReplyRank;

    /**
     * Creates a plain object from a EC_ReplyRank message. Also converts values to other types if specified.
     * @param message EC_ReplyRank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EC_ReplyRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EC_ReplyRank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace EC_ReplyRank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1084
    }
}

/** Properties of a CS_EnterRoom. */
export interface ICS_EnterRoom {

    /** CS_EnterRoom roomId */
    roomId?: (number|null);
}

/** Represents a CS_EnterRoom. */
export class CS_EnterRoom implements ICS_EnterRoom {

    /**
     * Constructs a new CS_EnterRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_EnterRoom);

    /** CS_EnterRoom roomId. */
    public roomId: number;

    /**
     * Creates a new CS_EnterRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_EnterRoom instance
     */
    public static create(properties?: ICS_EnterRoom): CS_EnterRoom;

    /**
     * Encodes the specified CS_EnterRoom message. Does not implicitly {@link CS_EnterRoom.verify|verify} messages.
     * @param message CS_EnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_EnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_EnterRoom message, length delimited. Does not implicitly {@link CS_EnterRoom.verify|verify} messages.
     * @param message CS_EnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_EnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_EnterRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_EnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_EnterRoom;

    /**
     * Decodes a CS_EnterRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_EnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_EnterRoom;

    /**
     * Verifies a CS_EnterRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_EnterRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_EnterRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_EnterRoom;

    /**
     * Creates a plain object from a CS_EnterRoom message. Also converts values to other types if specified.
     * @param message CS_EnterRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_EnterRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_EnterRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_EnterRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1085
    }
}

/** Properties of a SC_EnterRoom. */
export interface ISC_EnterRoom {

    /** SC_EnterRoom roomId */
    roomId?: (number|null);

    /** SC_EnterRoom result */
    result?: (number|null);
}

/** Represents a SC_EnterRoom. */
export class SC_EnterRoom implements ISC_EnterRoom {

    /**
     * Constructs a new SC_EnterRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_EnterRoom);

    /** SC_EnterRoom roomId. */
    public roomId: number;

    /** SC_EnterRoom result. */
    public result: number;

    /**
     * Creates a new SC_EnterRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_EnterRoom instance
     */
    public static create(properties?: ISC_EnterRoom): SC_EnterRoom;

    /**
     * Encodes the specified SC_EnterRoom message. Does not implicitly {@link SC_EnterRoom.verify|verify} messages.
     * @param message SC_EnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_EnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_EnterRoom message, length delimited. Does not implicitly {@link SC_EnterRoom.verify|verify} messages.
     * @param message SC_EnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_EnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_EnterRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_EnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_EnterRoom;

    /**
     * Decodes a SC_EnterRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_EnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_EnterRoom;

    /**
     * Verifies a SC_EnterRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_EnterRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_EnterRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_EnterRoom;

    /**
     * Creates a plain object from a SC_EnterRoom message. Also converts values to other types if specified.
     * @param message SC_EnterRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_EnterRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_EnterRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_EnterRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1086
    }
}

/** Properties of a SC_NotifyEnterRoom. */
export interface ISC_NotifyEnterRoom {

    /** SC_NotifyEnterRoom roomId */
    roomId?: (number|null);

    /** SC_NotifyEnterRoom guid */
    guid?: (number|null);
}

/** Represents a SC_NotifyEnterRoom. */
export class SC_NotifyEnterRoom implements ISC_NotifyEnterRoom {

    /**
     * Constructs a new SC_NotifyEnterRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyEnterRoom);

    /** SC_NotifyEnterRoom roomId. */
    public roomId: number;

    /** SC_NotifyEnterRoom guid. */
    public guid: number;

    /**
     * Creates a new SC_NotifyEnterRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyEnterRoom instance
     */
    public static create(properties?: ISC_NotifyEnterRoom): SC_NotifyEnterRoom;

    /**
     * Encodes the specified SC_NotifyEnterRoom message. Does not implicitly {@link SC_NotifyEnterRoom.verify|verify} messages.
     * @param message SC_NotifyEnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyEnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyEnterRoom message, length delimited. Does not implicitly {@link SC_NotifyEnterRoom.verify|verify} messages.
     * @param message SC_NotifyEnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyEnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyEnterRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyEnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyEnterRoom;

    /**
     * Decodes a SC_NotifyEnterRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyEnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyEnterRoom;

    /**
     * Verifies a SC_NotifyEnterRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyEnterRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyEnterRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyEnterRoom;

    /**
     * Creates a plain object from a SC_NotifyEnterRoom message. Also converts values to other types if specified.
     * @param message SC_NotifyEnterRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyEnterRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyEnterRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyEnterRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1087
    }
}

/** Properties of a CS_ExitRoom. */
export interface ICS_ExitRoom {
}

/** Represents a CS_ExitRoom. */
export class CS_ExitRoom implements ICS_ExitRoom {

    /**
     * Constructs a new CS_ExitRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ExitRoom);

    /**
     * Creates a new CS_ExitRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ExitRoom instance
     */
    public static create(properties?: ICS_ExitRoom): CS_ExitRoom;

    /**
     * Encodes the specified CS_ExitRoom message. Does not implicitly {@link CS_ExitRoom.verify|verify} messages.
     * @param message CS_ExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ExitRoom message, length delimited. Does not implicitly {@link CS_ExitRoom.verify|verify} messages.
     * @param message CS_ExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ExitRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ExitRoom;

    /**
     * Decodes a CS_ExitRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ExitRoom;

    /**
     * Verifies a CS_ExitRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ExitRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ExitRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_ExitRoom;

    /**
     * Creates a plain object from a CS_ExitRoom message. Also converts values to other types if specified.
     * @param message CS_ExitRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ExitRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ExitRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ExitRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1088
    }
}

/** Properties of a SC_ExitRoom. */
export interface ISC_ExitRoom {

    /** SC_ExitRoom roomId */
    roomId?: (number|null);

    /** SC_ExitRoom result */
    result?: (number|null);
}

/** Represents a SC_ExitRoom. */
export class SC_ExitRoom implements ISC_ExitRoom {

    /**
     * Constructs a new SC_ExitRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ExitRoom);

    /** SC_ExitRoom roomId. */
    public roomId: number;

    /** SC_ExitRoom result. */
    public result: number;

    /**
     * Creates a new SC_ExitRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ExitRoom instance
     */
    public static create(properties?: ISC_ExitRoom): SC_ExitRoom;

    /**
     * Encodes the specified SC_ExitRoom message. Does not implicitly {@link SC_ExitRoom.verify|verify} messages.
     * @param message SC_ExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ExitRoom message, length delimited. Does not implicitly {@link SC_ExitRoom.verify|verify} messages.
     * @param message SC_ExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ExitRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ExitRoom;

    /**
     * Decodes a SC_ExitRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ExitRoom;

    /**
     * Verifies a SC_ExitRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ExitRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ExitRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_ExitRoom;

    /**
     * Creates a plain object from a SC_ExitRoom message. Also converts values to other types if specified.
     * @param message SC_ExitRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ExitRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ExitRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ExitRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1089
    }
}

/** Properties of a SC_NotifyExitRoom. */
export interface ISC_NotifyExitRoom {

    /** SC_NotifyExitRoom roomId */
    roomId?: (number|null);

    /** SC_NotifyExitRoom guid */
    guid?: (number|null);
}

/** Represents a SC_NotifyExitRoom. */
export class SC_NotifyExitRoom implements ISC_NotifyExitRoom {

    /**
     * Constructs a new SC_NotifyExitRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyExitRoom);

    /** SC_NotifyExitRoom roomId. */
    public roomId: number;

    /** SC_NotifyExitRoom guid. */
    public guid: number;

    /**
     * Creates a new SC_NotifyExitRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyExitRoom instance
     */
    public static create(properties?: ISC_NotifyExitRoom): SC_NotifyExitRoom;

    /**
     * Encodes the specified SC_NotifyExitRoom message. Does not implicitly {@link SC_NotifyExitRoom.verify|verify} messages.
     * @param message SC_NotifyExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyExitRoom message, length delimited. Does not implicitly {@link SC_NotifyExitRoom.verify|verify} messages.
     * @param message SC_NotifyExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyExitRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyExitRoom;

    /**
     * Decodes a SC_NotifyExitRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyExitRoom;

    /**
     * Verifies a SC_NotifyExitRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyExitRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyExitRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyExitRoom;

    /**
     * Creates a plain object from a SC_NotifyExitRoom message. Also converts values to other types if specified.
     * @param message SC_NotifyExitRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyExitRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyExitRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyExitRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1090
    }
}

/** Properties of a CS_AutoEnterRoom. */
export interface ICS_AutoEnterRoom {
}

/** Represents a CS_AutoEnterRoom. */
export class CS_AutoEnterRoom implements ICS_AutoEnterRoom {

    /**
     * Constructs a new CS_AutoEnterRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_AutoEnterRoom);

    /**
     * Creates a new CS_AutoEnterRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_AutoEnterRoom instance
     */
    public static create(properties?: ICS_AutoEnterRoom): CS_AutoEnterRoom;

    /**
     * Encodes the specified CS_AutoEnterRoom message. Does not implicitly {@link CS_AutoEnterRoom.verify|verify} messages.
     * @param message CS_AutoEnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_AutoEnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_AutoEnterRoom message, length delimited. Does not implicitly {@link CS_AutoEnterRoom.verify|verify} messages.
     * @param message CS_AutoEnterRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_AutoEnterRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_AutoEnterRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_AutoEnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_AutoEnterRoom;

    /**
     * Decodes a CS_AutoEnterRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_AutoEnterRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_AutoEnterRoom;

    /**
     * Verifies a CS_AutoEnterRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_AutoEnterRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_AutoEnterRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_AutoEnterRoom;

    /**
     * Creates a plain object from a CS_AutoEnterRoom message. Also converts values to other types if specified.
     * @param message CS_AutoEnterRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_AutoEnterRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_AutoEnterRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_AutoEnterRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1091
    }
}

/** Properties of a CS_AutoSitDown. */
export interface ICS_AutoSitDown {
}

/** Represents a CS_AutoSitDown. */
export class CS_AutoSitDown implements ICS_AutoSitDown {

    /**
     * Constructs a new CS_AutoSitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_AutoSitDown);

    /**
     * Creates a new CS_AutoSitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_AutoSitDown instance
     */
    public static create(properties?: ICS_AutoSitDown): CS_AutoSitDown;

    /**
     * Encodes the specified CS_AutoSitDown message. Does not implicitly {@link CS_AutoSitDown.verify|verify} messages.
     * @param message CS_AutoSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_AutoSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_AutoSitDown message, length delimited. Does not implicitly {@link CS_AutoSitDown.verify|verify} messages.
     * @param message CS_AutoSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_AutoSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_AutoSitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_AutoSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_AutoSitDown;

    /**
     * Decodes a CS_AutoSitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_AutoSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_AutoSitDown;

    /**
     * Verifies a CS_AutoSitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_AutoSitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_AutoSitDown
     */
    public static fromObject(object: { [k: string]: any }): CS_AutoSitDown;

    /**
     * Creates a plain object from a CS_AutoSitDown message. Also converts values to other types if specified.
     * @param message CS_AutoSitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_AutoSitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_AutoSitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_AutoSitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1092
    }
}

/** Properties of a CS_SitDown. */
export interface ICS_SitDown {

    /** CS_SitDown tableId */
    tableId?: (number|null);

    /** CS_SitDown chairId */
    chairId?: (number|null);
}

/** Represents a CS_SitDown. */
export class CS_SitDown implements ICS_SitDown {

    /**
     * Constructs a new CS_SitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SitDown);

    /** CS_SitDown tableId. */
    public tableId: number;

    /** CS_SitDown chairId. */
    public chairId: number;

    /**
     * Creates a new CS_SitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SitDown instance
     */
    public static create(properties?: ICS_SitDown): CS_SitDown;

    /**
     * Encodes the specified CS_SitDown message. Does not implicitly {@link CS_SitDown.verify|verify} messages.
     * @param message CS_SitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SitDown message, length delimited. Does not implicitly {@link CS_SitDown.verify|verify} messages.
     * @param message CS_SitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SitDown;

    /**
     * Decodes a CS_SitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SitDown;

    /**
     * Verifies a CS_SitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SitDown
     */
    public static fromObject(object: { [k: string]: any }): CS_SitDown;

    /**
     * Creates a plain object from a CS_SitDown message. Also converts values to other types if specified.
     * @param message CS_SitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1093
    }
}

/** Properties of a SC_SitDown. */
export interface ISC_SitDown {

    /** SC_SitDown tableId */
    tableId?: (number|null);

    /** SC_SitDown chairId */
    chairId?: (number|null);

    /** SC_SitDown result */
    result?: (number|null);
}

/** Represents a SC_SitDown. */
export class SC_SitDown implements ISC_SitDown {

    /**
     * Constructs a new SC_SitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SitDown);

    /** SC_SitDown tableId. */
    public tableId: number;

    /** SC_SitDown chairId. */
    public chairId: number;

    /** SC_SitDown result. */
    public result: number;

    /**
     * Creates a new SC_SitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SitDown instance
     */
    public static create(properties?: ISC_SitDown): SC_SitDown;

    /**
     * Encodes the specified SC_SitDown message. Does not implicitly {@link SC_SitDown.verify|verify} messages.
     * @param message SC_SitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SitDown message, length delimited. Does not implicitly {@link SC_SitDown.verify|verify} messages.
     * @param message SC_SitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SitDown;

    /**
     * Decodes a SC_SitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SitDown;

    /**
     * Verifies a SC_SitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SitDown
     */
    public static fromObject(object: { [k: string]: any }): SC_SitDown;

    /**
     * Creates a plain object from a SC_SitDown message. Also converts values to other types if specified.
     * @param message SC_SitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1094
    }
}

/** Properties of a SC_NotifySitDown. */
export interface ISC_NotifySitDown {

    /** SC_NotifySitDown tableId */
    tableId?: (number|null);

    /** SC_NotifySitDown seat */
    seat?: (ISEAT_INFO|null);

    /** SC_NotifySitDown isOnline */
    isOnline?: (boolean|null);
}

/** Represents a SC_NotifySitDown. */
export class SC_NotifySitDown implements ISC_NotifySitDown {

    /**
     * Constructs a new SC_NotifySitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifySitDown);

    /** SC_NotifySitDown tableId. */
    public tableId: number;

    /** SC_NotifySitDown seat. */
    public seat?: (ISEAT_INFO|null);

    /** SC_NotifySitDown isOnline. */
    public isOnline: boolean;

    /**
     * Creates a new SC_NotifySitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifySitDown instance
     */
    public static create(properties?: ISC_NotifySitDown): SC_NotifySitDown;

    /**
     * Encodes the specified SC_NotifySitDown message. Does not implicitly {@link SC_NotifySitDown.verify|verify} messages.
     * @param message SC_NotifySitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifySitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifySitDown message, length delimited. Does not implicitly {@link SC_NotifySitDown.verify|verify} messages.
     * @param message SC_NotifySitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifySitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifySitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifySitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifySitDown;

    /**
     * Decodes a SC_NotifySitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifySitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifySitDown;

    /**
     * Verifies a SC_NotifySitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifySitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifySitDown
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifySitDown;

    /**
     * Creates a plain object from a SC_NotifySitDown message. Also converts values to other types if specified.
     * @param message SC_NotifySitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifySitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifySitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifySitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1095
    }
}

/** Properties of a CS_StandUp. */
export interface ICS_StandUp {
}

/** Represents a CS_StandUp. */
export class CS_StandUp implements ICS_StandUp {

    /**
     * Constructs a new CS_StandUp.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_StandUp);

    /**
     * Creates a new CS_StandUp instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_StandUp instance
     */
    public static create(properties?: ICS_StandUp): CS_StandUp;

    /**
     * Encodes the specified CS_StandUp message. Does not implicitly {@link CS_StandUp.verify|verify} messages.
     * @param message CS_StandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_StandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_StandUp message, length delimited. Does not implicitly {@link CS_StandUp.verify|verify} messages.
     * @param message CS_StandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_StandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_StandUp message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_StandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_StandUp;

    /**
     * Decodes a CS_StandUp message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_StandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_StandUp;

    /**
     * Verifies a CS_StandUp message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_StandUp message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_StandUp
     */
    public static fromObject(object: { [k: string]: any }): CS_StandUp;

    /**
     * Creates a plain object from a CS_StandUp message. Also converts values to other types if specified.
     * @param message CS_StandUp
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_StandUp, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_StandUp to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_StandUp {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1096
    }
}

/** Properties of a SC_StandUp. */
export interface ISC_StandUp {

    /** SC_StandUp tableId */
    tableId?: (number|null);

    /** SC_StandUp chairId */
    chairId?: (number|null);

    /** SC_StandUp result */
    result?: (number|null);
}

/** Represents a SC_StandUp. */
export class SC_StandUp implements ISC_StandUp {

    /**
     * Constructs a new SC_StandUp.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_StandUp);

    /** SC_StandUp tableId. */
    public tableId: number;

    /** SC_StandUp chairId. */
    public chairId: number;

    /** SC_StandUp result. */
    public result: number;

    /**
     * Creates a new SC_StandUp instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_StandUp instance
     */
    public static create(properties?: ISC_StandUp): SC_StandUp;

    /**
     * Encodes the specified SC_StandUp message. Does not implicitly {@link SC_StandUp.verify|verify} messages.
     * @param message SC_StandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_StandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_StandUp message, length delimited. Does not implicitly {@link SC_StandUp.verify|verify} messages.
     * @param message SC_StandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_StandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_StandUp message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_StandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_StandUp;

    /**
     * Decodes a SC_StandUp message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_StandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_StandUp;

    /**
     * Verifies a SC_StandUp message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_StandUp message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_StandUp
     */
    public static fromObject(object: { [k: string]: any }): SC_StandUp;

    /**
     * Creates a plain object from a SC_StandUp message. Also converts values to other types if specified.
     * @param message SC_StandUp
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_StandUp, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_StandUp to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_StandUp {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1097
    }
}

/** Properties of a SC_NotifyStandUp. */
export interface ISC_NotifyStandUp {

    /** SC_NotifyStandUp tableId */
    tableId?: (number|null);

    /** SC_NotifyStandUp chairId */
    chairId?: (number|null);

    /** SC_NotifyStandUp guid */
    guid?: (number|null);

    /** SC_NotifyStandUp isOffline */
    isOffline?: (boolean|null);

    /** SC_NotifyStandUp reason */
    reason?: (number|null);
}

/** Represents a SC_NotifyStandUp. */
export class SC_NotifyStandUp implements ISC_NotifyStandUp {

    /**
     * Constructs a new SC_NotifyStandUp.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyStandUp);

    /** SC_NotifyStandUp tableId. */
    public tableId: number;

    /** SC_NotifyStandUp chairId. */
    public chairId: number;

    /** SC_NotifyStandUp guid. */
    public guid: number;

    /** SC_NotifyStandUp isOffline. */
    public isOffline: boolean;

    /** SC_NotifyStandUp reason. */
    public reason: number;

    /**
     * Creates a new SC_NotifyStandUp instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyStandUp instance
     */
    public static create(properties?: ISC_NotifyStandUp): SC_NotifyStandUp;

    /**
     * Encodes the specified SC_NotifyStandUp message. Does not implicitly {@link SC_NotifyStandUp.verify|verify} messages.
     * @param message SC_NotifyStandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyStandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyStandUp message, length delimited. Does not implicitly {@link SC_NotifyStandUp.verify|verify} messages.
     * @param message SC_NotifyStandUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyStandUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyStandUp message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyStandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyStandUp;

    /**
     * Decodes a SC_NotifyStandUp message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyStandUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyStandUp;

    /**
     * Verifies a SC_NotifyStandUp message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyStandUp message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyStandUp
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyStandUp;

    /**
     * Creates a plain object from a SC_NotifyStandUp message. Also converts values to other types if specified.
     * @param message SC_NotifyStandUp
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyStandUp, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyStandUp to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyStandUp {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1098
    }
}

/** Properties of a CS_EnterRoomAndSitDown. */
export interface ICS_EnterRoomAndSitDown {
}

/** Represents a CS_EnterRoomAndSitDown. */
export class CS_EnterRoomAndSitDown implements ICS_EnterRoomAndSitDown {

    /**
     * Constructs a new CS_EnterRoomAndSitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_EnterRoomAndSitDown);

    /**
     * Creates a new CS_EnterRoomAndSitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_EnterRoomAndSitDown instance
     */
    public static create(properties?: ICS_EnterRoomAndSitDown): CS_EnterRoomAndSitDown;

    /**
     * Encodes the specified CS_EnterRoomAndSitDown message. Does not implicitly {@link CS_EnterRoomAndSitDown.verify|verify} messages.
     * @param message CS_EnterRoomAndSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_EnterRoomAndSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_EnterRoomAndSitDown message, length delimited. Does not implicitly {@link CS_EnterRoomAndSitDown.verify|verify} messages.
     * @param message CS_EnterRoomAndSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_EnterRoomAndSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_EnterRoomAndSitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_EnterRoomAndSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_EnterRoomAndSitDown;

    /**
     * Decodes a CS_EnterRoomAndSitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_EnterRoomAndSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_EnterRoomAndSitDown;

    /**
     * Verifies a CS_EnterRoomAndSitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_EnterRoomAndSitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_EnterRoomAndSitDown
     */
    public static fromObject(object: { [k: string]: any }): CS_EnterRoomAndSitDown;

    /**
     * Creates a plain object from a CS_EnterRoomAndSitDown message. Also converts values to other types if specified.
     * @param message CS_EnterRoomAndSitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_EnterRoomAndSitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_EnterRoomAndSitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_EnterRoomAndSitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1099
    }
}

/** Properties of a SC_EnterRoomAndSitDown. */
export interface ISC_EnterRoomAndSitDown {

    /** SC_EnterRoomAndSitDown roomId */
    roomId?: (number|null);

    /** SC_EnterRoomAndSitDown tableId */
    tableId?: (number|null);

    /** SC_EnterRoomAndSitDown chairId */
    chairId?: (number|null);

    /** SC_EnterRoomAndSitDown result */
    result?: (number|null);

    /** SC_EnterRoomAndSitDown pbVisualInfo */
    pbVisualInfo?: (IPlayerVisualInfo[]|null);

    /** SC_EnterRoomAndSitDown gameId */
    gameId?: (number|null);

    /** SC_EnterRoomAndSitDown firstGameType */
    firstGameType?: (number|null);

    /** SC_EnterRoomAndSitDown secondGameType */
    secondGameType?: (number|null);

    /** SC_EnterRoomAndSitDown ipArea */
    ipArea?: (string|null);

    /** SC_EnterRoomAndSitDown privateRoom */
    privateRoom?: (boolean|null);

    /** SC_EnterRoomAndSitDown balanceMoney */
    balanceMoney?: (number|null);

    /** SC_EnterRoomAndSitDown privateRoomScoreType */
    privateRoomScoreType?: (number|null);
}

/** Represents a SC_EnterRoomAndSitDown. */
export class SC_EnterRoomAndSitDown implements ISC_EnterRoomAndSitDown {

    /**
     * Constructs a new SC_EnterRoomAndSitDown.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_EnterRoomAndSitDown);

    /** SC_EnterRoomAndSitDown roomId. */
    public roomId: number;

    /** SC_EnterRoomAndSitDown tableId. */
    public tableId: number;

    /** SC_EnterRoomAndSitDown chairId. */
    public chairId: number;

    /** SC_EnterRoomAndSitDown result. */
    public result: number;

    /** SC_EnterRoomAndSitDown pbVisualInfo. */
    public pbVisualInfo: IPlayerVisualInfo[];

    /** SC_EnterRoomAndSitDown gameId. */
    public gameId: number;

    /** SC_EnterRoomAndSitDown firstGameType. */
    public firstGameType: number;

    /** SC_EnterRoomAndSitDown secondGameType. */
    public secondGameType: number;

    /** SC_EnterRoomAndSitDown ipArea. */
    public ipArea: string;

    /** SC_EnterRoomAndSitDown privateRoom. */
    public privateRoom: boolean;

    /** SC_EnterRoomAndSitDown balanceMoney. */
    public balanceMoney: number;

    /** SC_EnterRoomAndSitDown privateRoomScoreType. */
    public privateRoomScoreType: number;

    /**
     * Creates a new SC_EnterRoomAndSitDown instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_EnterRoomAndSitDown instance
     */
    public static create(properties?: ISC_EnterRoomAndSitDown): SC_EnterRoomAndSitDown;

    /**
     * Encodes the specified SC_EnterRoomAndSitDown message. Does not implicitly {@link SC_EnterRoomAndSitDown.verify|verify} messages.
     * @param message SC_EnterRoomAndSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_EnterRoomAndSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_EnterRoomAndSitDown message, length delimited. Does not implicitly {@link SC_EnterRoomAndSitDown.verify|verify} messages.
     * @param message SC_EnterRoomAndSitDown message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_EnterRoomAndSitDown, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_EnterRoomAndSitDown message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_EnterRoomAndSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_EnterRoomAndSitDown;

    /**
     * Decodes a SC_EnterRoomAndSitDown message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_EnterRoomAndSitDown
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_EnterRoomAndSitDown;

    /**
     * Verifies a SC_EnterRoomAndSitDown message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_EnterRoomAndSitDown message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_EnterRoomAndSitDown
     */
    public static fromObject(object: { [k: string]: any }): SC_EnterRoomAndSitDown;

    /**
     * Creates a plain object from a SC_EnterRoomAndSitDown message. Also converts values to other types if specified.
     * @param message SC_EnterRoomAndSitDown
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_EnterRoomAndSitDown, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_EnterRoomAndSitDown to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_EnterRoomAndSitDown {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1100
    }
}

/** Properties of a CS_StandUpAndExitRoom. */
export interface ICS_StandUpAndExitRoom {
}

/** Represents a CS_StandUpAndExitRoom. */
export class CS_StandUpAndExitRoom implements ICS_StandUpAndExitRoom {

    /**
     * Constructs a new CS_StandUpAndExitRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_StandUpAndExitRoom);

    /**
     * Creates a new CS_StandUpAndExitRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_StandUpAndExitRoom instance
     */
    public static create(properties?: ICS_StandUpAndExitRoom): CS_StandUpAndExitRoom;

    /**
     * Encodes the specified CS_StandUpAndExitRoom message. Does not implicitly {@link CS_StandUpAndExitRoom.verify|verify} messages.
     * @param message CS_StandUpAndExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_StandUpAndExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_StandUpAndExitRoom message, length delimited. Does not implicitly {@link CS_StandUpAndExitRoom.verify|verify} messages.
     * @param message CS_StandUpAndExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_StandUpAndExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_StandUpAndExitRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_StandUpAndExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_StandUpAndExitRoom;

    /**
     * Decodes a CS_StandUpAndExitRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_StandUpAndExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_StandUpAndExitRoom;

    /**
     * Verifies a CS_StandUpAndExitRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_StandUpAndExitRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_StandUpAndExitRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_StandUpAndExitRoom;

    /**
     * Creates a plain object from a CS_StandUpAndExitRoom message. Also converts values to other types if specified.
     * @param message CS_StandUpAndExitRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_StandUpAndExitRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_StandUpAndExitRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_StandUpAndExitRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1101
    }
}

/** Properties of a SC_StandUpAndExitRoom. */
export interface ISC_StandUpAndExitRoom {

    /** SC_StandUpAndExitRoom roomId */
    roomId?: (number|null);

    /** SC_StandUpAndExitRoom tableId */
    tableId?: (number|null);

    /** SC_StandUpAndExitRoom chairId */
    chairId?: (number|null);

    /** SC_StandUpAndExitRoom result */
    result?: (number|null);

    /** SC_StandUpAndExitRoom reason */
    reason?: (number|null);
}

/** Represents a SC_StandUpAndExitRoom. */
export class SC_StandUpAndExitRoom implements ISC_StandUpAndExitRoom {

    /**
     * Constructs a new SC_StandUpAndExitRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_StandUpAndExitRoom);

    /** SC_StandUpAndExitRoom roomId. */
    public roomId: number;

    /** SC_StandUpAndExitRoom tableId. */
    public tableId: number;

    /** SC_StandUpAndExitRoom chairId. */
    public chairId: number;

    /** SC_StandUpAndExitRoom result. */
    public result: number;

    /** SC_StandUpAndExitRoom reason. */
    public reason: number;

    /**
     * Creates a new SC_StandUpAndExitRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_StandUpAndExitRoom instance
     */
    public static create(properties?: ISC_StandUpAndExitRoom): SC_StandUpAndExitRoom;

    /**
     * Encodes the specified SC_StandUpAndExitRoom message. Does not implicitly {@link SC_StandUpAndExitRoom.verify|verify} messages.
     * @param message SC_StandUpAndExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_StandUpAndExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_StandUpAndExitRoom message, length delimited. Does not implicitly {@link SC_StandUpAndExitRoom.verify|verify} messages.
     * @param message SC_StandUpAndExitRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_StandUpAndExitRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_StandUpAndExitRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_StandUpAndExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_StandUpAndExitRoom;

    /**
     * Decodes a SC_StandUpAndExitRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_StandUpAndExitRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_StandUpAndExitRoom;

    /**
     * Verifies a SC_StandUpAndExitRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_StandUpAndExitRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_StandUpAndExitRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_StandUpAndExitRoom;

    /**
     * Creates a plain object from a SC_StandUpAndExitRoom message. Also converts values to other types if specified.
     * @param message SC_StandUpAndExitRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_StandUpAndExitRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_StandUpAndExitRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_StandUpAndExitRoom {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1102
    }
}

/** Properties of a CS_ChangeChair. */
export interface ICS_ChangeChair {
}

/** Represents a CS_ChangeChair. */
export class CS_ChangeChair implements ICS_ChangeChair {

    /**
     * Constructs a new CS_ChangeChair.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChangeChair);

    /**
     * Creates a new CS_ChangeChair instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChangeChair instance
     */
    public static create(properties?: ICS_ChangeChair): CS_ChangeChair;

    /**
     * Encodes the specified CS_ChangeChair message. Does not implicitly {@link CS_ChangeChair.verify|verify} messages.
     * @param message CS_ChangeChair message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChangeChair, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChangeChair message, length delimited. Does not implicitly {@link CS_ChangeChair.verify|verify} messages.
     * @param message CS_ChangeChair message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChangeChair, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChangeChair message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChangeChair
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChangeChair;

    /**
     * Decodes a CS_ChangeChair message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChangeChair
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChangeChair;

    /**
     * Verifies a CS_ChangeChair message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChangeChair message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChangeChair
     */
    public static fromObject(object: { [k: string]: any }): CS_ChangeChair;

    /**
     * Creates a plain object from a CS_ChangeChair message. Also converts values to other types if specified.
     * @param message CS_ChangeChair
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChangeChair, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChangeChair to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChangeChair {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1103
    }
}

/** Properties of a SC_ChangeChair. */
export interface ISC_ChangeChair {

    /** SC_ChangeChair tableId */
    tableId?: (number|null);

    /** SC_ChangeChair chairId */
    chairId?: (number|null);

    /** SC_ChangeChair result */
    result?: (number|null);

    /** SC_ChangeChair pbVisualInfo */
    pbVisualInfo?: (IPlayerVisualInfo[]|null);
}

/** Represents a SC_ChangeChair. */
export class SC_ChangeChair implements ISC_ChangeChair {

    /**
     * Constructs a new SC_ChangeChair.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChangeChair);

    /** SC_ChangeChair tableId. */
    public tableId: number;

    /** SC_ChangeChair chairId. */
    public chairId: number;

    /** SC_ChangeChair result. */
    public result: number;

    /** SC_ChangeChair pbVisualInfo. */
    public pbVisualInfo: IPlayerVisualInfo[];

    /**
     * Creates a new SC_ChangeChair instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChangeChair instance
     */
    public static create(properties?: ISC_ChangeChair): SC_ChangeChair;

    /**
     * Encodes the specified SC_ChangeChair message. Does not implicitly {@link SC_ChangeChair.verify|verify} messages.
     * @param message SC_ChangeChair message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChangeChair, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChangeChair message, length delimited. Does not implicitly {@link SC_ChangeChair.verify|verify} messages.
     * @param message SC_ChangeChair message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChangeChair, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChangeChair message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChangeChair
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChangeChair;

    /**
     * Decodes a SC_ChangeChair message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChangeChair
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChangeChair;

    /**
     * Verifies a SC_ChangeChair message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChangeChair message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChangeChair
     */
    public static fromObject(object: { [k: string]: any }): SC_ChangeChair;

    /**
     * Creates a plain object from a SC_ChangeChair message. Also converts values to other types if specified.
     * @param message SC_ChangeChair
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChangeChair, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChangeChair to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChangeChair {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1104
    }
}

/** Properties of a CS_ChangeTable. */
export interface ICS_ChangeTable {
}

/** Represents a CS_ChangeTable. */
export class CS_ChangeTable implements ICS_ChangeTable {

    /**
     * Constructs a new CS_ChangeTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ChangeTable);

    /**
     * Creates a new CS_ChangeTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ChangeTable instance
     */
    public static create(properties?: ICS_ChangeTable): CS_ChangeTable;

    /**
     * Encodes the specified CS_ChangeTable message. Does not implicitly {@link CS_ChangeTable.verify|verify} messages.
     * @param message CS_ChangeTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ChangeTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ChangeTable message, length delimited. Does not implicitly {@link CS_ChangeTable.verify|verify} messages.
     * @param message CS_ChangeTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ChangeTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ChangeTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ChangeTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ChangeTable;

    /**
     * Decodes a CS_ChangeTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ChangeTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ChangeTable;

    /**
     * Verifies a CS_ChangeTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ChangeTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ChangeTable
     */
    public static fromObject(object: { [k: string]: any }): CS_ChangeTable;

    /**
     * Creates a plain object from a CS_ChangeTable message. Also converts values to other types if specified.
     * @param message CS_ChangeTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ChangeTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ChangeTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ChangeTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1105
    }
}

/** Properties of a CS_Ready. */
export interface ICS_Ready {
}

/** Represents a CS_Ready. */
export class CS_Ready implements ICS_Ready {

    /**
     * Constructs a new CS_Ready.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Ready);

    /**
     * Creates a new CS_Ready instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Ready instance
     */
    public static create(properties?: ICS_Ready): CS_Ready;

    /**
     * Encodes the specified CS_Ready message. Does not implicitly {@link CS_Ready.verify|verify} messages.
     * @param message CS_Ready message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Ready, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Ready message, length delimited. Does not implicitly {@link CS_Ready.verify|verify} messages.
     * @param message CS_Ready message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Ready, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Ready message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Ready
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Ready;

    /**
     * Decodes a CS_Ready message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Ready
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Ready;

    /**
     * Verifies a CS_Ready message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Ready message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Ready
     */
    public static fromObject(object: { [k: string]: any }): CS_Ready;

    /**
     * Creates a plain object from a CS_Ready message. Also converts values to other types if specified.
     * @param message CS_Ready
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Ready, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Ready to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Ready {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1106
    }
}

/** Properties of a SC_Ready. */
export interface ISC_Ready {

    /** SC_Ready readyChairId */
    readyChairId?: (number|null);

    /** SC_Ready isReady */
    isReady?: (boolean|null);

    /** SC_Ready result */
    result?: (number|null);
}

/** Represents a SC_Ready. */
export class SC_Ready implements ISC_Ready {

    /**
     * Constructs a new SC_Ready.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Ready);

    /** SC_Ready readyChairId. */
    public readyChairId: number;

    /** SC_Ready isReady. */
    public isReady: boolean;

    /** SC_Ready result. */
    public result: number;

    /**
     * Creates a new SC_Ready instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Ready instance
     */
    public static create(properties?: ISC_Ready): SC_Ready;

    /**
     * Encodes the specified SC_Ready message. Does not implicitly {@link SC_Ready.verify|verify} messages.
     * @param message SC_Ready message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Ready, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Ready message, length delimited. Does not implicitly {@link SC_Ready.verify|verify} messages.
     * @param message SC_Ready message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Ready, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Ready message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Ready
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Ready;

    /**
     * Decodes a SC_Ready message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Ready
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Ready;

    /**
     * Verifies a SC_Ready message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Ready message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Ready
     */
    public static fromObject(object: { [k: string]: any }): SC_Ready;

    /**
     * Creates a plain object from a SC_Ready message. Also converts values to other types if specified.
     * @param message SC_Ready
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Ready, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Ready to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Ready {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1107
    }
}

/** Properties of a CS_Exit. */
export interface ICS_Exit {
}

/** Represents a CS_Exit. */
export class CS_Exit implements ICS_Exit {

    /**
     * Constructs a new CS_Exit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Exit);

    /**
     * Creates a new CS_Exit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Exit instance
     */
    public static create(properties?: ICS_Exit): CS_Exit;

    /**
     * Encodes the specified CS_Exit message. Does not implicitly {@link CS_Exit.verify|verify} messages.
     * @param message CS_Exit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Exit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Exit message, length delimited. Does not implicitly {@link CS_Exit.verify|verify} messages.
     * @param message CS_Exit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Exit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Exit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Exit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Exit;

    /**
     * Decodes a CS_Exit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Exit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Exit;

    /**
     * Verifies a CS_Exit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Exit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Exit
     */
    public static fromObject(object: { [k: string]: any }): CS_Exit;

    /**
     * Creates a plain object from a CS_Exit message. Also converts values to other types if specified.
     * @param message CS_Exit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Exit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Exit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Exit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1108
    }
}

/** Properties of a SC_Gamefinish. */
export interface ISC_Gamefinish {

    /** SC_Gamefinish money */
    money?: (number|null);
}

/** Represents a SC_Gamefinish. */
export class SC_Gamefinish implements ISC_Gamefinish {

    /**
     * Constructs a new SC_Gamefinish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Gamefinish);

    /** SC_Gamefinish money. */
    public money: number;

    /**
     * Creates a new SC_Gamefinish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Gamefinish instance
     */
    public static create(properties?: ISC_Gamefinish): SC_Gamefinish;

    /**
     * Encodes the specified SC_Gamefinish message. Does not implicitly {@link SC_Gamefinish.verify|verify} messages.
     * @param message SC_Gamefinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Gamefinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Gamefinish message, length delimited. Does not implicitly {@link SC_Gamefinish.verify|verify} messages.
     * @param message SC_Gamefinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Gamefinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Gamefinish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Gamefinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Gamefinish;

    /**
     * Decodes a SC_Gamefinish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Gamefinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Gamefinish;

    /**
     * Verifies a SC_Gamefinish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Gamefinish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Gamefinish
     */
    public static fromObject(object: { [k: string]: any }): SC_Gamefinish;

    /**
     * Creates a plain object from a SC_Gamefinish message. Also converts values to other types if specified.
     * @param message SC_Gamefinish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Gamefinish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Gamefinish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Gamefinish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1109
    }
}

/** Properties of a SC_PlayerReconnection. */
export interface ISC_PlayerReconnection {

    /** SC_PlayerReconnection roomId */
    roomId?: (number|null);

    /** SC_PlayerReconnection tableId */
    tableId?: (number|null);

    /** SC_PlayerReconnection chairId */
    chairId?: (number|null);

    /** SC_PlayerReconnection result */
    result?: (number|null);

    /** SC_PlayerReconnection pbVisualInfo */
    pbVisualInfo?: (IPlayerVisualInfo[]|null);

    /** SC_PlayerReconnection gameId */
    gameId?: (number|null);

    /** SC_PlayerReconnection firstGameType */
    firstGameType?: (number|null);

    /** SC_PlayerReconnection secondGameType */
    secondGameType?: (number|null);

    /** SC_PlayerReconnection ipArea */
    ipArea?: (string|null);
}

/** Represents a SC_PlayerReconnection. */
export class SC_PlayerReconnection implements ISC_PlayerReconnection {

    /**
     * Constructs a new SC_PlayerReconnection.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PlayerReconnection);

    /** SC_PlayerReconnection roomId. */
    public roomId: number;

    /** SC_PlayerReconnection tableId. */
    public tableId: number;

    /** SC_PlayerReconnection chairId. */
    public chairId: number;

    /** SC_PlayerReconnection result. */
    public result: number;

    /** SC_PlayerReconnection pbVisualInfo. */
    public pbVisualInfo: IPlayerVisualInfo[];

    /** SC_PlayerReconnection gameId. */
    public gameId: number;

    /** SC_PlayerReconnection firstGameType. */
    public firstGameType: number;

    /** SC_PlayerReconnection secondGameType. */
    public secondGameType: number;

    /** SC_PlayerReconnection ipArea. */
    public ipArea: string;

    /**
     * Creates a new SC_PlayerReconnection instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PlayerReconnection instance
     */
    public static create(properties?: ISC_PlayerReconnection): SC_PlayerReconnection;

    /**
     * Encodes the specified SC_PlayerReconnection message. Does not implicitly {@link SC_PlayerReconnection.verify|verify} messages.
     * @param message SC_PlayerReconnection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PlayerReconnection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PlayerReconnection message, length delimited. Does not implicitly {@link SC_PlayerReconnection.verify|verify} messages.
     * @param message SC_PlayerReconnection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PlayerReconnection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PlayerReconnection message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PlayerReconnection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PlayerReconnection;

    /**
     * Decodes a SC_PlayerReconnection message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PlayerReconnection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PlayerReconnection;

    /**
     * Verifies a SC_PlayerReconnection message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PlayerReconnection message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PlayerReconnection
     */
    public static fromObject(object: { [k: string]: any }): SC_PlayerReconnection;

    /**
     * Creates a plain object from a SC_PlayerReconnection message. Also converts values to other types if specified.
     * @param message SC_PlayerReconnection
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PlayerReconnection, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PlayerReconnection to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PlayerReconnection {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1110
    }
}

/** Properties of a SC_ChangeTable. */
export interface ISC_ChangeTable {

    /** SC_ChangeTable roomId */
    roomId?: (number|null);

    /** SC_ChangeTable tableId */
    tableId?: (number|null);

    /** SC_ChangeTable chairId */
    chairId?: (number|null);

    /** SC_ChangeTable result */
    result?: (number|null);

    /** SC_ChangeTable pbVisualInfo */
    pbVisualInfo?: (IPlayerVisualInfo[]|null);

    /** SC_ChangeTable gameId */
    gameId?: (number|null);

    /** SC_ChangeTable firstGameType */
    firstGameType?: (number|null);

    /** SC_ChangeTable secondGameType */
    secondGameType?: (number|null);

    /** SC_ChangeTable ipArea */
    ipArea?: (string|null);
}

/** Represents a SC_ChangeTable. */
export class SC_ChangeTable implements ISC_ChangeTable {

    /**
     * Constructs a new SC_ChangeTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ChangeTable);

    /** SC_ChangeTable roomId. */
    public roomId: number;

    /** SC_ChangeTable tableId. */
    public tableId: number;

    /** SC_ChangeTable chairId. */
    public chairId: number;

    /** SC_ChangeTable result. */
    public result: number;

    /** SC_ChangeTable pbVisualInfo. */
    public pbVisualInfo: IPlayerVisualInfo[];

    /** SC_ChangeTable gameId. */
    public gameId: number;

    /** SC_ChangeTable firstGameType. */
    public firstGameType: number;

    /** SC_ChangeTable secondGameType. */
    public secondGameType: number;

    /** SC_ChangeTable ipArea. */
    public ipArea: string;

    /**
     * Creates a new SC_ChangeTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ChangeTable instance
     */
    public static create(properties?: ISC_ChangeTable): SC_ChangeTable;

    /**
     * Encodes the specified SC_ChangeTable message. Does not implicitly {@link SC_ChangeTable.verify|verify} messages.
     * @param message SC_ChangeTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ChangeTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ChangeTable message, length delimited. Does not implicitly {@link SC_ChangeTable.verify|verify} messages.
     * @param message SC_ChangeTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ChangeTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ChangeTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ChangeTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ChangeTable;

    /**
     * Decodes a SC_ChangeTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ChangeTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ChangeTable;

    /**
     * Verifies a SC_ChangeTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ChangeTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ChangeTable
     */
    public static fromObject(object: { [k: string]: any }): SC_ChangeTable;

    /**
     * Creates a plain object from a SC_ChangeTable message. Also converts values to other types if specified.
     * @param message SC_ChangeTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ChangeTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ChangeTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ChangeTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1111
    }
}

/** Properties of a SC_HeartBeat. */
export interface ISC_HeartBeat {

    /** SC_HeartBeat severTime */
    severTime?: (number|null);
}

/** Represents a SC_HeartBeat. */
export class SC_HeartBeat implements ISC_HeartBeat {

    /**
     * Constructs a new SC_HeartBeat.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_HeartBeat);

    /** SC_HeartBeat severTime. */
    public severTime: number;

    /**
     * Creates a new SC_HeartBeat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_HeartBeat instance
     */
    public static create(properties?: ISC_HeartBeat): SC_HeartBeat;

    /**
     * Encodes the specified SC_HeartBeat message. Does not implicitly {@link SC_HeartBeat.verify|verify} messages.
     * @param message SC_HeartBeat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_HeartBeat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_HeartBeat message, length delimited. Does not implicitly {@link SC_HeartBeat.verify|verify} messages.
     * @param message SC_HeartBeat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_HeartBeat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_HeartBeat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_HeartBeat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_HeartBeat;

    /**
     * Decodes a SC_HeartBeat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_HeartBeat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_HeartBeat;

    /**
     * Verifies a SC_HeartBeat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_HeartBeat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_HeartBeat
     */
    public static fromObject(object: { [k: string]: any }): SC_HeartBeat;

    /**
     * Creates a plain object from a SC_HeartBeat message. Also converts values to other types if specified.
     * @param message SC_HeartBeat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_HeartBeat, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_HeartBeat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_HeartBeat {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1112
    }
}

/** Properties of a CS_HeartBeat. */
export interface ICS_HeartBeat {
}

/** Represents a CS_HeartBeat. */
export class CS_HeartBeat implements ICS_HeartBeat {

    /**
     * Constructs a new CS_HeartBeat.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_HeartBeat);

    /**
     * Creates a new CS_HeartBeat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_HeartBeat instance
     */
    public static create(properties?: ICS_HeartBeat): CS_HeartBeat;

    /**
     * Encodes the specified CS_HeartBeat message. Does not implicitly {@link CS_HeartBeat.verify|verify} messages.
     * @param message CS_HeartBeat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_HeartBeat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_HeartBeat message, length delimited. Does not implicitly {@link CS_HeartBeat.verify|verify} messages.
     * @param message CS_HeartBeat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_HeartBeat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_HeartBeat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_HeartBeat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_HeartBeat;

    /**
     * Decodes a CS_HeartBeat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_HeartBeat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_HeartBeat;

    /**
     * Verifies a CS_HeartBeat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_HeartBeat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_HeartBeat
     */
    public static fromObject(object: { [k: string]: any }): CS_HeartBeat;

    /**
     * Creates a plain object from a CS_HeartBeat message. Also converts values to other types if specified.
     * @param message CS_HeartBeat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_HeartBeat, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_HeartBeat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_HeartBeat {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1113
    }
}

/** Properties of a CS_ReconnectionPlay. */
export interface ICS_ReconnectionPlay {
}

/** Represents a CS_ReconnectionPlay. */
export class CS_ReconnectionPlay implements ICS_ReconnectionPlay {

    /**
     * Constructs a new CS_ReconnectionPlay.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ReconnectionPlay);

    /**
     * Creates a new CS_ReconnectionPlay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ReconnectionPlay instance
     */
    public static create(properties?: ICS_ReconnectionPlay): CS_ReconnectionPlay;

    /**
     * Encodes the specified CS_ReconnectionPlay message. Does not implicitly {@link CS_ReconnectionPlay.verify|verify} messages.
     * @param message CS_ReconnectionPlay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ReconnectionPlay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ReconnectionPlay message, length delimited. Does not implicitly {@link CS_ReconnectionPlay.verify|verify} messages.
     * @param message CS_ReconnectionPlay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ReconnectionPlay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ReconnectionPlay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ReconnectionPlay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ReconnectionPlay;

    /**
     * Decodes a CS_ReconnectionPlay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ReconnectionPlay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ReconnectionPlay;

    /**
     * Verifies a CS_ReconnectionPlay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ReconnectionPlay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ReconnectionPlay
     */
    public static fromObject(object: { [k: string]: any }): CS_ReconnectionPlay;

    /**
     * Creates a plain object from a CS_ReconnectionPlay message. Also converts values to other types if specified.
     * @param message CS_ReconnectionPlay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ReconnectionPlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ReconnectionPlay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ReconnectionPlay {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1114
    }
}

/** Properties of a SC_ReconnectionPlay. */
export interface ISC_ReconnectionPlay {

    /** SC_ReconnectionPlay findTable */
    findTable?: (boolean|null);
}

/** Represents a SC_ReconnectionPlay. */
export class SC_ReconnectionPlay implements ISC_ReconnectionPlay {

    /**
     * Constructs a new SC_ReconnectionPlay.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReconnectionPlay);

    /** SC_ReconnectionPlay findTable. */
    public findTable: boolean;

    /**
     * Creates a new SC_ReconnectionPlay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReconnectionPlay instance
     */
    public static create(properties?: ISC_ReconnectionPlay): SC_ReconnectionPlay;

    /**
     * Encodes the specified SC_ReconnectionPlay message. Does not implicitly {@link SC_ReconnectionPlay.verify|verify} messages.
     * @param message SC_ReconnectionPlay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReconnectionPlay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReconnectionPlay message, length delimited. Does not implicitly {@link SC_ReconnectionPlay.verify|verify} messages.
     * @param message SC_ReconnectionPlay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReconnectionPlay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReconnectionPlay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReconnectionPlay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReconnectionPlay;

    /**
     * Decodes a SC_ReconnectionPlay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReconnectionPlay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReconnectionPlay;

    /**
     * Verifies a SC_ReconnectionPlay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReconnectionPlay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReconnectionPlay
     */
    public static fromObject(object: { [k: string]: any }): SC_ReconnectionPlay;

    /**
     * Creates a plain object from a SC_ReconnectionPlay message. Also converts values to other types if specified.
     * @param message SC_ReconnectionPlay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReconnectionPlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReconnectionPlay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReconnectionPlay {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1115
    }
}

/** Properties of a SC_SimpleResponse. */
export interface ISC_SimpleResponse {

    /** SC_SimpleResponse status */
    status?: (number|null);
}

/** Represents a SC_SimpleResponse. */
export class SC_SimpleResponse implements ISC_SimpleResponse {

    /**
     * Constructs a new SC_SimpleResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SimpleResponse);

    /** SC_SimpleResponse status. */
    public status: number;

    /**
     * Creates a new SC_SimpleResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SimpleResponse instance
     */
    public static create(properties?: ISC_SimpleResponse): SC_SimpleResponse;

    /**
     * Encodes the specified SC_SimpleResponse message. Does not implicitly {@link SC_SimpleResponse.verify|verify} messages.
     * @param message SC_SimpleResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SimpleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SimpleResponse message, length delimited. Does not implicitly {@link SC_SimpleResponse.verify|verify} messages.
     * @param message SC_SimpleResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SimpleResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SimpleResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SimpleResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SimpleResponse;

    /**
     * Decodes a SC_SimpleResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SimpleResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SimpleResponse;

    /**
     * Verifies a SC_SimpleResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SimpleResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SimpleResponse
     */
    public static fromObject(object: { [k: string]: any }): SC_SimpleResponse;

    /**
     * Creates a plain object from a SC_SimpleResponse message. Also converts values to other types if specified.
     * @param message SC_SimpleResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SimpleResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SimpleResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SimpleResponse {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1116
    }
}

/** Properties of a CS_QueryPlayerMsgData. */
export interface ICS_QueryPlayerMsgData {
}

/** Represents a CS_QueryPlayerMsgData. */
export class CS_QueryPlayerMsgData implements ICS_QueryPlayerMsgData {

    /**
     * Constructs a new CS_QueryPlayerMsgData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_QueryPlayerMsgData);

    /**
     * Creates a new CS_QueryPlayerMsgData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_QueryPlayerMsgData instance
     */
    public static create(properties?: ICS_QueryPlayerMsgData): CS_QueryPlayerMsgData;

    /**
     * Encodes the specified CS_QueryPlayerMsgData message. Does not implicitly {@link CS_QueryPlayerMsgData.verify|verify} messages.
     * @param message CS_QueryPlayerMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_QueryPlayerMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_QueryPlayerMsgData message, length delimited. Does not implicitly {@link CS_QueryPlayerMsgData.verify|verify} messages.
     * @param message CS_QueryPlayerMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_QueryPlayerMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_QueryPlayerMsgData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_QueryPlayerMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_QueryPlayerMsgData;

    /**
     * Decodes a CS_QueryPlayerMsgData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_QueryPlayerMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_QueryPlayerMsgData;

    /**
     * Verifies a CS_QueryPlayerMsgData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_QueryPlayerMsgData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_QueryPlayerMsgData
     */
    public static fromObject(object: { [k: string]: any }): CS_QueryPlayerMsgData;

    /**
     * Creates a plain object from a CS_QueryPlayerMsgData message. Also converts values to other types if specified.
     * @param message CS_QueryPlayerMsgData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_QueryPlayerMsgData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_QueryPlayerMsgData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_QueryPlayerMsgData {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1117
    }
}

/** Properties of a SC_QueryPlayerMsgData. */
export interface ISC_QueryPlayerMsgData {

    /** SC_QueryPlayerMsgData pbMsgData */
    pbMsgData?: (IMsgDataInfo[]|null);
}

/** Represents a SC_QueryPlayerMsgData. */
export class SC_QueryPlayerMsgData implements ISC_QueryPlayerMsgData {

    /**
     * Constructs a new SC_QueryPlayerMsgData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_QueryPlayerMsgData);

    /** SC_QueryPlayerMsgData pbMsgData. */
    public pbMsgData: IMsgDataInfo[];

    /**
     * Creates a new SC_QueryPlayerMsgData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_QueryPlayerMsgData instance
     */
    public static create(properties?: ISC_QueryPlayerMsgData): SC_QueryPlayerMsgData;

    /**
     * Encodes the specified SC_QueryPlayerMsgData message. Does not implicitly {@link SC_QueryPlayerMsgData.verify|verify} messages.
     * @param message SC_QueryPlayerMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_QueryPlayerMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_QueryPlayerMsgData message, length delimited. Does not implicitly {@link SC_QueryPlayerMsgData.verify|verify} messages.
     * @param message SC_QueryPlayerMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_QueryPlayerMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_QueryPlayerMsgData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_QueryPlayerMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_QueryPlayerMsgData;

    /**
     * Decodes a SC_QueryPlayerMsgData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_QueryPlayerMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_QueryPlayerMsgData;

    /**
     * Verifies a SC_QueryPlayerMsgData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_QueryPlayerMsgData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_QueryPlayerMsgData
     */
    public static fromObject(object: { [k: string]: any }): SC_QueryPlayerMsgData;

    /**
     * Creates a plain object from a SC_QueryPlayerMsgData message. Also converts values to other types if specified.
     * @param message SC_QueryPlayerMsgData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_QueryPlayerMsgData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_QueryPlayerMsgData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_QueryPlayerMsgData {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1118
    }
}

/** Properties of a SC_NewMsgData. */
export interface ISC_NewMsgData {

    /** SC_NewMsgData pbMsgData */
    pbMsgData?: (IMsgDataInfo[]|null);
}

/** Represents a SC_NewMsgData. */
export class SC_NewMsgData implements ISC_NewMsgData {

    /**
     * Constructs a new SC_NewMsgData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NewMsgData);

    /** SC_NewMsgData pbMsgData. */
    public pbMsgData: IMsgDataInfo[];

    /**
     * Creates a new SC_NewMsgData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NewMsgData instance
     */
    public static create(properties?: ISC_NewMsgData): SC_NewMsgData;

    /**
     * Encodes the specified SC_NewMsgData message. Does not implicitly {@link SC_NewMsgData.verify|verify} messages.
     * @param message SC_NewMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NewMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NewMsgData message, length delimited. Does not implicitly {@link SC_NewMsgData.verify|verify} messages.
     * @param message SC_NewMsgData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NewMsgData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NewMsgData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NewMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NewMsgData;

    /**
     * Decodes a SC_NewMsgData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NewMsgData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NewMsgData;

    /**
     * Verifies a SC_NewMsgData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NewMsgData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NewMsgData
     */
    public static fromObject(object: { [k: string]: any }): SC_NewMsgData;

    /**
     * Creates a plain object from a SC_NewMsgData message. Also converts values to other types if specified.
     * @param message SC_NewMsgData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NewMsgData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NewMsgData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NewMsgData {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1119
    }
}

/** Properties of a CS_SetMsgReadFlag. */
export interface ICS_SetMsgReadFlag {

    /** CS_SetMsgReadFlag id */
    id?: (number|null);

    /** CS_SetMsgReadFlag msgType */
    msgType?: (number|null);
}

/** Represents a CS_SetMsgReadFlag. */
export class CS_SetMsgReadFlag implements ICS_SetMsgReadFlag {

    /**
     * Constructs a new CS_SetMsgReadFlag.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SetMsgReadFlag);

    /** CS_SetMsgReadFlag id. */
    public id: number;

    /** CS_SetMsgReadFlag msgType. */
    public msgType: number;

    /**
     * Creates a new CS_SetMsgReadFlag instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SetMsgReadFlag instance
     */
    public static create(properties?: ICS_SetMsgReadFlag): CS_SetMsgReadFlag;

    /**
     * Encodes the specified CS_SetMsgReadFlag message. Does not implicitly {@link CS_SetMsgReadFlag.verify|verify} messages.
     * @param message CS_SetMsgReadFlag message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SetMsgReadFlag, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SetMsgReadFlag message, length delimited. Does not implicitly {@link CS_SetMsgReadFlag.verify|verify} messages.
     * @param message CS_SetMsgReadFlag message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SetMsgReadFlag, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SetMsgReadFlag message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SetMsgReadFlag
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SetMsgReadFlag;

    /**
     * Decodes a CS_SetMsgReadFlag message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SetMsgReadFlag
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SetMsgReadFlag;

    /**
     * Verifies a CS_SetMsgReadFlag message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SetMsgReadFlag message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SetMsgReadFlag
     */
    public static fromObject(object: { [k: string]: any }): CS_SetMsgReadFlag;

    /**
     * Creates a plain object from a CS_SetMsgReadFlag message. Also converts values to other types if specified.
     * @param message CS_SetMsgReadFlag
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SetMsgReadFlag, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SetMsgReadFlag to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SetMsgReadFlag {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1120
    }
}

/** Properties of a SC_FeedBackUpDate. */
export interface ISC_FeedBackUpDate {

    /** SC_FeedBackUpDate feedbackid */
    feedbackid?: (number|null);

    /** SC_FeedBackUpDate type */
    type?: (number|null);

    /** SC_FeedBackUpDate updateTime */
    updateTime?: (number|null);
}

/** Represents a SC_FeedBackUpDate. */
export class SC_FeedBackUpDate implements ISC_FeedBackUpDate {

    /**
     * Constructs a new SC_FeedBackUpDate.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_FeedBackUpDate);

    /** SC_FeedBackUpDate feedbackid. */
    public feedbackid: number;

    /** SC_FeedBackUpDate type. */
    public type: number;

    /** SC_FeedBackUpDate updateTime. */
    public updateTime: number;

    /**
     * Creates a new SC_FeedBackUpDate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_FeedBackUpDate instance
     */
    public static create(properties?: ISC_FeedBackUpDate): SC_FeedBackUpDate;

    /**
     * Encodes the specified SC_FeedBackUpDate message. Does not implicitly {@link SC_FeedBackUpDate.verify|verify} messages.
     * @param message SC_FeedBackUpDate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_FeedBackUpDate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_FeedBackUpDate message, length delimited. Does not implicitly {@link SC_FeedBackUpDate.verify|verify} messages.
     * @param message SC_FeedBackUpDate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_FeedBackUpDate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_FeedBackUpDate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_FeedBackUpDate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_FeedBackUpDate;

    /**
     * Decodes a SC_FeedBackUpDate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_FeedBackUpDate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_FeedBackUpDate;

    /**
     * Verifies a SC_FeedBackUpDate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_FeedBackUpDate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_FeedBackUpDate
     */
    public static fromObject(object: { [k: string]: any }): SC_FeedBackUpDate;

    /**
     * Creates a plain object from a SC_FeedBackUpDate message. Also converts values to other types if specified.
     * @param message SC_FeedBackUpDate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_FeedBackUpDate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_FeedBackUpDate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_FeedBackUpDate {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1121
    }
}

/** Properties of a SC_DeletMsg. */
export interface ISC_DeletMsg {

    /** SC_DeletMsg msgId */
    msgId?: (number|null);

    /** SC_DeletMsg msgType */
    msgType?: (number|null);

    /** SC_DeletMsg asyncid */
    asyncid?: (string|null);
}

/** Represents a SC_DeletMsg. */
export class SC_DeletMsg implements ISC_DeletMsg {

    /**
     * Constructs a new SC_DeletMsg.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DeletMsg);

    /** SC_DeletMsg msgId. */
    public msgId: number;

    /** SC_DeletMsg msgType. */
    public msgType: number;

    /** SC_DeletMsg asyncid. */
    public asyncid: string;

    /**
     * Creates a new SC_DeletMsg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DeletMsg instance
     */
    public static create(properties?: ISC_DeletMsg): SC_DeletMsg;

    /**
     * Encodes the specified SC_DeletMsg message. Does not implicitly {@link SC_DeletMsg.verify|verify} messages.
     * @param message SC_DeletMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DeletMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DeletMsg message, length delimited. Does not implicitly {@link SC_DeletMsg.verify|verify} messages.
     * @param message SC_DeletMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DeletMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DeletMsg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DeletMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DeletMsg;

    /**
     * Decodes a SC_DeletMsg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DeletMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DeletMsg;

    /**
     * Verifies a SC_DeletMsg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DeletMsg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DeletMsg
     */
    public static fromObject(object: { [k: string]: any }): SC_DeletMsg;

    /**
     * Creates a plain object from a SC_DeletMsg message. Also converts values to other types if specified.
     * @param message SC_DeletMsg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DeletMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DeletMsg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DeletMsg {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1122
    }
}

/** Properties of a CS_CashMoney. */
export interface ICS_CashMoney {

    /** CS_CashMoney money */
    money?: (number|null);

    /** CS_CashMoney cashType */
    cashType?: (number|null);
}

/** Represents a CS_CashMoney. */
export class CS_CashMoney implements ICS_CashMoney {

    /**
     * Constructs a new CS_CashMoney.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CashMoney);

    /** CS_CashMoney money. */
    public money: number;

    /** CS_CashMoney cashType. */
    public cashType: number;

    /**
     * Creates a new CS_CashMoney instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CashMoney instance
     */
    public static create(properties?: ICS_CashMoney): CS_CashMoney;

    /**
     * Encodes the specified CS_CashMoney message. Does not implicitly {@link CS_CashMoney.verify|verify} messages.
     * @param message CS_CashMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CashMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CashMoney message, length delimited. Does not implicitly {@link CS_CashMoney.verify|verify} messages.
     * @param message CS_CashMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CashMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CashMoney message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CashMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CashMoney;

    /**
     * Decodes a CS_CashMoney message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CashMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CashMoney;

    /**
     * Verifies a CS_CashMoney message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CashMoney message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CashMoney
     */
    public static fromObject(object: { [k: string]: any }): CS_CashMoney;

    /**
     * Creates a plain object from a CS_CashMoney message. Also converts values to other types if specified.
     * @param message CS_CashMoney
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CashMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CashMoney to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CashMoney {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1123
    }
}

/** Properties of a SC_CashMoneyResult. */
export interface ISC_CashMoneyResult {

    /** SC_CashMoneyResult result */
    result?: (number|null);

    /** SC_CashMoneyResult bank */
    bank?: (number|Long|null);

    /** SC_CashMoneyResult money */
    money?: (number|Long|null);

    /** SC_CashMoneyResult time */
    time?: (number|null);

    /** SC_CashMoneyResult moneyMax */
    moneyMax?: (number|Long|null);
}

/** Represents a SC_CashMoneyResult. */
export class SC_CashMoneyResult implements ISC_CashMoneyResult {

    /**
     * Constructs a new SC_CashMoneyResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CashMoneyResult);

    /** SC_CashMoneyResult result. */
    public result: number;

    /** SC_CashMoneyResult bank. */
    public bank: (number|Long);

    /** SC_CashMoneyResult money. */
    public money: (number|Long);

    /** SC_CashMoneyResult time. */
    public time: number;

    /** SC_CashMoneyResult moneyMax. */
    public moneyMax: (number|Long);

    /**
     * Creates a new SC_CashMoneyResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CashMoneyResult instance
     */
    public static create(properties?: ISC_CashMoneyResult): SC_CashMoneyResult;

    /**
     * Encodes the specified SC_CashMoneyResult message. Does not implicitly {@link SC_CashMoneyResult.verify|verify} messages.
     * @param message SC_CashMoneyResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CashMoneyResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CashMoneyResult message, length delimited. Does not implicitly {@link SC_CashMoneyResult.verify|verify} messages.
     * @param message SC_CashMoneyResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CashMoneyResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CashMoneyResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CashMoneyResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CashMoneyResult;

    /**
     * Decodes a SC_CashMoneyResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CashMoneyResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CashMoneyResult;

    /**
     * Verifies a SC_CashMoneyResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CashMoneyResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CashMoneyResult
     */
    public static fromObject(object: { [k: string]: any }): SC_CashMoneyResult;

    /**
     * Creates a plain object from a SC_CashMoneyResult message. Also converts values to other types if specified.
     * @param message SC_CashMoneyResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CashMoneyResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CashMoneyResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CashMoneyResult {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1124
    }
}

/** Properties of a CS_CashMoneyType. */
export interface ICS_CashMoneyType {

    /** CS_CashMoneyType cashType */
    cashType?: (number[]|null);
}

/** Represents a CS_CashMoneyType. */
export class CS_CashMoneyType implements ICS_CashMoneyType {

    /**
     * Constructs a new CS_CashMoneyType.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CashMoneyType);

    /** CS_CashMoneyType cashType. */
    public cashType: number[];

    /**
     * Creates a new CS_CashMoneyType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CashMoneyType instance
     */
    public static create(properties?: ICS_CashMoneyType): CS_CashMoneyType;

    /**
     * Encodes the specified CS_CashMoneyType message. Does not implicitly {@link CS_CashMoneyType.verify|verify} messages.
     * @param message CS_CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CashMoneyType message, length delimited. Does not implicitly {@link CS_CashMoneyType.verify|verify} messages.
     * @param message CS_CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CashMoneyType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CashMoneyType;

    /**
     * Decodes a CS_CashMoneyType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CashMoneyType;

    /**
     * Verifies a CS_CashMoneyType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CashMoneyType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CashMoneyType
     */
    public static fromObject(object: { [k: string]: any }): CS_CashMoneyType;

    /**
     * Creates a plain object from a CS_CashMoneyType message. Also converts values to other types if specified.
     * @param message CS_CashMoneyType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CashMoneyType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CashMoneyType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CashMoneyType {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1125
    }
}

/** Properties of a SC_CashMoneyType. */
export interface ISC_CashMoneyType {

    /** SC_CashMoneyType pbCashInfo */
    pbCashInfo?: (ICashMoneyType[]|null);
}

/** Represents a SC_CashMoneyType. */
export class SC_CashMoneyType implements ISC_CashMoneyType {

    /**
     * Constructs a new SC_CashMoneyType.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CashMoneyType);

    /** SC_CashMoneyType pbCashInfo. */
    public pbCashInfo: ICashMoneyType[];

    /**
     * Creates a new SC_CashMoneyType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CashMoneyType instance
     */
    public static create(properties?: ISC_CashMoneyType): SC_CashMoneyType;

    /**
     * Encodes the specified SC_CashMoneyType message. Does not implicitly {@link SC_CashMoneyType.verify|verify} messages.
     * @param message SC_CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CashMoneyType message, length delimited. Does not implicitly {@link SC_CashMoneyType.verify|verify} messages.
     * @param message SC_CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CashMoneyType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CashMoneyType;

    /**
     * Decodes a SC_CashMoneyType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CashMoneyType;

    /**
     * Verifies a SC_CashMoneyType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CashMoneyType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CashMoneyType
     */
    public static fromObject(object: { [k: string]: any }): SC_CashMoneyType;

    /**
     * Creates a plain object from a SC_CashMoneyType message. Also converts values to other types if specified.
     * @param message SC_CashMoneyType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CashMoneyType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CashMoneyType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CashMoneyType {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1126
    }
}

/** Properties of a SC_NotifyBank. */
export interface ISC_NotifyBank {

    /** SC_NotifyBank optType */
    optType?: (number|null);

    /** SC_NotifyBank bank */
    bank?: (number|Long|null);

    /** SC_NotifyBank changeBank */
    changeBank?: (number|Long|null);
}

/** Represents a SC_NotifyBank. */
export class SC_NotifyBank implements ISC_NotifyBank {

    /**
     * Constructs a new SC_NotifyBank.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyBank);

    /** SC_NotifyBank optType. */
    public optType: number;

    /** SC_NotifyBank bank. */
    public bank: (number|Long);

    /** SC_NotifyBank changeBank. */
    public changeBank: (number|Long);

    /**
     * Creates a new SC_NotifyBank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyBank instance
     */
    public static create(properties?: ISC_NotifyBank): SC_NotifyBank;

    /**
     * Encodes the specified SC_NotifyBank message. Does not implicitly {@link SC_NotifyBank.verify|verify} messages.
     * @param message SC_NotifyBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyBank message, length delimited. Does not implicitly {@link SC_NotifyBank.verify|verify} messages.
     * @param message SC_NotifyBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyBank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyBank;

    /**
     * Decodes a SC_NotifyBank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyBank;

    /**
     * Verifies a SC_NotifyBank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyBank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyBank
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyBank;

    /**
     * Creates a plain object from a SC_NotifyBank message. Also converts values to other types if specified.
     * @param message SC_NotifyBank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyBank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyBank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyBank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1127
    }
}

/** Properties of a CS_BandAlipay. */
export interface ICS_BandAlipay {

    /** CS_BandAlipay alipayAccount */
    alipayAccount?: (string|null);

    /** CS_BandAlipay alipayName */
    alipayName?: (string|null);
}

/** Represents a CS_BandAlipay. */
export class CS_BandAlipay implements ICS_BandAlipay {

    /**
     * Constructs a new CS_BandAlipay.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BandAlipay);

    /** CS_BandAlipay alipayAccount. */
    public alipayAccount: string;

    /** CS_BandAlipay alipayName. */
    public alipayName: string;

    /**
     * Creates a new CS_BandAlipay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BandAlipay instance
     */
    public static create(properties?: ICS_BandAlipay): CS_BandAlipay;

    /**
     * Encodes the specified CS_BandAlipay message. Does not implicitly {@link CS_BandAlipay.verify|verify} messages.
     * @param message CS_BandAlipay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BandAlipay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BandAlipay message, length delimited. Does not implicitly {@link CS_BandAlipay.verify|verify} messages.
     * @param message CS_BandAlipay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BandAlipay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BandAlipay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BandAlipay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BandAlipay;

    /**
     * Decodes a CS_BandAlipay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BandAlipay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BandAlipay;

    /**
     * Verifies a CS_BandAlipay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BandAlipay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BandAlipay
     */
    public static fromObject(object: { [k: string]: any }): CS_BandAlipay;

    /**
     * Creates a plain object from a CS_BandAlipay message. Also converts values to other types if specified.
     * @param message CS_BandAlipay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BandAlipay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BandAlipay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BandAlipay {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1128
    }
}

/** Properties of a SC_BandAlipay. */
export interface ISC_BandAlipay {

    /** SC_BandAlipay result */
    result?: (number|null);

    /** SC_BandAlipay alipayAccount */
    alipayAccount?: (string|null);

    /** SC_BandAlipay alipayName */
    alipayName?: (string|null);
}

/** Represents a SC_BandAlipay. */
export class SC_BandAlipay implements ISC_BandAlipay {

    /**
     * Constructs a new SC_BandAlipay.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BandAlipay);

    /** SC_BandAlipay result. */
    public result: number;

    /** SC_BandAlipay alipayAccount. */
    public alipayAccount: string;

    /** SC_BandAlipay alipayName. */
    public alipayName: string;

    /**
     * Creates a new SC_BandAlipay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BandAlipay instance
     */
    public static create(properties?: ISC_BandAlipay): SC_BandAlipay;

    /**
     * Encodes the specified SC_BandAlipay message. Does not implicitly {@link SC_BandAlipay.verify|verify} messages.
     * @param message SC_BandAlipay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BandAlipay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BandAlipay message, length delimited. Does not implicitly {@link SC_BandAlipay.verify|verify} messages.
     * @param message SC_BandAlipay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BandAlipay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BandAlipay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BandAlipay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BandAlipay;

    /**
     * Decodes a SC_BandAlipay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BandAlipay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BandAlipay;

    /**
     * Verifies a SC_BandAlipay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BandAlipay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BandAlipay
     */
    public static fromObject(object: { [k: string]: any }): SC_BandAlipay;

    /**
     * Creates a plain object from a SC_BandAlipay message. Also converts values to other types if specified.
     * @param message SC_BandAlipay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BandAlipay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BandAlipay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BandAlipay {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1129
    }
}

/** Properties of a CS_Trusteeship. */
export interface ICS_Trusteeship {

    /** CS_Trusteeship flag */
    flag?: (number|null);
}

/** Represents a CS_Trusteeship. */
export class CS_Trusteeship implements ICS_Trusteeship {

    /**
     * Constructs a new CS_Trusteeship.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Trusteeship);

    /** CS_Trusteeship flag. */
    public flag: number;

    /**
     * Creates a new CS_Trusteeship instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Trusteeship instance
     */
    public static create(properties?: ICS_Trusteeship): CS_Trusteeship;

    /**
     * Encodes the specified CS_Trusteeship message. Does not implicitly {@link CS_Trusteeship.verify|verify} messages.
     * @param message CS_Trusteeship message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Trusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Trusteeship message, length delimited. Does not implicitly {@link CS_Trusteeship.verify|verify} messages.
     * @param message CS_Trusteeship message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Trusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Trusteeship message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Trusteeship
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Trusteeship;

    /**
     * Decodes a CS_Trusteeship message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Trusteeship
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Trusteeship;

    /**
     * Verifies a CS_Trusteeship message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Trusteeship message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Trusteeship
     */
    public static fromObject(object: { [k: string]: any }): CS_Trusteeship;

    /**
     * Creates a plain object from a CS_Trusteeship message. Also converts values to other types if specified.
     * @param message CS_Trusteeship
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Trusteeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Trusteeship to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Trusteeship {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1130
    }
}

/** Properties of a SC_ShowTax. */
export interface ISC_ShowTax {

    /** SC_ShowTax flag */
    flag?: (number|null);
}

/** Represents a SC_ShowTax. */
export class SC_ShowTax implements ISC_ShowTax {

    /**
     * Constructs a new SC_ShowTax.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ShowTax);

    /** SC_ShowTax flag. */
    public flag: number;

    /**
     * Creates a new SC_ShowTax instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ShowTax instance
     */
    public static create(properties?: ISC_ShowTax): SC_ShowTax;

    /**
     * Encodes the specified SC_ShowTax message. Does not implicitly {@link SC_ShowTax.verify|verify} messages.
     * @param message SC_ShowTax message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ShowTax, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ShowTax message, length delimited. Does not implicitly {@link SC_ShowTax.verify|verify} messages.
     * @param message SC_ShowTax message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ShowTax, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ShowTax message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ShowTax
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ShowTax;

    /**
     * Decodes a SC_ShowTax message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ShowTax
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ShowTax;

    /**
     * Verifies a SC_ShowTax message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ShowTax message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ShowTax
     */
    public static fromObject(object: { [k: string]: any }): SC_ShowTax;

    /**
     * Creates a plain object from a SC_ShowTax message. Also converts values to other types if specified.
     * @param message SC_ShowTax
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ShowTax, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ShowTax to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ShowTax {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1131
    }
}

/** Properties of a SD_Delonline_player. */
export interface ISD_Delonline_player {

    /** SD_Delonline_player guid */
    guid?: (number|null);

    /** SD_Delonline_player gameId */
    gameId?: (number|null);
}

/** Represents a SD_Delonline_player. */
export class SD_Delonline_player implements ISD_Delonline_player {

    /**
     * Constructs a new SD_Delonline_player.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISD_Delonline_player);

    /** SD_Delonline_player guid. */
    public guid: number;

    /** SD_Delonline_player gameId. */
    public gameId: number;

    /**
     * Creates a new SD_Delonline_player instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SD_Delonline_player instance
     */
    public static create(properties?: ISD_Delonline_player): SD_Delonline_player;

    /**
     * Encodes the specified SD_Delonline_player message. Does not implicitly {@link SD_Delonline_player.verify|verify} messages.
     * @param message SD_Delonline_player message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISD_Delonline_player, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SD_Delonline_player message, length delimited. Does not implicitly {@link SD_Delonline_player.verify|verify} messages.
     * @param message SD_Delonline_player message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISD_Delonline_player, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SD_Delonline_player message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SD_Delonline_player
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SD_Delonline_player;

    /**
     * Decodes a SD_Delonline_player message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SD_Delonline_player
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SD_Delonline_player;

    /**
     * Verifies a SD_Delonline_player message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SD_Delonline_player message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SD_Delonline_player
     */
    public static fromObject(object: { [k: string]: any }): SD_Delonline_player;

    /**
     * Creates a plain object from a SD_Delonline_player message. Also converts values to other types if specified.
     * @param message SD_Delonline_player
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SD_Delonline_player, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SD_Delonline_player to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SD_Delonline_player {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1132
    }
}

/** Properties of a SC_AlipayEdit. */
export interface ISC_AlipayEdit {

    /** SC_AlipayEdit guid */
    guid?: (number|null);

    /** SC_AlipayEdit alipayName */
    alipayName?: (string|null);

    /** SC_AlipayEdit alipayNameY */
    alipayNameY?: (string|null);

    /** SC_AlipayEdit alipayAccount */
    alipayAccount?: (string|null);

    /** SC_AlipayEdit alipayAccountY */
    alipayAccountY?: (string|null);
}

/** Represents a SC_AlipayEdit. */
export class SC_AlipayEdit implements ISC_AlipayEdit {

    /**
     * Constructs a new SC_AlipayEdit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AlipayEdit);

    /** SC_AlipayEdit guid. */
    public guid: number;

    /** SC_AlipayEdit alipayName. */
    public alipayName: string;

    /** SC_AlipayEdit alipayNameY. */
    public alipayNameY: string;

    /** SC_AlipayEdit alipayAccount. */
    public alipayAccount: string;

    /** SC_AlipayEdit alipayAccountY. */
    public alipayAccountY: string;

    /**
     * Creates a new SC_AlipayEdit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AlipayEdit instance
     */
    public static create(properties?: ISC_AlipayEdit): SC_AlipayEdit;

    /**
     * Encodes the specified SC_AlipayEdit message. Does not implicitly {@link SC_AlipayEdit.verify|verify} messages.
     * @param message SC_AlipayEdit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AlipayEdit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AlipayEdit message, length delimited. Does not implicitly {@link SC_AlipayEdit.verify|verify} messages.
     * @param message SC_AlipayEdit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AlipayEdit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AlipayEdit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AlipayEdit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AlipayEdit;

    /**
     * Decodes a SC_AlipayEdit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AlipayEdit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AlipayEdit;

    /**
     * Verifies a SC_AlipayEdit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AlipayEdit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AlipayEdit
     */
    public static fromObject(object: { [k: string]: any }): SC_AlipayEdit;

    /**
     * Creates a plain object from a SC_AlipayEdit message. Also converts values to other types if specified.
     * @param message SC_AlipayEdit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AlipayEdit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AlipayEdit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AlipayEdit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1133
    }
}

/** Properties of a SC_BrocastClientUpdateInfo. */
export interface ISC_BrocastClientUpdateInfo {

    /** SC_BrocastClientUpdateInfo updateInfo */
    updateInfo?: (string|null);
}

/** Represents a SC_BrocastClientUpdateInfo. */
export class SC_BrocastClientUpdateInfo implements ISC_BrocastClientUpdateInfo {

    /**
     * Constructs a new SC_BrocastClientUpdateInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BrocastClientUpdateInfo);

    /** SC_BrocastClientUpdateInfo updateInfo. */
    public updateInfo: string;

    /**
     * Creates a new SC_BrocastClientUpdateInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BrocastClientUpdateInfo instance
     */
    public static create(properties?: ISC_BrocastClientUpdateInfo): SC_BrocastClientUpdateInfo;

    /**
     * Encodes the specified SC_BrocastClientUpdateInfo message. Does not implicitly {@link SC_BrocastClientUpdateInfo.verify|verify} messages.
     * @param message SC_BrocastClientUpdateInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BrocastClientUpdateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BrocastClientUpdateInfo message, length delimited. Does not implicitly {@link SC_BrocastClientUpdateInfo.verify|verify} messages.
     * @param message SC_BrocastClientUpdateInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BrocastClientUpdateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BrocastClientUpdateInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BrocastClientUpdateInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BrocastClientUpdateInfo;

    /**
     * Decodes a SC_BrocastClientUpdateInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BrocastClientUpdateInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BrocastClientUpdateInfo;

    /**
     * Verifies a SC_BrocastClientUpdateInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BrocastClientUpdateInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BrocastClientUpdateInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_BrocastClientUpdateInfo;

    /**
     * Creates a plain object from a SC_BrocastClientUpdateInfo message. Also converts values to other types if specified.
     * @param message SC_BrocastClientUpdateInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BrocastClientUpdateInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BrocastClientUpdateInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BrocastClientUpdateInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1134
    }
}

/** Properties of a SC_FreezeAccount. */
export interface ISC_FreezeAccount {

    /** SC_FreezeAccount guid */
    guid?: (number|null);

    /** SC_FreezeAccount status */
    status?: (number|null);
}

/** Represents a SC_FreezeAccount. */
export class SC_FreezeAccount implements ISC_FreezeAccount {

    /**
     * Constructs a new SC_FreezeAccount.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_FreezeAccount);

    /** SC_FreezeAccount guid. */
    public guid: number;

    /** SC_FreezeAccount status. */
    public status: number;

    /**
     * Creates a new SC_FreezeAccount instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_FreezeAccount instance
     */
    public static create(properties?: ISC_FreezeAccount): SC_FreezeAccount;

    /**
     * Encodes the specified SC_FreezeAccount message. Does not implicitly {@link SC_FreezeAccount.verify|verify} messages.
     * @param message SC_FreezeAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_FreezeAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_FreezeAccount message, length delimited. Does not implicitly {@link SC_FreezeAccount.verify|verify} messages.
     * @param message SC_FreezeAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_FreezeAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_FreezeAccount message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_FreezeAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_FreezeAccount;

    /**
     * Decodes a SC_FreezeAccount message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_FreezeAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_FreezeAccount;

    /**
     * Verifies a SC_FreezeAccount message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_FreezeAccount message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_FreezeAccount
     */
    public static fromObject(object: { [k: string]: any }): SC_FreezeAccount;

    /**
     * Creates a plain object from a SC_FreezeAccount message. Also converts values to other types if specified.
     * @param message SC_FreezeAccount
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_FreezeAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_FreezeAccount to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_FreezeAccount {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1135
    }
}

/** Properties of a SC_GameMaintain. */
export interface ISC_GameMaintain {

    /** SC_GameMaintain result */
    result?: (number|null);
}

/** Represents a SC_GameMaintain. */
export class SC_GameMaintain implements ISC_GameMaintain {

    /**
     * Constructs a new SC_GameMaintain.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_GameMaintain);

    /** SC_GameMaintain result. */
    public result: number;

    /**
     * Creates a new SC_GameMaintain instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_GameMaintain instance
     */
    public static create(properties?: ISC_GameMaintain): SC_GameMaintain;

    /**
     * Encodes the specified SC_GameMaintain message. Does not implicitly {@link SC_GameMaintain.verify|verify} messages.
     * @param message SC_GameMaintain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_GameMaintain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_GameMaintain message, length delimited. Does not implicitly {@link SC_GameMaintain.verify|verify} messages.
     * @param message SC_GameMaintain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_GameMaintain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_GameMaintain message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_GameMaintain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_GameMaintain;

    /**
     * Decodes a SC_GameMaintain message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_GameMaintain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_GameMaintain;

    /**
     * Verifies a SC_GameMaintain message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_GameMaintain message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_GameMaintain
     */
    public static fromObject(object: { [k: string]: any }): SC_GameMaintain;

    /**
     * Creates a plain object from a SC_GameMaintain message. Also converts values to other types if specified.
     * @param message SC_GameMaintain
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_GameMaintain, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_GameMaintain to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_GameMaintain {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1136
    }
}

/** Properties of a SC_CashMaintain. */
export interface ISC_CashMaintain {

    /** SC_CashMaintain result */
    result?: (number|null);
}

/** Represents a SC_CashMaintain. */
export class SC_CashMaintain implements ISC_CashMaintain {

    /**
     * Constructs a new SC_CashMaintain.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CashMaintain);

    /** SC_CashMaintain result. */
    public result: number;

    /**
     * Creates a new SC_CashMaintain instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CashMaintain instance
     */
    public static create(properties?: ISC_CashMaintain): SC_CashMaintain;

    /**
     * Encodes the specified SC_CashMaintain message. Does not implicitly {@link SC_CashMaintain.verify|verify} messages.
     * @param message SC_CashMaintain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CashMaintain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CashMaintain message, length delimited. Does not implicitly {@link SC_CashMaintain.verify|verify} messages.
     * @param message SC_CashMaintain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CashMaintain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CashMaintain message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CashMaintain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CashMaintain;

    /**
     * Decodes a SC_CashMaintain message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CashMaintain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CashMaintain;

    /**
     * Verifies a SC_CashMaintain message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CashMaintain message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CashMaintain
     */
    public static fromObject(object: { [k: string]: any }): SC_CashMaintain;

    /**
     * Creates a plain object from a SC_CashMaintain message. Also converts values to other types if specified.
     * @param message SC_CashMaintain
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CashMaintain, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CashMaintain to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CashMaintain {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1137
    }
}

/** Properties of a CS_RequestProxyConfig. */
export interface ICS_RequestProxyConfig {

    /** CS_RequestProxyConfig platformId */
    platformId?: (number|null);
}

/** Represents a CS_RequestProxyConfig. */
export class CS_RequestProxyConfig implements ICS_RequestProxyConfig {

    /**
     * Constructs a new CS_RequestProxyConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RequestProxyConfig);

    /** CS_RequestProxyConfig platformId. */
    public platformId: number;

    /**
     * Creates a new CS_RequestProxyConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RequestProxyConfig instance
     */
    public static create(properties?: ICS_RequestProxyConfig): CS_RequestProxyConfig;

    /**
     * Encodes the specified CS_RequestProxyConfig message. Does not implicitly {@link CS_RequestProxyConfig.verify|verify} messages.
     * @param message CS_RequestProxyConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RequestProxyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RequestProxyConfig message, length delimited. Does not implicitly {@link CS_RequestProxyConfig.verify|verify} messages.
     * @param message CS_RequestProxyConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RequestProxyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RequestProxyConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RequestProxyConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RequestProxyConfig;

    /**
     * Decodes a CS_RequestProxyConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RequestProxyConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RequestProxyConfig;

    /**
     * Verifies a CS_RequestProxyConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RequestProxyConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RequestProxyConfig
     */
    public static fromObject(object: { [k: string]: any }): CS_RequestProxyConfig;

    /**
     * Creates a plain object from a CS_RequestProxyConfig message. Also converts values to other types if specified.
     * @param message CS_RequestProxyConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RequestProxyConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RequestProxyConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RequestProxyConfig {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1141
    }
}

/** Properties of a SC_ReplyProxyConfig. */
export interface ISC_ReplyProxyConfig {

    /** SC_ReplyProxyConfig result */
    result?: (number|null);

    /** SC_ReplyProxyConfig pbPlatformProxys */
    pbPlatformProxys?: (IPlatformProxyInfos|null);
}

/** Represents a SC_ReplyProxyConfig. */
export class SC_ReplyProxyConfig implements ISC_ReplyProxyConfig {

    /**
     * Constructs a new SC_ReplyProxyConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyProxyConfig);

    /** SC_ReplyProxyConfig result. */
    public result: number;

    /** SC_ReplyProxyConfig pbPlatformProxys. */
    public pbPlatformProxys?: (IPlatformProxyInfos|null);

    /**
     * Creates a new SC_ReplyProxyConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyProxyConfig instance
     */
    public static create(properties?: ISC_ReplyProxyConfig): SC_ReplyProxyConfig;

    /**
     * Encodes the specified SC_ReplyProxyConfig message. Does not implicitly {@link SC_ReplyProxyConfig.verify|verify} messages.
     * @param message SC_ReplyProxyConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyProxyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyProxyConfig message, length delimited. Does not implicitly {@link SC_ReplyProxyConfig.verify|verify} messages.
     * @param message SC_ReplyProxyConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyProxyConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyProxyConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyProxyConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyProxyConfig;

    /**
     * Decodes a SC_ReplyProxyConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyProxyConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyProxyConfig;

    /**
     * Verifies a SC_ReplyProxyConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyProxyConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyProxyConfig
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyProxyConfig;

    /**
     * Creates a plain object from a SC_ReplyProxyConfig message. Also converts values to other types if specified.
     * @param message SC_ReplyProxyConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyProxyConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyProxyConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyProxyConfig {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1142
    }
}

/** Properties of a SC_GameNotice. */
export interface ISC_GameNotice {

    /** SC_GameNotice pbGameNotice */
    pbGameNotice?: (IGameNotice|null);
}

/** Represents a SC_GameNotice. */
export class SC_GameNotice implements ISC_GameNotice {

    /**
     * Constructs a new SC_GameNotice.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_GameNotice);

    /** SC_GameNotice pbGameNotice. */
    public pbGameNotice?: (IGameNotice|null);

    /**
     * Creates a new SC_GameNotice instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_GameNotice instance
     */
    public static create(properties?: ISC_GameNotice): SC_GameNotice;

    /**
     * Encodes the specified SC_GameNotice message. Does not implicitly {@link SC_GameNotice.verify|verify} messages.
     * @param message SC_GameNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_GameNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_GameNotice message, length delimited. Does not implicitly {@link SC_GameNotice.verify|verify} messages.
     * @param message SC_GameNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_GameNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_GameNotice message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_GameNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_GameNotice;

    /**
     * Decodes a SC_GameNotice message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_GameNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_GameNotice;

    /**
     * Verifies a SC_GameNotice message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_GameNotice message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_GameNotice
     */
    public static fromObject(object: { [k: string]: any }): SC_GameNotice;

    /**
     * Creates a plain object from a SC_GameNotice message. Also converts values to other types if specified.
     * @param message SC_GameNotice
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_GameNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_GameNotice to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_GameNotice {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1143
    }
}

/** Properties of a SC_ReplyClientPaySwitch. */
export interface ISC_ReplyClientPaySwitch {

    /** SC_ReplyClientPaySwitch rechargeSwitchJson */
    rechargeSwitchJson?: (string|null);
}

/** Represents a SC_ReplyClientPaySwitch. */
export class SC_ReplyClientPaySwitch implements ISC_ReplyClientPaySwitch {

    /**
     * Constructs a new SC_ReplyClientPaySwitch.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientPaySwitch);

    /** SC_ReplyClientPaySwitch rechargeSwitchJson. */
    public rechargeSwitchJson: string;

    /**
     * Creates a new SC_ReplyClientPaySwitch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientPaySwitch instance
     */
    public static create(properties?: ISC_ReplyClientPaySwitch): SC_ReplyClientPaySwitch;

    /**
     * Encodes the specified SC_ReplyClientPaySwitch message. Does not implicitly {@link SC_ReplyClientPaySwitch.verify|verify} messages.
     * @param message SC_ReplyClientPaySwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientPaySwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientPaySwitch message, length delimited. Does not implicitly {@link SC_ReplyClientPaySwitch.verify|verify} messages.
     * @param message SC_ReplyClientPaySwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientPaySwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientPaySwitch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientPaySwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientPaySwitch;

    /**
     * Decodes a SC_ReplyClientPaySwitch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientPaySwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientPaySwitch;

    /**
     * Verifies a SC_ReplyClientPaySwitch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientPaySwitch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientPaySwitch
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientPaySwitch;

    /**
     * Creates a plain object from a SC_ReplyClientPaySwitch message. Also converts values to other types if specified.
     * @param message SC_ReplyClientPaySwitch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientPaySwitch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientPaySwitch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientPaySwitch {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1144
    }
}

/** Properties of a SC_ReplyClientCashSwitch. */
export interface ISC_ReplyClientCashSwitch {

    /** SC_ReplyClientCashSwitch cashSwitch */
    cashSwitch?: (boolean|null);
}

/** Represents a SC_ReplyClientCashSwitch. */
export class SC_ReplyClientCashSwitch implements ISC_ReplyClientCashSwitch {

    /**
     * Constructs a new SC_ReplyClientCashSwitch.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientCashSwitch);

    /** SC_ReplyClientCashSwitch cashSwitch. */
    public cashSwitch: boolean;

    /**
     * Creates a new SC_ReplyClientCashSwitch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientCashSwitch instance
     */
    public static create(properties?: ISC_ReplyClientCashSwitch): SC_ReplyClientCashSwitch;

    /**
     * Encodes the specified SC_ReplyClientCashSwitch message. Does not implicitly {@link SC_ReplyClientCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientCashSwitch message, length delimited. Does not implicitly {@link SC_ReplyClientCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientCashSwitch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientCashSwitch;

    /**
     * Decodes a SC_ReplyClientCashSwitch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientCashSwitch;

    /**
     * Verifies a SC_ReplyClientCashSwitch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientCashSwitch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientCashSwitch
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientCashSwitch;

    /**
     * Creates a plain object from a SC_ReplyClientCashSwitch message. Also converts values to other types if specified.
     * @param message SC_ReplyClientCashSwitch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientCashSwitch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientCashSwitch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientCashSwitch {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1145
    }
}

/** Properties of a SD_ChangeBank. */
export interface ISD_ChangeBank {

    /** SD_ChangeBank guid */
    guid?: (number|null);

    /** SD_ChangeBank changemoney */
    changemoney?: (number|Long|null);

    /** SD_ChangeBank oldmoney */
    oldmoney?: (number|Long|null);

    /** SD_ChangeBank newmoney */
    newmoney?: (number|Long|null);

    /** SD_ChangeBank optType */
    optType?: (number|null);

    /** SD_ChangeBank nickname */
    nickname?: (string|null);

    /** SD_ChangeBank phone */
    phone?: (string|null);

    /** SD_ChangeBank ip */
    ip?: (string|null);
}

/** Represents a SD_ChangeBank. */
export class SD_ChangeBank implements ISD_ChangeBank {

    /**
     * Constructs a new SD_ChangeBank.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISD_ChangeBank);

    /** SD_ChangeBank guid. */
    public guid: number;

    /** SD_ChangeBank changemoney. */
    public changemoney: (number|Long);

    /** SD_ChangeBank oldmoney. */
    public oldmoney: (number|Long);

    /** SD_ChangeBank newmoney. */
    public newmoney: (number|Long);

    /** SD_ChangeBank optType. */
    public optType: number;

    /** SD_ChangeBank nickname. */
    public nickname: string;

    /** SD_ChangeBank phone. */
    public phone: string;

    /** SD_ChangeBank ip. */
    public ip: string;

    /**
     * Creates a new SD_ChangeBank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SD_ChangeBank instance
     */
    public static create(properties?: ISD_ChangeBank): SD_ChangeBank;

    /**
     * Encodes the specified SD_ChangeBank message. Does not implicitly {@link SD_ChangeBank.verify|verify} messages.
     * @param message SD_ChangeBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISD_ChangeBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SD_ChangeBank message, length delimited. Does not implicitly {@link SD_ChangeBank.verify|verify} messages.
     * @param message SD_ChangeBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISD_ChangeBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SD_ChangeBank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SD_ChangeBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SD_ChangeBank;

    /**
     * Decodes a SD_ChangeBank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SD_ChangeBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SD_ChangeBank;

    /**
     * Verifies a SD_ChangeBank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SD_ChangeBank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SD_ChangeBank
     */
    public static fromObject(object: { [k: string]: any }): SD_ChangeBank;

    /**
     * Creates a plain object from a SD_ChangeBank message. Also converts values to other types if specified.
     * @param message SD_ChangeBank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SD_ChangeBank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SD_ChangeBank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SD_ChangeBank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1146
    }
}

/** Properties of a DS_ChangeBank. */
export interface IDS_ChangeBank {

    /** DS_ChangeBank guid */
    guid?: (number|null);

    /** DS_ChangeBank oldbankmoeny */
    oldbankmoeny?: (number|Long|null);

    /** DS_ChangeBank newbankmoney */
    newbankmoney?: (number|Long|null);

    /** DS_ChangeBank changemoney */
    changemoney?: (number|Long|null);

    /** DS_ChangeBank retcode */
    retcode?: (number|null);

    /** DS_ChangeBank optType */
    optType?: (number|null);
}

/** Represents a DS_ChangeBank. */
export class DS_ChangeBank implements IDS_ChangeBank {

    /**
     * Constructs a new DS_ChangeBank.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDS_ChangeBank);

    /** DS_ChangeBank guid. */
    public guid: number;

    /** DS_ChangeBank oldbankmoeny. */
    public oldbankmoeny: (number|Long);

    /** DS_ChangeBank newbankmoney. */
    public newbankmoney: (number|Long);

    /** DS_ChangeBank changemoney. */
    public changemoney: (number|Long);

    /** DS_ChangeBank retcode. */
    public retcode: number;

    /** DS_ChangeBank optType. */
    public optType: number;

    /**
     * Creates a new DS_ChangeBank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DS_ChangeBank instance
     */
    public static create(properties?: IDS_ChangeBank): DS_ChangeBank;

    /**
     * Encodes the specified DS_ChangeBank message. Does not implicitly {@link DS_ChangeBank.verify|verify} messages.
     * @param message DS_ChangeBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDS_ChangeBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DS_ChangeBank message, length delimited. Does not implicitly {@link DS_ChangeBank.verify|verify} messages.
     * @param message DS_ChangeBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDS_ChangeBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DS_ChangeBank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DS_ChangeBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DS_ChangeBank;

    /**
     * Decodes a DS_ChangeBank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DS_ChangeBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DS_ChangeBank;

    /**
     * Verifies a DS_ChangeBank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DS_ChangeBank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DS_ChangeBank
     */
    public static fromObject(object: { [k: string]: any }): DS_ChangeBank;

    /**
     * Creates a plain object from a DS_ChangeBank message. Also converts values to other types if specified.
     * @param message DS_ChangeBank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DS_ChangeBank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DS_ChangeBank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace DS_ChangeBank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1147
    }
}

/** Properties of a SD_BankLog_New. */
export interface ISD_BankLog_New {

    /** SD_BankLog_New guid */
    guid?: (number|null);

    /** SD_BankLog_New nickname */
    nickname?: (string|null);

    /** SD_BankLog_New phone */
    phone?: (string|null);

    /** SD_BankLog_New optType */
    optType?: (number|null);

    /** SD_BankLog_New money */
    money?: (number|Long|null);

    /** SD_BankLog_New oldMoney */
    oldMoney?: (number|Long|null);

    /** SD_BankLog_New newMoney */
    newMoney?: (number|Long|null);

    /** SD_BankLog_New oldBank */
    oldBank?: (number|Long|null);

    /** SD_BankLog_New newBank */
    newBank?: (number|Long|null);

    /** SD_BankLog_New ip */
    ip?: (string|null);

    /** SD_BankLog_New gameid */
    gameid?: (number|null);
}

/** Represents a SD_BankLog_New. */
export class SD_BankLog_New implements ISD_BankLog_New {

    /**
     * Constructs a new SD_BankLog_New.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISD_BankLog_New);

    /** SD_BankLog_New guid. */
    public guid: number;

    /** SD_BankLog_New nickname. */
    public nickname: string;

    /** SD_BankLog_New phone. */
    public phone: string;

    /** SD_BankLog_New optType. */
    public optType: number;

    /** SD_BankLog_New money. */
    public money: (number|Long);

    /** SD_BankLog_New oldMoney. */
    public oldMoney: (number|Long);

    /** SD_BankLog_New newMoney. */
    public newMoney: (number|Long);

    /** SD_BankLog_New oldBank. */
    public oldBank: (number|Long);

    /** SD_BankLog_New newBank. */
    public newBank: (number|Long);

    /** SD_BankLog_New ip. */
    public ip: string;

    /** SD_BankLog_New gameid. */
    public gameid: number;

    /**
     * Creates a new SD_BankLog_New instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SD_BankLog_New instance
     */
    public static create(properties?: ISD_BankLog_New): SD_BankLog_New;

    /**
     * Encodes the specified SD_BankLog_New message. Does not implicitly {@link SD_BankLog_New.verify|verify} messages.
     * @param message SD_BankLog_New message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISD_BankLog_New, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SD_BankLog_New message, length delimited. Does not implicitly {@link SD_BankLog_New.verify|verify} messages.
     * @param message SD_BankLog_New message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISD_BankLog_New, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SD_BankLog_New message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SD_BankLog_New
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SD_BankLog_New;

    /**
     * Decodes a SD_BankLog_New message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SD_BankLog_New
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SD_BankLog_New;

    /**
     * Verifies a SD_BankLog_New message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SD_BankLog_New message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SD_BankLog_New
     */
    public static fromObject(object: { [k: string]: any }): SD_BankLog_New;

    /**
     * Creates a plain object from a SD_BankLog_New message. Also converts values to other types if specified.
     * @param message SD_BankLog_New
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SD_BankLog_New, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SD_BankLog_New to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SD_BankLog_New {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1148
    }
}

/** Properties of a CS_CheckBankTransferEnable. */
export interface ICS_CheckBankTransferEnable {

    /** CS_CheckBankTransferEnable guid */
    guid?: (number|null);

    /** CS_CheckBankTransferEnable money */
    money?: (number|Long|null);
}

/** Represents a CS_CheckBankTransferEnable. */
export class CS_CheckBankTransferEnable implements ICS_CheckBankTransferEnable {

    /**
     * Constructs a new CS_CheckBankTransferEnable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CheckBankTransferEnable);

    /** CS_CheckBankTransferEnable guid. */
    public guid: number;

    /** CS_CheckBankTransferEnable money. */
    public money: (number|Long);

    /**
     * Creates a new CS_CheckBankTransferEnable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CheckBankTransferEnable instance
     */
    public static create(properties?: ICS_CheckBankTransferEnable): CS_CheckBankTransferEnable;

    /**
     * Encodes the specified CS_CheckBankTransferEnable message. Does not implicitly {@link CS_CheckBankTransferEnable.verify|verify} messages.
     * @param message CS_CheckBankTransferEnable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CheckBankTransferEnable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CheckBankTransferEnable message, length delimited. Does not implicitly {@link CS_CheckBankTransferEnable.verify|verify} messages.
     * @param message CS_CheckBankTransferEnable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CheckBankTransferEnable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CheckBankTransferEnable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CheckBankTransferEnable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CheckBankTransferEnable;

    /**
     * Decodes a CS_CheckBankTransferEnable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CheckBankTransferEnable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CheckBankTransferEnable;

    /**
     * Verifies a CS_CheckBankTransferEnable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CheckBankTransferEnable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CheckBankTransferEnable
     */
    public static fromObject(object: { [k: string]: any }): CS_CheckBankTransferEnable;

    /**
     * Creates a plain object from a CS_CheckBankTransferEnable message. Also converts values to other types if specified.
     * @param message CS_CheckBankTransferEnable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CheckBankTransferEnable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CheckBankTransferEnable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CheckBankTransferEnable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1149
    }
}

/** Properties of a SC_CheckBankTransferEnable. */
export interface ISC_CheckBankTransferEnable {

    /** SC_CheckBankTransferEnable result */
    result?: (number|null);

    /** SC_CheckBankTransferEnable agentName */
    agentName?: (string|null);
}

/** Represents a SC_CheckBankTransferEnable. */
export class SC_CheckBankTransferEnable implements ISC_CheckBankTransferEnable {

    /**
     * Constructs a new SC_CheckBankTransferEnable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CheckBankTransferEnable);

    /** SC_CheckBankTransferEnable result. */
    public result: number;

    /** SC_CheckBankTransferEnable agentName. */
    public agentName: string;

    /**
     * Creates a new SC_CheckBankTransferEnable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CheckBankTransferEnable instance
     */
    public static create(properties?: ISC_CheckBankTransferEnable): SC_CheckBankTransferEnable;

    /**
     * Encodes the specified SC_CheckBankTransferEnable message. Does not implicitly {@link SC_CheckBankTransferEnable.verify|verify} messages.
     * @param message SC_CheckBankTransferEnable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CheckBankTransferEnable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CheckBankTransferEnable message, length delimited. Does not implicitly {@link SC_CheckBankTransferEnable.verify|verify} messages.
     * @param message SC_CheckBankTransferEnable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CheckBankTransferEnable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CheckBankTransferEnable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CheckBankTransferEnable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CheckBankTransferEnable;

    /**
     * Decodes a SC_CheckBankTransferEnable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CheckBankTransferEnable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CheckBankTransferEnable;

    /**
     * Verifies a SC_CheckBankTransferEnable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CheckBankTransferEnable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CheckBankTransferEnable
     */
    public static fromObject(object: { [k: string]: any }): SC_CheckBankTransferEnable;

    /**
     * Creates a plain object from a SC_CheckBankTransferEnable message. Also converts values to other types if specified.
     * @param message SC_CheckBankTransferEnable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CheckBankTransferEnable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CheckBankTransferEnable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CheckBankTransferEnable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1150
    }
}

/** Properties of a SC_ReplyClientPlayerToAgentCashSwitch. */
export interface ISC_ReplyClientPlayerToAgentCashSwitch {

    /** SC_ReplyClientPlayerToAgentCashSwitch agentCashSwitch */
    agentCashSwitch?: (boolean|null);
}

/** Represents a SC_ReplyClientPlayerToAgentCashSwitch. */
export class SC_ReplyClientPlayerToAgentCashSwitch implements ISC_ReplyClientPlayerToAgentCashSwitch {

    /**
     * Constructs a new SC_ReplyClientPlayerToAgentCashSwitch.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientPlayerToAgentCashSwitch);

    /** SC_ReplyClientPlayerToAgentCashSwitch agentCashSwitch. */
    public agentCashSwitch: boolean;

    /**
     * Creates a new SC_ReplyClientPlayerToAgentCashSwitch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientPlayerToAgentCashSwitch instance
     */
    public static create(properties?: ISC_ReplyClientPlayerToAgentCashSwitch): SC_ReplyClientPlayerToAgentCashSwitch;

    /**
     * Encodes the specified SC_ReplyClientPlayerToAgentCashSwitch message. Does not implicitly {@link SC_ReplyClientPlayerToAgentCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientPlayerToAgentCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientPlayerToAgentCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientPlayerToAgentCashSwitch message, length delimited. Does not implicitly {@link SC_ReplyClientPlayerToAgentCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientPlayerToAgentCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientPlayerToAgentCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientPlayerToAgentCashSwitch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientPlayerToAgentCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientPlayerToAgentCashSwitch;

    /**
     * Decodes a SC_ReplyClientPlayerToAgentCashSwitch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientPlayerToAgentCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientPlayerToAgentCashSwitch;

    /**
     * Verifies a SC_ReplyClientPlayerToAgentCashSwitch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientPlayerToAgentCashSwitch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientPlayerToAgentCashSwitch
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientPlayerToAgentCashSwitch;

    /**
     * Creates a plain object from a SC_ReplyClientPlayerToAgentCashSwitch message. Also converts values to other types if specified.
     * @param message SC_ReplyClientPlayerToAgentCashSwitch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientPlayerToAgentCashSwitch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientPlayerToAgentCashSwitch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientPlayerToAgentCashSwitch {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1151
    }
}

/** Properties of a SC_ReplyClientBankerTransferSwitch. */
export interface ISC_ReplyClientBankerTransferSwitch {

    /** SC_ReplyClientBankerTransferSwitch bankerTransferSwitch */
    bankerTransferSwitch?: (boolean|null);
}

/** Represents a SC_ReplyClientBankerTransferSwitch. */
export class SC_ReplyClientBankerTransferSwitch implements ISC_ReplyClientBankerTransferSwitch {

    /**
     * Constructs a new SC_ReplyClientBankerTransferSwitch.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientBankerTransferSwitch);

    /** SC_ReplyClientBankerTransferSwitch bankerTransferSwitch. */
    public bankerTransferSwitch: boolean;

    /**
     * Creates a new SC_ReplyClientBankerTransferSwitch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientBankerTransferSwitch instance
     */
    public static create(properties?: ISC_ReplyClientBankerTransferSwitch): SC_ReplyClientBankerTransferSwitch;

    /**
     * Encodes the specified SC_ReplyClientBankerTransferSwitch message. Does not implicitly {@link SC_ReplyClientBankerTransferSwitch.verify|verify} messages.
     * @param message SC_ReplyClientBankerTransferSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientBankerTransferSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientBankerTransferSwitch message, length delimited. Does not implicitly {@link SC_ReplyClientBankerTransferSwitch.verify|verify} messages.
     * @param message SC_ReplyClientBankerTransferSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientBankerTransferSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientBankerTransferSwitch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientBankerTransferSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientBankerTransferSwitch;

    /**
     * Decodes a SC_ReplyClientBankerTransferSwitch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientBankerTransferSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientBankerTransferSwitch;

    /**
     * Verifies a SC_ReplyClientBankerTransferSwitch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientBankerTransferSwitch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientBankerTransferSwitch
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientBankerTransferSwitch;

    /**
     * Creates a plain object from a SC_ReplyClientBankerTransferSwitch message. Also converts values to other types if specified.
     * @param message SC_ReplyClientBankerTransferSwitch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientBankerTransferSwitch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientBankerTransferSwitch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientBankerTransferSwitch {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1153
    }
}

/** Properties of a CS_BandBankcard. */
export interface ICS_BandBankcard {

    /** CS_BandBankcard bankCardName */
    bankCardName?: (string|null);

    /** CS_BandBankcard bankCardNum */
    bankCardNum?: (string|null);

    /** CS_BandBankcard bankName */
    bankName?: (string|null);

    /** CS_BandBankcard bankProvince */
    bankProvince?: (string|null);

    /** CS_BandBankcard bankCity */
    bankCity?: (string|null);

    /** CS_BandBankcard bankBranch */
    bankBranch?: (string|null);
}

/** Represents a CS_BandBankcard. */
export class CS_BandBankcard implements ICS_BandBankcard {

    /**
     * Constructs a new CS_BandBankcard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_BandBankcard);

    /** CS_BandBankcard bankCardName. */
    public bankCardName: string;

    /** CS_BandBankcard bankCardNum. */
    public bankCardNum: string;

    /** CS_BandBankcard bankName. */
    public bankName: string;

    /** CS_BandBankcard bankProvince. */
    public bankProvince: string;

    /** CS_BandBankcard bankCity. */
    public bankCity: string;

    /** CS_BandBankcard bankBranch. */
    public bankBranch: string;

    /**
     * Creates a new CS_BandBankcard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_BandBankcard instance
     */
    public static create(properties?: ICS_BandBankcard): CS_BandBankcard;

    /**
     * Encodes the specified CS_BandBankcard message. Does not implicitly {@link CS_BandBankcard.verify|verify} messages.
     * @param message CS_BandBankcard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_BandBankcard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_BandBankcard message, length delimited. Does not implicitly {@link CS_BandBankcard.verify|verify} messages.
     * @param message CS_BandBankcard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_BandBankcard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_BandBankcard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_BandBankcard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_BandBankcard;

    /**
     * Decodes a CS_BandBankcard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_BandBankcard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_BandBankcard;

    /**
     * Verifies a CS_BandBankcard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_BandBankcard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_BandBankcard
     */
    public static fromObject(object: { [k: string]: any }): CS_BandBankcard;

    /**
     * Creates a plain object from a CS_BandBankcard message. Also converts values to other types if specified.
     * @param message CS_BandBankcard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_BandBankcard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_BandBankcard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_BandBankcard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1154
    }
}

/** Properties of a SC_BandBankcard. */
export interface ISC_BandBankcard {

    /** SC_BandBankcard result */
    result?: (number|null);

    /** SC_BandBankcard bankCardName */
    bankCardName?: (string|null);

    /** SC_BandBankcard bankCardNum */
    bankCardNum?: (string|null);

    /** SC_BandBankcard bankName */
    bankName?: (string|null);

    /** SC_BandBankcard bankProvince */
    bankProvince?: (string|null);

    /** SC_BandBankcard bankCity */
    bankCity?: (string|null);

    /** SC_BandBankcard bankBranch */
    bankBranch?: (string|null);
}

/** Represents a SC_BandBankcard. */
export class SC_BandBankcard implements ISC_BandBankcard {

    /**
     * Constructs a new SC_BandBankcard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BandBankcard);

    /** SC_BandBankcard result. */
    public result: number;

    /** SC_BandBankcard bankCardName. */
    public bankCardName: string;

    /** SC_BandBankcard bankCardNum. */
    public bankCardNum: string;

    /** SC_BandBankcard bankName. */
    public bankName: string;

    /** SC_BandBankcard bankProvince. */
    public bankProvince: string;

    /** SC_BandBankcard bankCity. */
    public bankCity: string;

    /** SC_BandBankcard bankBranch. */
    public bankBranch: string;

    /**
     * Creates a new SC_BandBankcard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BandBankcard instance
     */
    public static create(properties?: ISC_BandBankcard): SC_BandBankcard;

    /**
     * Encodes the specified SC_BandBankcard message. Does not implicitly {@link SC_BandBankcard.verify|verify} messages.
     * @param message SC_BandBankcard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BandBankcard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BandBankcard message, length delimited. Does not implicitly {@link SC_BandBankcard.verify|verify} messages.
     * @param message SC_BandBankcard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BandBankcard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BandBankcard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BandBankcard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BandBankcard;

    /**
     * Decodes a SC_BandBankcard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BandBankcard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BandBankcard;

    /**
     * Verifies a SC_BandBankcard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BandBankcard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BandBankcard
     */
    public static fromObject(object: { [k: string]: any }): SC_BandBankcard;

    /**
     * Creates a plain object from a SC_BandBankcard message. Also converts values to other types if specified.
     * @param message SC_BandBankcard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BandBankcard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BandBankcard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BandBankcard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1155
    }
}

/** Properties of a SC_BankcardEdit. */
export interface ISC_BankcardEdit {

    /** SC_BankcardEdit guid */
    guid?: (number|null);

    /** SC_BankcardEdit bankCardName */
    bankCardName?: (string|null);

    /** SC_BankcardEdit bankCardNum */
    bankCardNum?: (string|null);

    /** SC_BankcardEdit bankName */
    bankName?: (string|null);
}

/** Represents a SC_BankcardEdit. */
export class SC_BankcardEdit implements ISC_BankcardEdit {

    /**
     * Constructs a new SC_BankcardEdit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BankcardEdit);

    /** SC_BankcardEdit guid. */
    public guid: number;

    /** SC_BankcardEdit bankCardName. */
    public bankCardName: string;

    /** SC_BankcardEdit bankCardNum. */
    public bankCardNum: string;

    /** SC_BankcardEdit bankName. */
    public bankName: string;

    /**
     * Creates a new SC_BankcardEdit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BankcardEdit instance
     */
    public static create(properties?: ISC_BankcardEdit): SC_BankcardEdit;

    /**
     * Encodes the specified SC_BankcardEdit message. Does not implicitly {@link SC_BankcardEdit.verify|verify} messages.
     * @param message SC_BankcardEdit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BankcardEdit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BankcardEdit message, length delimited. Does not implicitly {@link SC_BankcardEdit.verify|verify} messages.
     * @param message SC_BankcardEdit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BankcardEdit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BankcardEdit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BankcardEdit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BankcardEdit;

    /**
     * Decodes a SC_BankcardEdit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BankcardEdit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BankcardEdit;

    /**
     * Verifies a SC_BankcardEdit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BankcardEdit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BankcardEdit
     */
    public static fromObject(object: { [k: string]: any }): SC_BankcardEdit;

    /**
     * Creates a plain object from a SC_BankcardEdit message. Also converts values to other types if specified.
     * @param message SC_BankcardEdit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BankcardEdit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BankcardEdit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BankcardEdit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1156
    }
}

/** Properties of a SC_Charge_Rate. */
export interface ISC_Charge_Rate {

    /** SC_Charge_Rate guid */
    guid?: (number|null);

    /** SC_Charge_Rate chargeNum */
    chargeNum?: (number|null);

    /** SC_Charge_Rate agentNum */
    agentNum?: (number|null);

    /** SC_Charge_Rate chargeSuccessNum */
    chargeSuccessNum?: (number|null);

    /** SC_Charge_Rate agentSuccessNum */
    agentSuccessNum?: (number|null);

    /** SC_Charge_Rate agentRateDef */
    agentRateDef?: (number|null);

    /** SC_Charge_Rate chargeMax */
    chargeMax?: (number|null);

    /** SC_Charge_Rate chargeTime */
    chargeTime?: (number|null);

    /** SC_Charge_Rate chargeTimes */
    chargeTimes?: (number|null);

    /** SC_Charge_Rate chargeMoneys */
    chargeMoneys?: (number|null);

    /** SC_Charge_Rate agentRateOther */
    agentRateOther?: (number|null);

    /** SC_Charge_Rate agentRateAdd */
    agentRateAdd?: (number|null);

    /** SC_Charge_Rate agentCloseTimes */
    agentCloseTimes?: (number|null);

    /** SC_Charge_Rate agentRateDecr */
    agentRateDecr?: (number|null);

    /** SC_Charge_Rate chargeMoney */
    chargeMoney?: (number|null);

    /** SC_Charge_Rate agentMoney */
    agentMoney?: (number|null);
}

/** Represents a SC_Charge_Rate. */
export class SC_Charge_Rate implements ISC_Charge_Rate {

    /**
     * Constructs a new SC_Charge_Rate.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Charge_Rate);

    /** SC_Charge_Rate guid. */
    public guid: number;

    /** SC_Charge_Rate chargeNum. */
    public chargeNum: number;

    /** SC_Charge_Rate agentNum. */
    public agentNum: number;

    /** SC_Charge_Rate chargeSuccessNum. */
    public chargeSuccessNum: number;

    /** SC_Charge_Rate agentSuccessNum. */
    public agentSuccessNum: number;

    /** SC_Charge_Rate agentRateDef. */
    public agentRateDef: number;

    /** SC_Charge_Rate chargeMax. */
    public chargeMax: number;

    /** SC_Charge_Rate chargeTime. */
    public chargeTime: number;

    /** SC_Charge_Rate chargeTimes. */
    public chargeTimes: number;

    /** SC_Charge_Rate chargeMoneys. */
    public chargeMoneys: number;

    /** SC_Charge_Rate agentRateOther. */
    public agentRateOther: number;

    /** SC_Charge_Rate agentRateAdd. */
    public agentRateAdd: number;

    /** SC_Charge_Rate agentCloseTimes. */
    public agentCloseTimes: number;

    /** SC_Charge_Rate agentRateDecr. */
    public agentRateDecr: number;

    /** SC_Charge_Rate chargeMoney. */
    public chargeMoney: number;

    /** SC_Charge_Rate agentMoney. */
    public agentMoney: number;

    /**
     * Creates a new SC_Charge_Rate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Charge_Rate instance
     */
    public static create(properties?: ISC_Charge_Rate): SC_Charge_Rate;

    /**
     * Encodes the specified SC_Charge_Rate message. Does not implicitly {@link SC_Charge_Rate.verify|verify} messages.
     * @param message SC_Charge_Rate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Charge_Rate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Charge_Rate message, length delimited. Does not implicitly {@link SC_Charge_Rate.verify|verify} messages.
     * @param message SC_Charge_Rate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Charge_Rate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Charge_Rate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Charge_Rate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Charge_Rate;

    /**
     * Decodes a SC_Charge_Rate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Charge_Rate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Charge_Rate;

    /**
     * Verifies a SC_Charge_Rate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Charge_Rate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Charge_Rate
     */
    public static fromObject(object: { [k: string]: any }): SC_Charge_Rate;

    /**
     * Creates a plain object from a SC_Charge_Rate message. Also converts values to other types if specified.
     * @param message SC_Charge_Rate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Charge_Rate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Charge_Rate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Charge_Rate {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1157
    }
}

/** Properties of a SC_ReplyClientSwitchInfo. */
export interface ISC_ReplyClientSwitchInfo {

    /** SC_ReplyClientSwitchInfo switchType */
    switchType?: (number|null);

    /** SC_ReplyClientSwitchInfo switchStatus */
    switchStatus?: (boolean|null);
}

/** Represents a SC_ReplyClientSwitchInfo. */
export class SC_ReplyClientSwitchInfo implements ISC_ReplyClientSwitchInfo {

    /**
     * Constructs a new SC_ReplyClientSwitchInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientSwitchInfo);

    /** SC_ReplyClientSwitchInfo switchType. */
    public switchType: number;

    /** SC_ReplyClientSwitchInfo switchStatus. */
    public switchStatus: boolean;

    /**
     * Creates a new SC_ReplyClientSwitchInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientSwitchInfo instance
     */
    public static create(properties?: ISC_ReplyClientSwitchInfo): SC_ReplyClientSwitchInfo;

    /**
     * Encodes the specified SC_ReplyClientSwitchInfo message. Does not implicitly {@link SC_ReplyClientSwitchInfo.verify|verify} messages.
     * @param message SC_ReplyClientSwitchInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientSwitchInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientSwitchInfo message, length delimited. Does not implicitly {@link SC_ReplyClientSwitchInfo.verify|verify} messages.
     * @param message SC_ReplyClientSwitchInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientSwitchInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientSwitchInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientSwitchInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientSwitchInfo;

    /**
     * Decodes a SC_ReplyClientSwitchInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientSwitchInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientSwitchInfo;

    /**
     * Verifies a SC_ReplyClientSwitchInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientSwitchInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientSwitchInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientSwitchInfo;

    /**
     * Creates a plain object from a SC_ReplyClientSwitchInfo message. Also converts values to other types if specified.
     * @param message SC_ReplyClientSwitchInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientSwitchInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientSwitchInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientSwitchInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1158
    }
}

/** Properties of a SC_Player_Identiy. */
export interface ISC_Player_Identiy {

    /** SC_Player_Identiy guid */
    guid?: (number|null);

    /** SC_Player_Identiy identityType */
    identityType?: (number|null);

    /** SC_Player_Identiy identityParam */
    identityParam?: (number|null);
}

/** Represents a SC_Player_Identiy. */
export class SC_Player_Identiy implements ISC_Player_Identiy {

    /**
     * Constructs a new SC_Player_Identiy.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Player_Identiy);

    /** SC_Player_Identiy guid. */
    public guid: number;

    /** SC_Player_Identiy identityType. */
    public identityType: number;

    /** SC_Player_Identiy identityParam. */
    public identityParam: number;

    /**
     * Creates a new SC_Player_Identiy instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Player_Identiy instance
     */
    public static create(properties?: ISC_Player_Identiy): SC_Player_Identiy;

    /**
     * Encodes the specified SC_Player_Identiy message. Does not implicitly {@link SC_Player_Identiy.verify|verify} messages.
     * @param message SC_Player_Identiy message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Player_Identiy, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Player_Identiy message, length delimited. Does not implicitly {@link SC_Player_Identiy.verify|verify} messages.
     * @param message SC_Player_Identiy message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Player_Identiy, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Player_Identiy message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Player_Identiy
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Player_Identiy;

    /**
     * Decodes a SC_Player_Identiy message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Player_Identiy
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Player_Identiy;

    /**
     * Verifies a SC_Player_Identiy message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Player_Identiy message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Player_Identiy
     */
    public static fromObject(object: { [k: string]: any }): SC_Player_Identiy;

    /**
     * Creates a plain object from a SC_Player_Identiy message. Also converts values to other types if specified.
     * @param message SC_Player_Identiy
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Player_Identiy, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Player_Identiy to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Player_Identiy {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1159
    }
}

/** Properties of a SC_Player_SeniorPromoter. */
export interface ISC_Player_SeniorPromoter {

    /** SC_Player_SeniorPromoter guid */
    guid?: (number|null);

    /** SC_Player_SeniorPromoter seniorpromoter */
    seniorpromoter?: (number|null);
}

/** Represents a SC_Player_SeniorPromoter. */
export class SC_Player_SeniorPromoter implements ISC_Player_SeniorPromoter {

    /**
     * Constructs a new SC_Player_SeniorPromoter.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Player_SeniorPromoter);

    /** SC_Player_SeniorPromoter guid. */
    public guid: number;

    /** SC_Player_SeniorPromoter seniorpromoter. */
    public seniorpromoter: number;

    /**
     * Creates a new SC_Player_SeniorPromoter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Player_SeniorPromoter instance
     */
    public static create(properties?: ISC_Player_SeniorPromoter): SC_Player_SeniorPromoter;

    /**
     * Encodes the specified SC_Player_SeniorPromoter message. Does not implicitly {@link SC_Player_SeniorPromoter.verify|verify} messages.
     * @param message SC_Player_SeniorPromoter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Player_SeniorPromoter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Player_SeniorPromoter message, length delimited. Does not implicitly {@link SC_Player_SeniorPromoter.verify|verify} messages.
     * @param message SC_Player_SeniorPromoter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Player_SeniorPromoter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Player_SeniorPromoter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Player_SeniorPromoter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Player_SeniorPromoter;

    /**
     * Decodes a SC_Player_SeniorPromoter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Player_SeniorPromoter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Player_SeniorPromoter;

    /**
     * Verifies a SC_Player_SeniorPromoter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Player_SeniorPromoter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Player_SeniorPromoter
     */
    public static fromObject(object: { [k: string]: any }): SC_Player_SeniorPromoter;

    /**
     * Creates a plain object from a SC_Player_SeniorPromoter message. Also converts values to other types if specified.
     * @param message SC_Player_SeniorPromoter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Player_SeniorPromoter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Player_SeniorPromoter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Player_SeniorPromoter {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1160
    }
}

/** Properties of a CS_Get_Instructor_Weixin. */
export interface ICS_Get_Instructor_Weixin {
}

/** Represents a CS_Get_Instructor_Weixin. */
export class CS_Get_Instructor_Weixin implements ICS_Get_Instructor_Weixin {

    /**
     * Constructs a new CS_Get_Instructor_Weixin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Get_Instructor_Weixin);

    /**
     * Creates a new CS_Get_Instructor_Weixin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Get_Instructor_Weixin instance
     */
    public static create(properties?: ICS_Get_Instructor_Weixin): CS_Get_Instructor_Weixin;

    /**
     * Encodes the specified CS_Get_Instructor_Weixin message. Does not implicitly {@link CS_Get_Instructor_Weixin.verify|verify} messages.
     * @param message CS_Get_Instructor_Weixin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Get_Instructor_Weixin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Get_Instructor_Weixin message, length delimited. Does not implicitly {@link CS_Get_Instructor_Weixin.verify|verify} messages.
     * @param message CS_Get_Instructor_Weixin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Get_Instructor_Weixin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Get_Instructor_Weixin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Get_Instructor_Weixin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Get_Instructor_Weixin;

    /**
     * Decodes a CS_Get_Instructor_Weixin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Get_Instructor_Weixin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Get_Instructor_Weixin;

    /**
     * Verifies a CS_Get_Instructor_Weixin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Get_Instructor_Weixin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Get_Instructor_Weixin
     */
    public static fromObject(object: { [k: string]: any }): CS_Get_Instructor_Weixin;

    /**
     * Creates a plain object from a CS_Get_Instructor_Weixin message. Also converts values to other types if specified.
     * @param message CS_Get_Instructor_Weixin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Get_Instructor_Weixin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Get_Instructor_Weixin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Get_Instructor_Weixin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1161
    }
}

/** Properties of a SC_Get_Instructor_Weixin. */
export interface ISC_Get_Instructor_Weixin {

    /** SC_Get_Instructor_Weixin instructorWeixin */
    instructorWeixin?: (string[]|null);
}

/** Represents a SC_Get_Instructor_Weixin. */
export class SC_Get_Instructor_Weixin implements ISC_Get_Instructor_Weixin {

    /**
     * Constructs a new SC_Get_Instructor_Weixin.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Get_Instructor_Weixin);

    /** SC_Get_Instructor_Weixin instructorWeixin. */
    public instructorWeixin: string[];

    /**
     * Creates a new SC_Get_Instructor_Weixin instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Get_Instructor_Weixin instance
     */
    public static create(properties?: ISC_Get_Instructor_Weixin): SC_Get_Instructor_Weixin;

    /**
     * Encodes the specified SC_Get_Instructor_Weixin message. Does not implicitly {@link SC_Get_Instructor_Weixin.verify|verify} messages.
     * @param message SC_Get_Instructor_Weixin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Get_Instructor_Weixin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Get_Instructor_Weixin message, length delimited. Does not implicitly {@link SC_Get_Instructor_Weixin.verify|verify} messages.
     * @param message SC_Get_Instructor_Weixin message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Get_Instructor_Weixin, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Get_Instructor_Weixin message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Get_Instructor_Weixin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Get_Instructor_Weixin;

    /**
     * Decodes a SC_Get_Instructor_Weixin message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Get_Instructor_Weixin
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Get_Instructor_Weixin;

    /**
     * Verifies a SC_Get_Instructor_Weixin message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Get_Instructor_Weixin message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Get_Instructor_Weixin
     */
    public static fromObject(object: { [k: string]: any }): SC_Get_Instructor_Weixin;

    /**
     * Creates a plain object from a SC_Get_Instructor_Weixin message. Also converts values to other types if specified.
     * @param message SC_Get_Instructor_Weixin
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Get_Instructor_Weixin, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Get_Instructor_Weixin to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Get_Instructor_Weixin {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1162
    }
}

/** Properties of a SC_Player_Append_Info. */
export interface ISC_Player_Append_Info {

    /** SC_Player_Append_Info guid */
    guid?: (number|null);

    /** SC_Player_Append_Info risk */
    risk?: (number|null);

    /** SC_Player_Append_Info riskShowProxy */
    riskShowProxy?: (string|null);

    /** SC_Player_Append_Info createTime */
    createTime?: (string|null);
}

/** Represents a SC_Player_Append_Info. */
export class SC_Player_Append_Info implements ISC_Player_Append_Info {

    /**
     * Constructs a new SC_Player_Append_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Player_Append_Info);

    /** SC_Player_Append_Info guid. */
    public guid: number;

    /** SC_Player_Append_Info risk. */
    public risk: number;

    /** SC_Player_Append_Info riskShowProxy. */
    public riskShowProxy: string;

    /** SC_Player_Append_Info createTime. */
    public createTime: string;

    /**
     * Creates a new SC_Player_Append_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Player_Append_Info instance
     */
    public static create(properties?: ISC_Player_Append_Info): SC_Player_Append_Info;

    /**
     * Encodes the specified SC_Player_Append_Info message. Does not implicitly {@link SC_Player_Append_Info.verify|verify} messages.
     * @param message SC_Player_Append_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Player_Append_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Player_Append_Info message, length delimited. Does not implicitly {@link SC_Player_Append_Info.verify|verify} messages.
     * @param message SC_Player_Append_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Player_Append_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Player_Append_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Player_Append_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Player_Append_Info;

    /**
     * Decodes a SC_Player_Append_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Player_Append_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Player_Append_Info;

    /**
     * Verifies a SC_Player_Append_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Player_Append_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Player_Append_Info
     */
    public static fromObject(object: { [k: string]: any }): SC_Player_Append_Info;

    /**
     * Creates a plain object from a SC_Player_Append_Info message. Also converts values to other types if specified.
     * @param message SC_Player_Append_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Player_Append_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Player_Append_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Player_Append_Info {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1163
    }
}

/** Properties of a SC_Player_Risk. */
export interface ISC_Player_Risk {

    /** SC_Player_Risk guid */
    guid?: (number|null);

    /** SC_Player_Risk risk */
    risk?: (number|null);
}

/** Represents a SC_Player_Risk. */
export class SC_Player_Risk implements ISC_Player_Risk {

    /**
     * Constructs a new SC_Player_Risk.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Player_Risk);

    /** SC_Player_Risk guid. */
    public guid: number;

    /** SC_Player_Risk risk. */
    public risk: number;

    /**
     * Creates a new SC_Player_Risk instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Player_Risk instance
     */
    public static create(properties?: ISC_Player_Risk): SC_Player_Risk;

    /**
     * Encodes the specified SC_Player_Risk message. Does not implicitly {@link SC_Player_Risk.verify|verify} messages.
     * @param message SC_Player_Risk message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Player_Risk, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Player_Risk message, length delimited. Does not implicitly {@link SC_Player_Risk.verify|verify} messages.
     * @param message SC_Player_Risk message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Player_Risk, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Player_Risk message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Player_Risk
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Player_Risk;

    /**
     * Decodes a SC_Player_Risk message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Player_Risk
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Player_Risk;

    /**
     * Verifies a SC_Player_Risk message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Player_Risk message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Player_Risk
     */
    public static fromObject(object: { [k: string]: any }): SC_Player_Risk;

    /**
     * Creates a plain object from a SC_Player_Risk message. Also converts values to other types if specified.
     * @param message SC_Player_Risk
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Player_Risk, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Player_Risk to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Player_Risk {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1164
    }
}

/** Properties of a SC_ReplyClientAllCashSwitch. */
export interface ISC_ReplyClientAllCashSwitch {

    /** SC_ReplyClientAllCashSwitch allCashSwitchJson */
    allCashSwitchJson?: (string|null);
}

/** Represents a SC_ReplyClientAllCashSwitch. */
export class SC_ReplyClientAllCashSwitch implements ISC_ReplyClientAllCashSwitch {

    /**
     * Constructs a new SC_ReplyClientAllCashSwitch.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReplyClientAllCashSwitch);

    /** SC_ReplyClientAllCashSwitch allCashSwitchJson. */
    public allCashSwitchJson: string;

    /**
     * Creates a new SC_ReplyClientAllCashSwitch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReplyClientAllCashSwitch instance
     */
    public static create(properties?: ISC_ReplyClientAllCashSwitch): SC_ReplyClientAllCashSwitch;

    /**
     * Encodes the specified SC_ReplyClientAllCashSwitch message. Does not implicitly {@link SC_ReplyClientAllCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientAllCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReplyClientAllCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReplyClientAllCashSwitch message, length delimited. Does not implicitly {@link SC_ReplyClientAllCashSwitch.verify|verify} messages.
     * @param message SC_ReplyClientAllCashSwitch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReplyClientAllCashSwitch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReplyClientAllCashSwitch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReplyClientAllCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReplyClientAllCashSwitch;

    /**
     * Decodes a SC_ReplyClientAllCashSwitch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReplyClientAllCashSwitch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReplyClientAllCashSwitch;

    /**
     * Verifies a SC_ReplyClientAllCashSwitch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReplyClientAllCashSwitch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReplyClientAllCashSwitch
     */
    public static fromObject(object: { [k: string]: any }): SC_ReplyClientAllCashSwitch;

    /**
     * Creates a plain object from a SC_ReplyClientAllCashSwitch message. Also converts values to other types if specified.
     * @param message SC_ReplyClientAllCashSwitch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReplyClientAllCashSwitch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReplyClientAllCashSwitch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReplyClientAllCashSwitch {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1165
    }
}

/** Properties of a CS_GetTime. */
export interface ICS_GetTime {
}

/** Represents a CS_GetTime. */
export class CS_GetTime implements ICS_GetTime {

    /**
     * Constructs a new CS_GetTime.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_GetTime);

    /**
     * Creates a new CS_GetTime instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_GetTime instance
     */
    public static create(properties?: ICS_GetTime): CS_GetTime;

    /**
     * Encodes the specified CS_GetTime message. Does not implicitly {@link CS_GetTime.verify|verify} messages.
     * @param message CS_GetTime message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_GetTime, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_GetTime message, length delimited. Does not implicitly {@link CS_GetTime.verify|verify} messages.
     * @param message CS_GetTime message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_GetTime, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_GetTime message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_GetTime
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_GetTime;

    /**
     * Decodes a CS_GetTime message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_GetTime
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_GetTime;

    /**
     * Verifies a CS_GetTime message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_GetTime message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_GetTime
     */
    public static fromObject(object: { [k: string]: any }): CS_GetTime;

    /**
     * Creates a plain object from a CS_GetTime message. Also converts values to other types if specified.
     * @param message CS_GetTime
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_GetTime, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_GetTime to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_GetTime {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1166
    }
}

/** Properties of a SC_Time. */
export interface ISC_Time {

    /** SC_Time severTime */
    severTime?: (number|null);
}

/** Represents a SC_Time. */
export class SC_Time implements ISC_Time {

    /**
     * Constructs a new SC_Time.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Time);

    /** SC_Time severTime. */
    public severTime: number;

    /**
     * Creates a new SC_Time instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Time instance
     */
    public static create(properties?: ISC_Time): SC_Time;

    /**
     * Encodes the specified SC_Time message. Does not implicitly {@link SC_Time.verify|verify} messages.
     * @param message SC_Time message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Time, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Time message, length delimited. Does not implicitly {@link SC_Time.verify|verify} messages.
     * @param message SC_Time message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Time, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Time message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Time
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Time;

    /**
     * Decodes a SC_Time message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Time
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Time;

    /**
     * Verifies a SC_Time message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Time message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Time
     */
    public static fromObject(object: { [k: string]: any }): SC_Time;

    /**
     * Creates a plain object from a SC_Time message. Also converts values to other types if specified.
     * @param message SC_Time
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Time, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Time to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Time {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1167
    }
}

/** Properties of a CS_QueryBonusActivity. */
export interface ICS_QueryBonusActivity {

    /** CS_QueryBonusActivity guid */
    guid?: (number|null);
}

/** Represents a CS_QueryBonusActivity. */
export class CS_QueryBonusActivity implements ICS_QueryBonusActivity {

    /**
     * Constructs a new CS_QueryBonusActivity.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_QueryBonusActivity);

    /** CS_QueryBonusActivity guid. */
    public guid: number;

    /**
     * Creates a new CS_QueryBonusActivity instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_QueryBonusActivity instance
     */
    public static create(properties?: ICS_QueryBonusActivity): CS_QueryBonusActivity;

    /**
     * Encodes the specified CS_QueryBonusActivity message. Does not implicitly {@link CS_QueryBonusActivity.verify|verify} messages.
     * @param message CS_QueryBonusActivity message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_QueryBonusActivity, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_QueryBonusActivity message, length delimited. Does not implicitly {@link CS_QueryBonusActivity.verify|verify} messages.
     * @param message CS_QueryBonusActivity message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_QueryBonusActivity, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_QueryBonusActivity message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_QueryBonusActivity
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_QueryBonusActivity;

    /**
     * Decodes a CS_QueryBonusActivity message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_QueryBonusActivity
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_QueryBonusActivity;

    /**
     * Verifies a CS_QueryBonusActivity message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_QueryBonusActivity message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_QueryBonusActivity
     */
    public static fromObject(object: { [k: string]: any }): CS_QueryBonusActivity;

    /**
     * Creates a plain object from a CS_QueryBonusActivity message. Also converts values to other types if specified.
     * @param message CS_QueryBonusActivity
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_QueryBonusActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_QueryBonusActivity to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_QueryBonusActivity {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1168
    }
}

/** Properties of a BonusActivityInfo. */
export interface IBonusActivityInfo {

    /** BonusActivityInfo activityId */
    activityId?: (number|null);

    /** BonusActivityInfo startTime */
    startTime?: (number|Long|null);

    /** BonusActivityInfo endTime */
    endTime?: (number|Long|null);

    /** BonusActivityInfo cfg */
    cfg?: (string|null);

    /** BonusActivityInfo platformId */
    platformId?: (number|null);
}

/** Represents a BonusActivityInfo. */
export class BonusActivityInfo implements IBonusActivityInfo {

    /**
     * Constructs a new BonusActivityInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBonusActivityInfo);

    /** BonusActivityInfo activityId. */
    public activityId: number;

    /** BonusActivityInfo startTime. */
    public startTime: (number|Long);

    /** BonusActivityInfo endTime. */
    public endTime: (number|Long);

    /** BonusActivityInfo cfg. */
    public cfg: string;

    /** BonusActivityInfo platformId. */
    public platformId: number;

    /**
     * Creates a new BonusActivityInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BonusActivityInfo instance
     */
    public static create(properties?: IBonusActivityInfo): BonusActivityInfo;

    /**
     * Encodes the specified BonusActivityInfo message. Does not implicitly {@link BonusActivityInfo.verify|verify} messages.
     * @param message BonusActivityInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBonusActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BonusActivityInfo message, length delimited. Does not implicitly {@link BonusActivityInfo.verify|verify} messages.
     * @param message BonusActivityInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBonusActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BonusActivityInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BonusActivityInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BonusActivityInfo;

    /**
     * Decodes a BonusActivityInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BonusActivityInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BonusActivityInfo;

    /**
     * Verifies a BonusActivityInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BonusActivityInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BonusActivityInfo
     */
    public static fromObject(object: { [k: string]: any }): BonusActivityInfo;

    /**
     * Creates a plain object from a BonusActivityInfo message. Also converts values to other types if specified.
     * @param message BonusActivityInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BonusActivityInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BonusActivityInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_BonusActivity. */
export interface ISC_BonusActivity {

    /** SC_BonusActivity pbActivities */
    pbActivities?: (IBonusActivityInfo[]|null);
}

/** Represents a SC_BonusActivity. */
export class SC_BonusActivity implements ISC_BonusActivity {

    /**
     * Constructs a new SC_BonusActivity.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BonusActivity);

    /** SC_BonusActivity pbActivities. */
    public pbActivities: IBonusActivityInfo[];

    /**
     * Creates a new SC_BonusActivity instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BonusActivity instance
     */
    public static create(properties?: ISC_BonusActivity): SC_BonusActivity;

    /**
     * Encodes the specified SC_BonusActivity message. Does not implicitly {@link SC_BonusActivity.verify|verify} messages.
     * @param message SC_BonusActivity message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BonusActivity, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BonusActivity message, length delimited. Does not implicitly {@link SC_BonusActivity.verify|verify} messages.
     * @param message SC_BonusActivity message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BonusActivity, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BonusActivity message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BonusActivity
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BonusActivity;

    /**
     * Decodes a SC_BonusActivity message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BonusActivity
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BonusActivity;

    /**
     * Verifies a SC_BonusActivity message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BonusActivity message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BonusActivity
     */
    public static fromObject(object: { [k: string]: any }): SC_BonusActivity;

    /**
     * Creates a plain object from a SC_BonusActivity message. Also converts values to other types if specified.
     * @param message SC_BonusActivity
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BonusActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BonusActivity to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BonusActivity {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1169
    }
}

/** Properties of a CS_QueryBonus. */
export interface ICS_QueryBonus {

    /** CS_QueryBonus guid */
    guid?: (number|null);

    /** CS_QueryBonus bonusActivityId */
    bonusActivityId?: (number|null);
}

/** Represents a CS_QueryBonus. */
export class CS_QueryBonus implements ICS_QueryBonus {

    /**
     * Constructs a new CS_QueryBonus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_QueryBonus);

    /** CS_QueryBonus guid. */
    public guid: number;

    /** CS_QueryBonus bonusActivityId. */
    public bonusActivityId: number;

    /**
     * Creates a new CS_QueryBonus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_QueryBonus instance
     */
    public static create(properties?: ICS_QueryBonus): CS_QueryBonus;

    /**
     * Encodes the specified CS_QueryBonus message. Does not implicitly {@link CS_QueryBonus.verify|verify} messages.
     * @param message CS_QueryBonus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_QueryBonus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_QueryBonus message, length delimited. Does not implicitly {@link CS_QueryBonus.verify|verify} messages.
     * @param message CS_QueryBonus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_QueryBonus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_QueryBonus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_QueryBonus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_QueryBonus;

    /**
     * Decodes a CS_QueryBonus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_QueryBonus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_QueryBonus;

    /**
     * Verifies a CS_QueryBonus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_QueryBonus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_QueryBonus
     */
    public static fromObject(object: { [k: string]: any }): CS_QueryBonus;

    /**
     * Creates a plain object from a CS_QueryBonus message. Also converts values to other types if specified.
     * @param message CS_QueryBonus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_QueryBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_QueryBonus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_QueryBonus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1170
    }
}

/** Properties of a BonusInfo. */
export interface IBonusInfo {

    /** BonusInfo bonusActivityId */
    bonusActivityId?: (number|null);

    /** BonusInfo guid */
    guid?: (number|null);

    /** BonusInfo index */
    index?: (number|null);

    /** BonusInfo money */
    money?: (number|Long|null);

    /** BonusInfo getTime */
    getTime?: (number|null);

    /** BonusInfo isPick */
    isPick?: (boolean|null);

    /** BonusInfo validTimeUntil */
    validTimeUntil?: (number|Long|null);
}

/** Represents a BonusInfo. */
export class BonusInfo implements IBonusInfo {

    /**
     * Constructs a new BonusInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBonusInfo);

    /** BonusInfo bonusActivityId. */
    public bonusActivityId: number;

    /** BonusInfo guid. */
    public guid: number;

    /** BonusInfo index. */
    public index: number;

    /** BonusInfo money. */
    public money: (number|Long);

    /** BonusInfo getTime. */
    public getTime: number;

    /** BonusInfo isPick. */
    public isPick: boolean;

    /** BonusInfo validTimeUntil. */
    public validTimeUntil: (number|Long);

    /**
     * Creates a new BonusInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BonusInfo instance
     */
    public static create(properties?: IBonusInfo): BonusInfo;

    /**
     * Encodes the specified BonusInfo message. Does not implicitly {@link BonusInfo.verify|verify} messages.
     * @param message BonusInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBonusInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BonusInfo message, length delimited. Does not implicitly {@link BonusInfo.verify|verify} messages.
     * @param message BonusInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBonusInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BonusInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BonusInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BonusInfo;

    /**
     * Decodes a BonusInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BonusInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BonusInfo;

    /**
     * Verifies a BonusInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BonusInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BonusInfo
     */
    public static fromObject(object: { [k: string]: any }): BonusInfo;

    /**
     * Creates a plain object from a BonusInfo message. Also converts values to other types if specified.
     * @param message BonusInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BonusInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BonusInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_Bonuses. */
export interface ISC_Bonuses {

    /** SC_Bonuses pbBonuses */
    pbBonuses?: (IBonusInfo[]|null);
}

/** Represents a SC_Bonuses. */
export class SC_Bonuses implements ISC_Bonuses {

    /**
     * Constructs a new SC_Bonuses.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Bonuses);

    /** SC_Bonuses pbBonuses. */
    public pbBonuses: IBonusInfo[];

    /**
     * Creates a new SC_Bonuses instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Bonuses instance
     */
    public static create(properties?: ISC_Bonuses): SC_Bonuses;

    /**
     * Encodes the specified SC_Bonuses message. Does not implicitly {@link SC_Bonuses.verify|verify} messages.
     * @param message SC_Bonuses message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Bonuses, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Bonuses message, length delimited. Does not implicitly {@link SC_Bonuses.verify|verify} messages.
     * @param message SC_Bonuses message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Bonuses, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Bonuses message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Bonuses
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Bonuses;

    /**
     * Decodes a SC_Bonuses message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Bonuses
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Bonuses;

    /**
     * Verifies a SC_Bonuses message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Bonuses message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Bonuses
     */
    public static fromObject(object: { [k: string]: any }): SC_Bonuses;

    /**
     * Creates a plain object from a SC_Bonuses message. Also converts values to other types if specified.
     * @param message SC_Bonuses
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Bonuses, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Bonuses to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Bonuses {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1171
    }
}

/** Properties of a CS_PickBonus. */
export interface ICS_PickBonus {

    /** CS_PickBonus guid */
    guid?: (number|null);

    /** CS_PickBonus bonusActivityId */
    bonusActivityId?: (number|null);

    /** CS_PickBonus index */
    index?: (number|null);
}

/** Represents a CS_PickBonus. */
export class CS_PickBonus implements ICS_PickBonus {

    /**
     * Constructs a new CS_PickBonus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PickBonus);

    /** CS_PickBonus guid. */
    public guid: number;

    /** CS_PickBonus bonusActivityId. */
    public bonusActivityId: number;

    /** CS_PickBonus index. */
    public index: number;

    /**
     * Creates a new CS_PickBonus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PickBonus instance
     */
    public static create(properties?: ICS_PickBonus): CS_PickBonus;

    /**
     * Encodes the specified CS_PickBonus message. Does not implicitly {@link CS_PickBonus.verify|verify} messages.
     * @param message CS_PickBonus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PickBonus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PickBonus message, length delimited. Does not implicitly {@link CS_PickBonus.verify|verify} messages.
     * @param message CS_PickBonus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PickBonus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PickBonus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PickBonus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PickBonus;

    /**
     * Decodes a CS_PickBonus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PickBonus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PickBonus;

    /**
     * Verifies a CS_PickBonus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PickBonus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PickBonus
     */
    public static fromObject(object: { [k: string]: any }): CS_PickBonus;

    /**
     * Creates a plain object from a CS_PickBonus message. Also converts values to other types if specified.
     * @param message CS_PickBonus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PickBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PickBonus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PickBonus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1172
    }
}

/** Properties of a SC_PickBonusResult. */
export interface ISC_PickBonusResult {

    /** SC_PickBonusResult guid */
    guid?: (number|null);

    /** SC_PickBonusResult bonusActivityId */
    bonusActivityId?: (number|null);

    /** SC_PickBonusResult index */
    index?: (number|null);

    /** SC_PickBonusResult success */
    success?: (boolean|null);

    /** SC_PickBonusResult money */
    money?: (number|Long|null);
}

/** Represents a SC_PickBonusResult. */
export class SC_PickBonusResult implements ISC_PickBonusResult {

    /**
     * Constructs a new SC_PickBonusResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PickBonusResult);

    /** SC_PickBonusResult guid. */
    public guid: number;

    /** SC_PickBonusResult bonusActivityId. */
    public bonusActivityId: number;

    /** SC_PickBonusResult index. */
    public index: number;

    /** SC_PickBonusResult success. */
    public success: boolean;

    /** SC_PickBonusResult money. */
    public money: (number|Long);

    /**
     * Creates a new SC_PickBonusResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PickBonusResult instance
     */
    public static create(properties?: ISC_PickBonusResult): SC_PickBonusResult;

    /**
     * Encodes the specified SC_PickBonusResult message. Does not implicitly {@link SC_PickBonusResult.verify|verify} messages.
     * @param message SC_PickBonusResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PickBonusResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PickBonusResult message, length delimited. Does not implicitly {@link SC_PickBonusResult.verify|verify} messages.
     * @param message SC_PickBonusResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PickBonusResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PickBonusResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PickBonusResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PickBonusResult;

    /**
     * Decodes a SC_PickBonusResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PickBonusResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PickBonusResult;

    /**
     * Verifies a SC_PickBonusResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PickBonusResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PickBonusResult
     */
    public static fromObject(object: { [k: string]: any }): SC_PickBonusResult;

    /**
     * Creates a plain object from a SC_PickBonusResult message. Also converts values to other types if specified.
     * @param message SC_PickBonusResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PickBonusResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PickBonusResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PickBonusResult {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1173
    }
}

/** Properties of a SC_WinBonusNotify. */
export interface ISC_WinBonusNotify {

    /** SC_WinBonusNotify guid */
    guid?: (number|null);

    /** SC_WinBonusNotify bonusActivityId */
    bonusActivityId?: (number|null);

    /** SC_WinBonusNotify index */
    index?: (number|null);
}

/** Represents a SC_WinBonusNotify. */
export class SC_WinBonusNotify implements ISC_WinBonusNotify {

    /**
     * Constructs a new SC_WinBonusNotify.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_WinBonusNotify);

    /** SC_WinBonusNotify guid. */
    public guid: number;

    /** SC_WinBonusNotify bonusActivityId. */
    public bonusActivityId: number;

    /** SC_WinBonusNotify index. */
    public index: number;

    /**
     * Creates a new SC_WinBonusNotify instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_WinBonusNotify instance
     */
    public static create(properties?: ISC_WinBonusNotify): SC_WinBonusNotify;

    /**
     * Encodes the specified SC_WinBonusNotify message. Does not implicitly {@link SC_WinBonusNotify.verify|verify} messages.
     * @param message SC_WinBonusNotify message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_WinBonusNotify, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_WinBonusNotify message, length delimited. Does not implicitly {@link SC_WinBonusNotify.verify|verify} messages.
     * @param message SC_WinBonusNotify message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_WinBonusNotify, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_WinBonusNotify message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_WinBonusNotify
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_WinBonusNotify;

    /**
     * Decodes a SC_WinBonusNotify message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_WinBonusNotify
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_WinBonusNotify;

    /**
     * Verifies a SC_WinBonusNotify message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_WinBonusNotify message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_WinBonusNotify
     */
    public static fromObject(object: { [k: string]: any }): SC_WinBonusNotify;

    /**
     * Creates a plain object from a SC_WinBonusNotify message. Also converts values to other types if specified.
     * @param message SC_WinBonusNotify
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_WinBonusNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_WinBonusNotify to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_WinBonusNotify {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1174
    }
}

/** Properties of a SC_Prize_Pool_Result. */
export interface ISC_Prize_Pool_Result {

    /** SC_Prize_Pool_Result curMoney */
    curMoney?: (number|null);

    /** SC_Prize_Pool_Result prizeJoin */
    prizeJoin?: (number|null);

    /** SC_Prize_Pool_Result prizeMoney */
    prizeMoney?: (number|null);

    /** SC_Prize_Pool_Result playerMoney */
    playerMoney?: (number|null);
}

/** Represents a SC_Prize_Pool_Result. */
export class SC_Prize_Pool_Result implements ISC_Prize_Pool_Result {

    /**
     * Constructs a new SC_Prize_Pool_Result.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Prize_Pool_Result);

    /** SC_Prize_Pool_Result curMoney. */
    public curMoney: number;

    /** SC_Prize_Pool_Result prizeJoin. */
    public prizeJoin: number;

    /** SC_Prize_Pool_Result prizeMoney. */
    public prizeMoney: number;

    /** SC_Prize_Pool_Result playerMoney. */
    public playerMoney: number;

    /**
     * Creates a new SC_Prize_Pool_Result instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Prize_Pool_Result instance
     */
    public static create(properties?: ISC_Prize_Pool_Result): SC_Prize_Pool_Result;

    /**
     * Encodes the specified SC_Prize_Pool_Result message. Does not implicitly {@link SC_Prize_Pool_Result.verify|verify} messages.
     * @param message SC_Prize_Pool_Result message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Prize_Pool_Result, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Prize_Pool_Result message, length delimited. Does not implicitly {@link SC_Prize_Pool_Result.verify|verify} messages.
     * @param message SC_Prize_Pool_Result message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Prize_Pool_Result, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Prize_Pool_Result message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Prize_Pool_Result
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Prize_Pool_Result;

    /**
     * Decodes a SC_Prize_Pool_Result message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Prize_Pool_Result
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Prize_Pool_Result;

    /**
     * Verifies a SC_Prize_Pool_Result message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Prize_Pool_Result message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Prize_Pool_Result
     */
    public static fromObject(object: { [k: string]: any }): SC_Prize_Pool_Result;

    /**
     * Creates a plain object from a SC_Prize_Pool_Result message. Also converts values to other types if specified.
     * @param message SC_Prize_Pool_Result
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Prize_Pool_Result, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Prize_Pool_Result to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Prize_Pool_Result {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1176
    }
}

/** Properties of a SC_PrizePool_show. */
export interface ISC_PrizePool_show {

    /** SC_PrizePool_show money */
    money?: (number|null);
}

/** Represents a SC_PrizePool_show. */
export class SC_PrizePool_show implements ISC_PrizePool_show {

    /**
     * Constructs a new SC_PrizePool_show.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PrizePool_show);

    /** SC_PrizePool_show money. */
    public money: number;

    /**
     * Creates a new SC_PrizePool_show instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PrizePool_show instance
     */
    public static create(properties?: ISC_PrizePool_show): SC_PrizePool_show;

    /**
     * Encodes the specified SC_PrizePool_show message. Does not implicitly {@link SC_PrizePool_show.verify|verify} messages.
     * @param message SC_PrizePool_show message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PrizePool_show, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PrizePool_show message, length delimited. Does not implicitly {@link SC_PrizePool_show.verify|verify} messages.
     * @param message SC_PrizePool_show message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PrizePool_show, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PrizePool_show message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PrizePool_show
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PrizePool_show;

    /**
     * Decodes a SC_PrizePool_show message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PrizePool_show
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PrizePool_show;

    /**
     * Verifies a SC_PrizePool_show message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PrizePool_show message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PrizePool_show
     */
    public static fromObject(object: { [k: string]: any }): SC_PrizePool_show;

    /**
     * Creates a plain object from a SC_PrizePool_show message. Also converts values to other types if specified.
     * @param message SC_PrizePool_show
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PrizePool_show, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PrizePool_show to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PrizePool_show {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1177
    }
}

/** Properties of a CS_ProxyCashMoneyToBank. */
export interface ICS_ProxyCashMoneyToBank {

    /** CS_ProxyCashMoneyToBank guid */
    guid?: (number|null);

    /** CS_ProxyCashMoneyToBank money */
    money?: (number|null);

    /** CS_ProxyCashMoneyToBank cashType */
    cashType?: (number|null);
}

/** Represents a CS_ProxyCashMoneyToBank. */
export class CS_ProxyCashMoneyToBank implements ICS_ProxyCashMoneyToBank {

    /**
     * Constructs a new CS_ProxyCashMoneyToBank.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ProxyCashMoneyToBank);

    /** CS_ProxyCashMoneyToBank guid. */
    public guid: number;

    /** CS_ProxyCashMoneyToBank money. */
    public money: number;

    /** CS_ProxyCashMoneyToBank cashType. */
    public cashType: number;

    /**
     * Creates a new CS_ProxyCashMoneyToBank instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ProxyCashMoneyToBank instance
     */
    public static create(properties?: ICS_ProxyCashMoneyToBank): CS_ProxyCashMoneyToBank;

    /**
     * Encodes the specified CS_ProxyCashMoneyToBank message. Does not implicitly {@link CS_ProxyCashMoneyToBank.verify|verify} messages.
     * @param message CS_ProxyCashMoneyToBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ProxyCashMoneyToBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ProxyCashMoneyToBank message, length delimited. Does not implicitly {@link CS_ProxyCashMoneyToBank.verify|verify} messages.
     * @param message CS_ProxyCashMoneyToBank message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ProxyCashMoneyToBank, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ProxyCashMoneyToBank message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ProxyCashMoneyToBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ProxyCashMoneyToBank;

    /**
     * Decodes a CS_ProxyCashMoneyToBank message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ProxyCashMoneyToBank
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ProxyCashMoneyToBank;

    /**
     * Verifies a CS_ProxyCashMoneyToBank message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ProxyCashMoneyToBank message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ProxyCashMoneyToBank
     */
    public static fromObject(object: { [k: string]: any }): CS_ProxyCashMoneyToBank;

    /**
     * Creates a plain object from a CS_ProxyCashMoneyToBank message. Also converts values to other types if specified.
     * @param message CS_ProxyCashMoneyToBank
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ProxyCashMoneyToBank, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ProxyCashMoneyToBank to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ProxyCashMoneyToBank {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1178
    }
}

/** Properties of a SC_ProxyCashMoneyToBankResult. */
export interface ISC_ProxyCashMoneyToBankResult {

    /** SC_ProxyCashMoneyToBankResult result */
    result?: (number|null);

    /** SC_ProxyCashMoneyToBankResult guid */
    guid?: (number|null);

    /** SC_ProxyCashMoneyToBankResult money */
    money?: (number|null);

    /** SC_ProxyCashMoneyToBankResult commission */
    commission?: (number|Long|null);

    /** SC_ProxyCashMoneyToBankResult commissionMax */
    commissionMax?: (number|Long|null);
}

/** Represents a SC_ProxyCashMoneyToBankResult. */
export class SC_ProxyCashMoneyToBankResult implements ISC_ProxyCashMoneyToBankResult {

    /**
     * Constructs a new SC_ProxyCashMoneyToBankResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ProxyCashMoneyToBankResult);

    /** SC_ProxyCashMoneyToBankResult result. */
    public result: number;

    /** SC_ProxyCashMoneyToBankResult guid. */
    public guid: number;

    /** SC_ProxyCashMoneyToBankResult money. */
    public money: number;

    /** SC_ProxyCashMoneyToBankResult commission. */
    public commission: (number|Long);

    /** SC_ProxyCashMoneyToBankResult commissionMax. */
    public commissionMax: (number|Long);

    /**
     * Creates a new SC_ProxyCashMoneyToBankResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ProxyCashMoneyToBankResult instance
     */
    public static create(properties?: ISC_ProxyCashMoneyToBankResult): SC_ProxyCashMoneyToBankResult;

    /**
     * Encodes the specified SC_ProxyCashMoneyToBankResult message. Does not implicitly {@link SC_ProxyCashMoneyToBankResult.verify|verify} messages.
     * @param message SC_ProxyCashMoneyToBankResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ProxyCashMoneyToBankResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ProxyCashMoneyToBankResult message, length delimited. Does not implicitly {@link SC_ProxyCashMoneyToBankResult.verify|verify} messages.
     * @param message SC_ProxyCashMoneyToBankResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ProxyCashMoneyToBankResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ProxyCashMoneyToBankResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ProxyCashMoneyToBankResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ProxyCashMoneyToBankResult;

    /**
     * Decodes a SC_ProxyCashMoneyToBankResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ProxyCashMoneyToBankResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ProxyCashMoneyToBankResult;

    /**
     * Verifies a SC_ProxyCashMoneyToBankResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ProxyCashMoneyToBankResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ProxyCashMoneyToBankResult
     */
    public static fromObject(object: { [k: string]: any }): SC_ProxyCashMoneyToBankResult;

    /**
     * Creates a plain object from a SC_ProxyCashMoneyToBankResult message. Also converts values to other types if specified.
     * @param message SC_ProxyCashMoneyToBankResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ProxyCashMoneyToBankResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ProxyCashMoneyToBankResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ProxyCashMoneyToBankResult {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1179
    }
}

/** Properties of a CS_DismissTableReq. */
export interface ICS_DismissTableReq {

    /** CS_DismissTableReq tableId */
    tableId?: (number|null);
}

/** Represents a CS_DismissTableReq. */
export class CS_DismissTableReq implements ICS_DismissTableReq {

    /**
     * Constructs a new CS_DismissTableReq.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DismissTableReq);

    /** CS_DismissTableReq tableId. */
    public tableId: number;

    /**
     * Creates a new CS_DismissTableReq instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DismissTableReq instance
     */
    public static create(properties?: ICS_DismissTableReq): CS_DismissTableReq;

    /**
     * Encodes the specified CS_DismissTableReq message. Does not implicitly {@link CS_DismissTableReq.verify|verify} messages.
     * @param message CS_DismissTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DismissTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DismissTableReq message, length delimited. Does not implicitly {@link CS_DismissTableReq.verify|verify} messages.
     * @param message CS_DismissTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DismissTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DismissTableReq message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DismissTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DismissTableReq;

    /**
     * Decodes a CS_DismissTableReq message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DismissTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DismissTableReq;

    /**
     * Verifies a CS_DismissTableReq message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DismissTableReq message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DismissTableReq
     */
    public static fromObject(object: { [k: string]: any }): CS_DismissTableReq;

    /**
     * Creates a plain object from a CS_DismissTableReq message. Also converts values to other types if specified.
     * @param message CS_DismissTableReq
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DismissTableReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DismissTableReq to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DismissTableReq {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1180
    }
}

/** Properties of a SC_DismissTableReq. */
export interface ISC_DismissTableReq {

    /** SC_DismissTableReq result */
    result?: (number|null);

    /** SC_DismissTableReq requestGuid */
    requestGuid?: (number|null);

    /** SC_DismissTableReq requestChairId */
    requestChairId?: (number|null);

    /** SC_DismissTableReq datetime */
    datetime?: (number|null);

    /** SC_DismissTableReq timeout */
    timeout?: (number|null);
}

/** Represents a SC_DismissTableReq. */
export class SC_DismissTableReq implements ISC_DismissTableReq {

    /**
     * Constructs a new SC_DismissTableReq.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DismissTableReq);

    /** SC_DismissTableReq result. */
    public result: number;

    /** SC_DismissTableReq requestGuid. */
    public requestGuid: number;

    /** SC_DismissTableReq requestChairId. */
    public requestChairId: number;

    /** SC_DismissTableReq datetime. */
    public datetime: number;

    /** SC_DismissTableReq timeout. */
    public timeout: number;

    /**
     * Creates a new SC_DismissTableReq instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DismissTableReq instance
     */
    public static create(properties?: ISC_DismissTableReq): SC_DismissTableReq;

    /**
     * Encodes the specified SC_DismissTableReq message. Does not implicitly {@link SC_DismissTableReq.verify|verify} messages.
     * @param message SC_DismissTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DismissTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DismissTableReq message, length delimited. Does not implicitly {@link SC_DismissTableReq.verify|verify} messages.
     * @param message SC_DismissTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DismissTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DismissTableReq message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DismissTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DismissTableReq;

    /**
     * Decodes a SC_DismissTableReq message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DismissTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DismissTableReq;

    /**
     * Verifies a SC_DismissTableReq message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DismissTableReq message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DismissTableReq
     */
    public static fromObject(object: { [k: string]: any }): SC_DismissTableReq;

    /**
     * Creates a plain object from a SC_DismissTableReq message. Also converts values to other types if specified.
     * @param message SC_DismissTableReq
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DismissTableReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DismissTableReq to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DismissTableReq {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1181
    }
}

/** Properties of a RequestCommitStatus. */
export interface IRequestCommitStatus {

    /** RequestCommitStatus guid */
    guid?: (number|null);

    /** RequestCommitStatus chairId */
    chairId?: (number|null);

    /** RequestCommitStatus agree */
    agree?: (boolean|null);
}

/** Represents a RequestCommitStatus. */
export class RequestCommitStatus implements IRequestCommitStatus {

    /**
     * Constructs a new RequestCommitStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRequestCommitStatus);

    /** RequestCommitStatus guid. */
    public guid: number;

    /** RequestCommitStatus chairId. */
    public chairId: number;

    /** RequestCommitStatus agree. */
    public agree: boolean;

    /**
     * Creates a new RequestCommitStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RequestCommitStatus instance
     */
    public static create(properties?: IRequestCommitStatus): RequestCommitStatus;

    /**
     * Encodes the specified RequestCommitStatus message. Does not implicitly {@link RequestCommitStatus.verify|verify} messages.
     * @param message RequestCommitStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRequestCommitStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RequestCommitStatus message, length delimited. Does not implicitly {@link RequestCommitStatus.verify|verify} messages.
     * @param message RequestCommitStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRequestCommitStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RequestCommitStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RequestCommitStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RequestCommitStatus;

    /**
     * Decodes a RequestCommitStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RequestCommitStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RequestCommitStatus;

    /**
     * Verifies a RequestCommitStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RequestCommitStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RequestCommitStatus
     */
    public static fromObject(object: { [k: string]: any }): RequestCommitStatus;

    /**
     * Creates a plain object from a RequestCommitStatus message. Also converts values to other types if specified.
     * @param message RequestCommitStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RequestCommitStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RequestCommitStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_DismissTableRequestInfo. */
export interface ISC_DismissTableRequestInfo {

    /** SC_DismissTableRequestInfo requestGuid */
    requestGuid?: (number|null);

    /** SC_DismissTableRequestInfo requestChairId */
    requestChairId?: (number|null);

    /** SC_DismissTableRequestInfo datetime */
    datetime?: (number|null);

    /** SC_DismissTableRequestInfo timeout */
    timeout?: (number|null);

    /** SC_DismissTableRequestInfo status */
    status?: (IRequestCommitStatus[]|null);
}

/** Represents a SC_DismissTableRequestInfo. */
export class SC_DismissTableRequestInfo implements ISC_DismissTableRequestInfo {

    /**
     * Constructs a new SC_DismissTableRequestInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DismissTableRequestInfo);

    /** SC_DismissTableRequestInfo requestGuid. */
    public requestGuid: number;

    /** SC_DismissTableRequestInfo requestChairId. */
    public requestChairId: number;

    /** SC_DismissTableRequestInfo datetime. */
    public datetime: number;

    /** SC_DismissTableRequestInfo timeout. */
    public timeout: number;

    /** SC_DismissTableRequestInfo status. */
    public status: IRequestCommitStatus[];

    /**
     * Creates a new SC_DismissTableRequestInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DismissTableRequestInfo instance
     */
    public static create(properties?: ISC_DismissTableRequestInfo): SC_DismissTableRequestInfo;

    /**
     * Encodes the specified SC_DismissTableRequestInfo message. Does not implicitly {@link SC_DismissTableRequestInfo.verify|verify} messages.
     * @param message SC_DismissTableRequestInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DismissTableRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DismissTableRequestInfo message, length delimited. Does not implicitly {@link SC_DismissTableRequestInfo.verify|verify} messages.
     * @param message SC_DismissTableRequestInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DismissTableRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DismissTableRequestInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DismissTableRequestInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DismissTableRequestInfo;

    /**
     * Decodes a SC_DismissTableRequestInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DismissTableRequestInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DismissTableRequestInfo;

    /**
     * Verifies a SC_DismissTableRequestInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DismissTableRequestInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DismissTableRequestInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_DismissTableRequestInfo;

    /**
     * Creates a plain object from a SC_DismissTableRequestInfo message. Also converts values to other types if specified.
     * @param message SC_DismissTableRequestInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DismissTableRequestInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DismissTableRequestInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DismissTableRequestInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1182
    }
}

/** Properties of a CS_DismissTableCommit. */
export interface ICS_DismissTableCommit {

    /** CS_DismissTableCommit agree */
    agree?: (boolean|null);
}

/** Represents a CS_DismissTableCommit. */
export class CS_DismissTableCommit implements ICS_DismissTableCommit {

    /**
     * Constructs a new CS_DismissTableCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DismissTableCommit);

    /** CS_DismissTableCommit agree. */
    public agree: boolean;

    /**
     * Creates a new CS_DismissTableCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DismissTableCommit instance
     */
    public static create(properties?: ICS_DismissTableCommit): CS_DismissTableCommit;

    /**
     * Encodes the specified CS_DismissTableCommit message. Does not implicitly {@link CS_DismissTableCommit.verify|verify} messages.
     * @param message CS_DismissTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DismissTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DismissTableCommit message, length delimited. Does not implicitly {@link CS_DismissTableCommit.verify|verify} messages.
     * @param message CS_DismissTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DismissTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DismissTableCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DismissTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DismissTableCommit;

    /**
     * Decodes a CS_DismissTableCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DismissTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DismissTableCommit;

    /**
     * Verifies a CS_DismissTableCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DismissTableCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DismissTableCommit
     */
    public static fromObject(object: { [k: string]: any }): CS_DismissTableCommit;

    /**
     * Creates a plain object from a CS_DismissTableCommit message. Also converts values to other types if specified.
     * @param message CS_DismissTableCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DismissTableCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DismissTableCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DismissTableCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1183
    }
}

/** Properties of a SC_DismissTableCommit. */
export interface ISC_DismissTableCommit {

    /** SC_DismissTableCommit result */
    result?: (number|null);

    /** SC_DismissTableCommit chairId */
    chairId?: (number|null);

    /** SC_DismissTableCommit guid */
    guid?: (number|null);

    /** SC_DismissTableCommit agree */
    agree?: (boolean|null);
}

/** Represents a SC_DismissTableCommit. */
export class SC_DismissTableCommit implements ISC_DismissTableCommit {

    /**
     * Constructs a new SC_DismissTableCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DismissTableCommit);

    /** SC_DismissTableCommit result. */
    public result: number;

    /** SC_DismissTableCommit chairId. */
    public chairId: number;

    /** SC_DismissTableCommit guid. */
    public guid: number;

    /** SC_DismissTableCommit agree. */
    public agree: boolean;

    /**
     * Creates a new SC_DismissTableCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DismissTableCommit instance
     */
    public static create(properties?: ISC_DismissTableCommit): SC_DismissTableCommit;

    /**
     * Encodes the specified SC_DismissTableCommit message. Does not implicitly {@link SC_DismissTableCommit.verify|verify} messages.
     * @param message SC_DismissTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DismissTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DismissTableCommit message, length delimited. Does not implicitly {@link SC_DismissTableCommit.verify|verify} messages.
     * @param message SC_DismissTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DismissTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DismissTableCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DismissTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DismissTableCommit;

    /**
     * Decodes a SC_DismissTableCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DismissTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DismissTableCommit;

    /**
     * Verifies a SC_DismissTableCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DismissTableCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DismissTableCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_DismissTableCommit;

    /**
     * Creates a plain object from a SC_DismissTableCommit message. Also converts values to other types if specified.
     * @param message SC_DismissTableCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DismissTableCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DismissTableCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DismissTableCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1184
    }
}

/** Properties of a SC_DismissTable. */
export interface ISC_DismissTable {

    /** SC_DismissTable success */
    success?: (boolean|null);

    /** SC_DismissTable reason */
    reason?: (number|null);
}

/** Represents a SC_DismissTable. */
export class SC_DismissTable implements ISC_DismissTable {

    /**
     * Constructs a new SC_DismissTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DismissTable);

    /** SC_DismissTable success. */
    public success: boolean;

    /** SC_DismissTable reason. */
    public reason: number;

    /**
     * Creates a new SC_DismissTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DismissTable instance
     */
    public static create(properties?: ISC_DismissTable): SC_DismissTable;

    /**
     * Encodes the specified SC_DismissTable message. Does not implicitly {@link SC_DismissTable.verify|verify} messages.
     * @param message SC_DismissTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DismissTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DismissTable message, length delimited. Does not implicitly {@link SC_DismissTable.verify|verify} messages.
     * @param message SC_DismissTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DismissTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DismissTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DismissTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DismissTable;

    /**
     * Decodes a SC_DismissTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DismissTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DismissTable;

    /**
     * Verifies a SC_DismissTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DismissTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DismissTable
     */
    public static fromObject(object: { [k: string]: any }): SC_DismissTable;

    /**
     * Creates a plain object from a SC_DismissTable message. Also converts values to other types if specified.
     * @param message SC_DismissTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DismissTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DismissTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DismissTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1185
    }
}

/** Properties of a S2C_TRANSFER_ROOM_OWNER_RES. */
export interface IS2C_TRANSFER_ROOM_OWNER_RES {

    /** S2C_TRANSFER_ROOM_OWNER_RES tableId */
    tableId?: (number|null);

    /** S2C_TRANSFER_ROOM_OWNER_RES oldOwner */
    oldOwner?: (number|null);

    /** S2C_TRANSFER_ROOM_OWNER_RES newOwner */
    newOwner?: (number|null);
}

/** Represents a S2C_TRANSFER_ROOM_OWNER_RES. */
export class S2C_TRANSFER_ROOM_OWNER_RES implements IS2C_TRANSFER_ROOM_OWNER_RES {

    /**
     * Constructs a new S2C_TRANSFER_ROOM_OWNER_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_TRANSFER_ROOM_OWNER_RES);

    /** S2C_TRANSFER_ROOM_OWNER_RES tableId. */
    public tableId: number;

    /** S2C_TRANSFER_ROOM_OWNER_RES oldOwner. */
    public oldOwner: number;

    /** S2C_TRANSFER_ROOM_OWNER_RES newOwner. */
    public newOwner: number;

    /**
     * Creates a new S2C_TRANSFER_ROOM_OWNER_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_TRANSFER_ROOM_OWNER_RES instance
     */
    public static create(properties?: IS2C_TRANSFER_ROOM_OWNER_RES): S2C_TRANSFER_ROOM_OWNER_RES;

    /**
     * Encodes the specified S2C_TRANSFER_ROOM_OWNER_RES message. Does not implicitly {@link S2C_TRANSFER_ROOM_OWNER_RES.verify|verify} messages.
     * @param message S2C_TRANSFER_ROOM_OWNER_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_TRANSFER_ROOM_OWNER_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_TRANSFER_ROOM_OWNER_RES message, length delimited. Does not implicitly {@link S2C_TRANSFER_ROOM_OWNER_RES.verify|verify} messages.
     * @param message S2C_TRANSFER_ROOM_OWNER_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_TRANSFER_ROOM_OWNER_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_TRANSFER_ROOM_OWNER_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_TRANSFER_ROOM_OWNER_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_TRANSFER_ROOM_OWNER_RES;

    /**
     * Decodes a S2C_TRANSFER_ROOM_OWNER_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_TRANSFER_ROOM_OWNER_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_TRANSFER_ROOM_OWNER_RES;

    /**
     * Verifies a S2C_TRANSFER_ROOM_OWNER_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_TRANSFER_ROOM_OWNER_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_TRANSFER_ROOM_OWNER_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_TRANSFER_ROOM_OWNER_RES;

    /**
     * Creates a plain object from a S2C_TRANSFER_ROOM_OWNER_RES message. Also converts values to other types if specified.
     * @param message S2C_TRANSFER_ROOM_OWNER_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_TRANSFER_ROOM_OWNER_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_TRANSFER_ROOM_OWNER_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_TRANSFER_ROOM_OWNER_RES {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1186
    }
}

/** Properties of a SC_GameServerCfg. */
export interface ISC_GameServerCfg {

    /** SC_GameServerCfg gameSeverInfo */
    gameSeverInfo?: (number[]|null);
}

/** Represents a SC_GameServerCfg. */
export class SC_GameServerCfg implements ISC_GameServerCfg {

    /**
     * Constructs a new SC_GameServerCfg.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_GameServerCfg);

    /** SC_GameServerCfg gameSeverInfo. */
    public gameSeverInfo: number[];

    /**
     * Creates a new SC_GameServerCfg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_GameServerCfg instance
     */
    public static create(properties?: ISC_GameServerCfg): SC_GameServerCfg;

    /**
     * Encodes the specified SC_GameServerCfg message. Does not implicitly {@link SC_GameServerCfg.verify|verify} messages.
     * @param message SC_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_GameServerCfg message, length delimited. Does not implicitly {@link SC_GameServerCfg.verify|verify} messages.
     * @param message SC_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_GameServerCfg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_GameServerCfg;

    /**
     * Decodes a SC_GameServerCfg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_GameServerCfg;

    /**
     * Verifies a SC_GameServerCfg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_GameServerCfg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_GameServerCfg
     */
    public static fromObject(object: { [k: string]: any }): SC_GameServerCfg;

    /**
     * Creates a plain object from a SC_GameServerCfg message. Also converts values to other types if specified.
     * @param message SC_GameServerCfg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_GameServerCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_GameServerCfg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_GameServerCfg {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1187
    }
}

/** Properties of a CS_GameServerCfg. */
export interface ICS_GameServerCfg {
}

/** Represents a CS_GameServerCfg. */
export class CS_GameServerCfg implements ICS_GameServerCfg {

    /**
     * Constructs a new CS_GameServerCfg.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_GameServerCfg);

    /**
     * Creates a new CS_GameServerCfg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_GameServerCfg instance
     */
    public static create(properties?: ICS_GameServerCfg): CS_GameServerCfg;

    /**
     * Encodes the specified CS_GameServerCfg message. Does not implicitly {@link CS_GameServerCfg.verify|verify} messages.
     * @param message CS_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_GameServerCfg message, length delimited. Does not implicitly {@link CS_GameServerCfg.verify|verify} messages.
     * @param message CS_GameServerCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_GameServerCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_GameServerCfg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_GameServerCfg;

    /**
     * Decodes a CS_GameServerCfg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_GameServerCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_GameServerCfg;

    /**
     * Verifies a CS_GameServerCfg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_GameServerCfg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_GameServerCfg
     */
    public static fromObject(object: { [k: string]: any }): CS_GameServerCfg;

    /**
     * Creates a plain object from a CS_GameServerCfg message. Also converts values to other types if specified.
     * @param message CS_GameServerCfg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_GameServerCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_GameServerCfg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_GameServerCfg {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1188
    }
}

/** Properties of a CS_PullMailDetail. */
export interface ICS_PullMailDetail {

    /** CS_PullMailDetail mailId */
    mailId?: (string|null);
}

/** Represents a CS_PullMailDetail. */
export class CS_PullMailDetail implements ICS_PullMailDetail {

    /**
     * Constructs a new CS_PullMailDetail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullMailDetail);

    /** CS_PullMailDetail mailId. */
    public mailId: string;

    /**
     * Creates a new CS_PullMailDetail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullMailDetail instance
     */
    public static create(properties?: ICS_PullMailDetail): CS_PullMailDetail;

    /**
     * Encodes the specified CS_PullMailDetail message. Does not implicitly {@link CS_PullMailDetail.verify|verify} messages.
     * @param message CS_PullMailDetail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullMailDetail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullMailDetail message, length delimited. Does not implicitly {@link CS_PullMailDetail.verify|verify} messages.
     * @param message CS_PullMailDetail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullMailDetail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullMailDetail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullMailDetail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullMailDetail;

    /**
     * Decodes a CS_PullMailDetail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullMailDetail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullMailDetail;

    /**
     * Verifies a CS_PullMailDetail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullMailDetail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullMailDetail
     */
    public static fromObject(object: { [k: string]: any }): CS_PullMailDetail;

    /**
     * Creates a plain object from a CS_PullMailDetail message. Also converts values to other types if specified.
     * @param message CS_PullMailDetail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullMailDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullMailDetail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullMailDetail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1189
    }
}

/** Properties of a CS_PullSummaryMails. */
export interface ICS_PullSummaryMails {

    /** CS_PullSummaryMails mailIds */
    mailIds?: (string[]|null);
}

/** Represents a CS_PullSummaryMails. */
export class CS_PullSummaryMails implements ICS_PullSummaryMails {

    /**
     * Constructs a new CS_PullSummaryMails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PullSummaryMails);

    /** CS_PullSummaryMails mailIds. */
    public mailIds: string[];

    /**
     * Creates a new CS_PullSummaryMails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PullSummaryMails instance
     */
    public static create(properties?: ICS_PullSummaryMails): CS_PullSummaryMails;

    /**
     * Encodes the specified CS_PullSummaryMails message. Does not implicitly {@link CS_PullSummaryMails.verify|verify} messages.
     * @param message CS_PullSummaryMails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PullSummaryMails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PullSummaryMails message, length delimited. Does not implicitly {@link CS_PullSummaryMails.verify|verify} messages.
     * @param message CS_PullSummaryMails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PullSummaryMails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PullSummaryMails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PullSummaryMails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PullSummaryMails;

    /**
     * Decodes a CS_PullSummaryMails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PullSummaryMails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PullSummaryMails;

    /**
     * Verifies a CS_PullSummaryMails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PullSummaryMails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PullSummaryMails
     */
    public static fromObject(object: { [k: string]: any }): CS_PullSummaryMails;

    /**
     * Creates a plain object from a CS_PullSummaryMails message. Also converts values to other types if specified.
     * @param message CS_PullSummaryMails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PullSummaryMails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PullSummaryMails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PullSummaryMails {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1190
    }
}

/** Properties of a SC_PullMails. */
export interface ISC_PullMails {

    /** SC_PullMails mails */
    mails?: (IMailInfo[]|null);
}

/** Represents a SC_PullMails. */
export class SC_PullMails implements ISC_PullMails {

    /**
     * Constructs a new SC_PullMails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullMails);

    /** SC_PullMails mails. */
    public mails: IMailInfo[];

    /**
     * Creates a new SC_PullMails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullMails instance
     */
    public static create(properties?: ISC_PullMails): SC_PullMails;

    /**
     * Encodes the specified SC_PullMails message. Does not implicitly {@link SC_PullMails.verify|verify} messages.
     * @param message SC_PullMails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullMails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullMails message, length delimited. Does not implicitly {@link SC_PullMails.verify|verify} messages.
     * @param message SC_PullMails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullMails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullMails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullMails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullMails;

    /**
     * Decodes a SC_PullMails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullMails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullMails;

    /**
     * Verifies a SC_PullMails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullMails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullMails
     */
    public static fromObject(object: { [k: string]: any }): SC_PullMails;

    /**
     * Creates a plain object from a SC_PullMails message. Also converts values to other types if specified.
     * @param message SC_PullMails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullMails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullMails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullMails {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1191
    }
}

/** Properties of a SC_PullMailDetail. */
export interface ISC_PullMailDetail {

    /** SC_PullMailDetail mail */
    mail?: (IMailInfo|null);
}

/** Represents a SC_PullMailDetail. */
export class SC_PullMailDetail implements ISC_PullMailDetail {

    /**
     * Constructs a new SC_PullMailDetail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PullMailDetail);

    /** SC_PullMailDetail mail. */
    public mail?: (IMailInfo|null);

    /**
     * Creates a new SC_PullMailDetail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PullMailDetail instance
     */
    public static create(properties?: ISC_PullMailDetail): SC_PullMailDetail;

    /**
     * Encodes the specified SC_PullMailDetail message. Does not implicitly {@link SC_PullMailDetail.verify|verify} messages.
     * @param message SC_PullMailDetail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PullMailDetail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PullMailDetail message, length delimited. Does not implicitly {@link SC_PullMailDetail.verify|verify} messages.
     * @param message SC_PullMailDetail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PullMailDetail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PullMailDetail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PullMailDetail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PullMailDetail;

    /**
     * Decodes a SC_PullMailDetail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PullMailDetail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PullMailDetail;

    /**
     * Verifies a SC_PullMailDetail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PullMailDetail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PullMailDetail
     */
    public static fromObject(object: { [k: string]: any }): SC_PullMailDetail;

    /**
     * Creates a plain object from a SC_PullMailDetail message. Also converts values to other types if specified.
     * @param message SC_PullMailDetail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PullMailDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PullMailDetail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PullMailDetail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1192
    }
}

/** Properties of a CS_ReadMail. */
export interface ICS_ReadMail {

    /** CS_ReadMail mailId */
    mailId?: (string|null);
}

/** Represents a CS_ReadMail. */
export class CS_ReadMail implements ICS_ReadMail {

    /**
     * Constructs a new CS_ReadMail.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ReadMail);

    /** CS_ReadMail mailId. */
    public mailId: string;

    /**
     * Creates a new CS_ReadMail instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ReadMail instance
     */
    public static create(properties?: ICS_ReadMail): CS_ReadMail;

    /**
     * Encodes the specified CS_ReadMail message. Does not implicitly {@link CS_ReadMail.verify|verify} messages.
     * @param message CS_ReadMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ReadMail message, length delimited. Does not implicitly {@link CS_ReadMail.verify|verify} messages.
     * @param message CS_ReadMail message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ReadMail message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ReadMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ReadMail;

    /**
     * Decodes a CS_ReadMail message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ReadMail
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ReadMail;

    /**
     * Verifies a CS_ReadMail message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ReadMail message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ReadMail
     */
    public static fromObject(object: { [k: string]: any }): CS_ReadMail;

    /**
     * Creates a plain object from a CS_ReadMail message. Also converts values to other types if specified.
     * @param message CS_ReadMail
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ReadMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ReadMail to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ReadMail {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1193
    }
}

/** Properties of a CS_CreateRoom. */
export interface ICS_CreateRoom {

    /** CS_CreateRoom gameType */
    gameType?: (number|null);

    /** CS_CreateRoom clubId */
    clubId?: (number|null);

    /** CS_CreateRoom templateId */
    templateId?: (number|null);

    /** CS_CreateRoom rule */
    rule?: (string|null);
}

/** Represents a CS_CreateRoom. */
export class CS_CreateRoom implements ICS_CreateRoom {

    /**
     * Constructs a new CS_CreateRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_CreateRoom);

    /** CS_CreateRoom gameType. */
    public gameType: number;

    /** CS_CreateRoom clubId. */
    public clubId: number;

    /** CS_CreateRoom templateId. */
    public templateId: number;

    /** CS_CreateRoom rule. */
    public rule: string;

    /**
     * Creates a new CS_CreateRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_CreateRoom instance
     */
    public static create(properties?: ICS_CreateRoom): CS_CreateRoom;

    /**
     * Encodes the specified CS_CreateRoom message. Does not implicitly {@link CS_CreateRoom.verify|verify} messages.
     * @param message CS_CreateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_CreateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_CreateRoom message, length delimited. Does not implicitly {@link CS_CreateRoom.verify|verify} messages.
     * @param message CS_CreateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_CreateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_CreateRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_CreateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_CreateRoom;

    /**
     * Decodes a CS_CreateRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_CreateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_CreateRoom;

    /**
     * Verifies a CS_CreateRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_CreateRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_CreateRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_CreateRoom;

    /**
     * Creates a plain object from a CS_CreateRoom message. Also converts values to other types if specified.
     * @param message CS_CreateRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_CreateRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_CreateRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_CreateRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1194
    }
}

/** Properties of a SC_CreateRoom. */
export interface ISC_CreateRoom {

    /** SC_CreateRoom result */
    result?: (number|null);

    /** SC_CreateRoom info */
    info?: (ITABLE_INFO|null);

    /** SC_CreateRoom seatList */
    seatList?: (ISEAT_INFO[]|null);

    /** SC_CreateRoom roundInfo */
    roundInfo?: (IROUND_INFO|null);
}

/** Represents a SC_CreateRoom. */
export class SC_CreateRoom implements ISC_CreateRoom {

    /**
     * Constructs a new SC_CreateRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CreateRoom);

    /** SC_CreateRoom result. */
    public result: number;

    /** SC_CreateRoom info. */
    public info?: (ITABLE_INFO|null);

    /** SC_CreateRoom seatList. */
    public seatList: ISEAT_INFO[];

    /** SC_CreateRoom roundInfo. */
    public roundInfo?: (IROUND_INFO|null);

    /**
     * Creates a new SC_CreateRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CreateRoom instance
     */
    public static create(properties?: ISC_CreateRoom): SC_CreateRoom;

    /**
     * Encodes the specified SC_CreateRoom message. Does not implicitly {@link SC_CreateRoom.verify|verify} messages.
     * @param message SC_CreateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CreateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CreateRoom message, length delimited. Does not implicitly {@link SC_CreateRoom.verify|verify} messages.
     * @param message SC_CreateRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CreateRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CreateRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CreateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CreateRoom;

    /**
     * Decodes a SC_CreateRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CreateRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CreateRoom;

    /**
     * Verifies a SC_CreateRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CreateRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CreateRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_CreateRoom;

    /**
     * Creates a plain object from a SC_CreateRoom message. Also converts values to other types if specified.
     * @param message SC_CreateRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CreateRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CreateRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CreateRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1195
    }
}

/** Properties of a CS_JoinRoom. */
export interface ICS_JoinRoom {

    /** CS_JoinRoom tableId */
    tableId?: (number|null);

    /** CS_JoinRoom reconnect */
    reconnect?: (number|null);
}

/** Represents a CS_JoinRoom. */
export class CS_JoinRoom implements ICS_JoinRoom {

    /**
     * Constructs a new CS_JoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_JoinRoom);

    /** CS_JoinRoom tableId. */
    public tableId: number;

    /** CS_JoinRoom reconnect. */
    public reconnect: number;

    /**
     * Creates a new CS_JoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_JoinRoom instance
     */
    public static create(properties?: ICS_JoinRoom): CS_JoinRoom;

    /**
     * Encodes the specified CS_JoinRoom message. Does not implicitly {@link CS_JoinRoom.verify|verify} messages.
     * @param message CS_JoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_JoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_JoinRoom message, length delimited. Does not implicitly {@link CS_JoinRoom.verify|verify} messages.
     * @param message CS_JoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_JoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_JoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_JoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_JoinRoom;

    /**
     * Decodes a CS_JoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_JoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_JoinRoom;

    /**
     * Verifies a CS_JoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_JoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_JoinRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_JoinRoom;

    /**
     * Creates a plain object from a CS_JoinRoom message. Also converts values to other types if specified.
     * @param message CS_JoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_JoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_JoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_JoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1196
    }
}

/** Properties of a SC_JoinRoom. */
export interface ISC_JoinRoom {

    /** SC_JoinRoom result */
    result?: (number|null);

    /** SC_JoinRoom info */
    info?: (ITABLE_INFO|null);

    /** SC_JoinRoom seatList */
    seatList?: (ISEAT_INFO[]|null);

    /** SC_JoinRoom roundInfo */
    roundInfo?: (IROUND_INFO|null);
}

/** Represents a SC_JoinRoom. */
export class SC_JoinRoom implements ISC_JoinRoom {

    /**
     * Constructs a new SC_JoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_JoinRoom);

    /** SC_JoinRoom result. */
    public result: number;

    /** SC_JoinRoom info. */
    public info?: (ITABLE_INFO|null);

    /** SC_JoinRoom seatList. */
    public seatList: ISEAT_INFO[];

    /** SC_JoinRoom roundInfo. */
    public roundInfo?: (IROUND_INFO|null);

    /**
     * Creates a new SC_JoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_JoinRoom instance
     */
    public static create(properties?: ISC_JoinRoom): SC_JoinRoom;

    /**
     * Encodes the specified SC_JoinRoom message. Does not implicitly {@link SC_JoinRoom.verify|verify} messages.
     * @param message SC_JoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_JoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_JoinRoom message, length delimited. Does not implicitly {@link SC_JoinRoom.verify|verify} messages.
     * @param message SC_JoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_JoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_JoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_JoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_JoinRoom;

    /**
     * Decodes a SC_JoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_JoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_JoinRoom;

    /**
     * Verifies a SC_JoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_JoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_JoinRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_JoinRoom;

    /**
     * Creates a plain object from a SC_JoinRoom message. Also converts values to other types if specified.
     * @param message SC_JoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_JoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_JoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_JoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1197
    }
}

/** Properties of a S2C_WARN_CODE_RES. */
export interface IS2C_WARN_CODE_RES {

    /** S2C_WARN_CODE_RES warnCode */
    warnCode?: (number|null);
}

/** Represents a S2C_WARN_CODE_RES. */
export class S2C_WARN_CODE_RES implements IS2C_WARN_CODE_RES {

    /**
     * Constructs a new S2C_WARN_CODE_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_WARN_CODE_RES);

    /** S2C_WARN_CODE_RES warnCode. */
    public warnCode: number;

    /**
     * Creates a new S2C_WARN_CODE_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_WARN_CODE_RES instance
     */
    public static create(properties?: IS2C_WARN_CODE_RES): S2C_WARN_CODE_RES;

    /**
     * Encodes the specified S2C_WARN_CODE_RES message. Does not implicitly {@link S2C_WARN_CODE_RES.verify|verify} messages.
     * @param message S2C_WARN_CODE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_WARN_CODE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_WARN_CODE_RES message, length delimited. Does not implicitly {@link S2C_WARN_CODE_RES.verify|verify} messages.
     * @param message S2C_WARN_CODE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_WARN_CODE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_WARN_CODE_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_WARN_CODE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_WARN_CODE_RES;

    /**
     * Decodes a S2C_WARN_CODE_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_WARN_CODE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_WARN_CODE_RES;

    /**
     * Verifies a S2C_WARN_CODE_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_WARN_CODE_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_WARN_CODE_RES
     */
    public static fromObject(object: { [k: string]: any }): S2C_WARN_CODE_RES;

    /**
     * Creates a plain object from a S2C_WARN_CODE_RES message. Also converts values to other types if specified.
     * @param message S2C_WARN_CODE_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_WARN_CODE_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_WARN_CODE_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_WARN_CODE_RES {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1198
    }
}

/** Properties of a RED_DOT. */
export interface IRED_DOT {

    /** RED_DOT type */
    type?: (number|null);

    /** RED_DOT count */
    count?: (number|null);
}

/** Represents a RED_DOT. */
export class RED_DOT implements IRED_DOT {

    /**
     * Constructs a new RED_DOT.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRED_DOT);

    /** RED_DOT type. */
    public type: number;

    /** RED_DOT count. */
    public count: number;

    /**
     * Creates a new RED_DOT instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RED_DOT instance
     */
    public static create(properties?: IRED_DOT): RED_DOT;

    /**
     * Encodes the specified RED_DOT message. Does not implicitly {@link RED_DOT.verify|verify} messages.
     * @param message RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RED_DOT message, length delimited. Does not implicitly {@link RED_DOT.verify|verify} messages.
     * @param message RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RED_DOT message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RED_DOT;

    /**
     * Decodes a RED_DOT message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RED_DOT;

    /**
     * Verifies a RED_DOT message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RED_DOT message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RED_DOT
     */
    public static fromObject(object: { [k: string]: any }): RED_DOT;

    /**
     * Creates a plain object from a RED_DOT message. Also converts values to other types if specified.
     * @param message RED_DOT
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RED_DOT, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RED_DOT to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CS_RED_DOT. */
export interface ICS_RED_DOT {
}

/** Represents a CS_RED_DOT. */
export class CS_RED_DOT implements ICS_RED_DOT {

    /**
     * Constructs a new CS_RED_DOT.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RED_DOT);

    /**
     * Creates a new CS_RED_DOT instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RED_DOT instance
     */
    public static create(properties?: ICS_RED_DOT): CS_RED_DOT;

    /**
     * Encodes the specified CS_RED_DOT message. Does not implicitly {@link CS_RED_DOT.verify|verify} messages.
     * @param message CS_RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RED_DOT message, length delimited. Does not implicitly {@link CS_RED_DOT.verify|verify} messages.
     * @param message CS_RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RED_DOT message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RED_DOT;

    /**
     * Decodes a CS_RED_DOT message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RED_DOT;

    /**
     * Verifies a CS_RED_DOT message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RED_DOT message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RED_DOT
     */
    public static fromObject(object: { [k: string]: any }): CS_RED_DOT;

    /**
     * Creates a plain object from a CS_RED_DOT message. Also converts values to other types if specified.
     * @param message CS_RED_DOT
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RED_DOT, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RED_DOT to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RED_DOT {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1199
    }
}

/** Properties of a SC_RED_DOT. */
export interface ISC_RED_DOT {

    /** SC_RED_DOT redDots */
    redDots?: (IRED_DOT[]|null);
}

/** Represents a SC_RED_DOT. */
export class SC_RED_DOT implements ISC_RED_DOT {

    /**
     * Constructs a new SC_RED_DOT.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_RED_DOT);

    /** SC_RED_DOT redDots. */
    public redDots: IRED_DOT[];

    /**
     * Creates a new SC_RED_DOT instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_RED_DOT instance
     */
    public static create(properties?: ISC_RED_DOT): SC_RED_DOT;

    /**
     * Encodes the specified SC_RED_DOT message. Does not implicitly {@link SC_RED_DOT.verify|verify} messages.
     * @param message SC_RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_RED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_RED_DOT message, length delimited. Does not implicitly {@link SC_RED_DOT.verify|verify} messages.
     * @param message SC_RED_DOT message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_RED_DOT, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_RED_DOT message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_RED_DOT;

    /**
     * Decodes a SC_RED_DOT message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_RED_DOT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_RED_DOT;

    /**
     * Verifies a SC_RED_DOT message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_RED_DOT message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_RED_DOT
     */
    public static fromObject(object: { [k: string]: any }): SC_RED_DOT;

    /**
     * Creates a plain object from a SC_RED_DOT message. Also converts values to other types if specified.
     * @param message SC_RED_DOT
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_RED_DOT, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_RED_DOT to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_RED_DOT {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1200
    }
}

/** Properties of a CS_VoteTableReq. */
export interface ICS_VoteTableReq {

    /** CS_VoteTableReq tableId */
    tableId?: (number|null);

    /** CS_VoteTableReq voteType */
    voteType?: (string|null);
}

/** Represents a CS_VoteTableReq. */
export class CS_VoteTableReq implements ICS_VoteTableReq {

    /**
     * Constructs a new CS_VoteTableReq.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_VoteTableReq);

    /** CS_VoteTableReq tableId. */
    public tableId: number;

    /** CS_VoteTableReq voteType. */
    public voteType: string;

    /**
     * Creates a new CS_VoteTableReq instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_VoteTableReq instance
     */
    public static create(properties?: ICS_VoteTableReq): CS_VoteTableReq;

    /**
     * Encodes the specified CS_VoteTableReq message. Does not implicitly {@link CS_VoteTableReq.verify|verify} messages.
     * @param message CS_VoteTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_VoteTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_VoteTableReq message, length delimited. Does not implicitly {@link CS_VoteTableReq.verify|verify} messages.
     * @param message CS_VoteTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_VoteTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_VoteTableReq message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_VoteTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_VoteTableReq;

    /**
     * Decodes a CS_VoteTableReq message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_VoteTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_VoteTableReq;

    /**
     * Verifies a CS_VoteTableReq message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_VoteTableReq message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_VoteTableReq
     */
    public static fromObject(object: { [k: string]: any }): CS_VoteTableReq;

    /**
     * Creates a plain object from a CS_VoteTableReq message. Also converts values to other types if specified.
     * @param message CS_VoteTableReq
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_VoteTableReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_VoteTableReq to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_VoteTableReq {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1201
    }
}

/** Properties of a SC_VoteTableReq. */
export interface ISC_VoteTableReq {

    /** SC_VoteTableReq result */
    result?: (number|null);

    /** SC_VoteTableReq voteType */
    voteType?: (string|null);

    /** SC_VoteTableReq requestGuid */
    requestGuid?: (number|null);

    /** SC_VoteTableReq requestChairId */
    requestChairId?: (number|null);

    /** SC_VoteTableReq datetime */
    datetime?: (number|null);

    /** SC_VoteTableReq timeout */
    timeout?: (number|null);
}

/** Represents a SC_VoteTableReq. */
export class SC_VoteTableReq implements ISC_VoteTableReq {

    /**
     * Constructs a new SC_VoteTableReq.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_VoteTableReq);

    /** SC_VoteTableReq result. */
    public result: number;

    /** SC_VoteTableReq voteType. */
    public voteType: string;

    /** SC_VoteTableReq requestGuid. */
    public requestGuid: number;

    /** SC_VoteTableReq requestChairId. */
    public requestChairId: number;

    /** SC_VoteTableReq datetime. */
    public datetime: number;

    /** SC_VoteTableReq timeout. */
    public timeout: number;

    /**
     * Creates a new SC_VoteTableReq instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_VoteTableReq instance
     */
    public static create(properties?: ISC_VoteTableReq): SC_VoteTableReq;

    /**
     * Encodes the specified SC_VoteTableReq message. Does not implicitly {@link SC_VoteTableReq.verify|verify} messages.
     * @param message SC_VoteTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_VoteTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_VoteTableReq message, length delimited. Does not implicitly {@link SC_VoteTableReq.verify|verify} messages.
     * @param message SC_VoteTableReq message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_VoteTableReq, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_VoteTableReq message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_VoteTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_VoteTableReq;

    /**
     * Decodes a SC_VoteTableReq message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_VoteTableReq
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_VoteTableReq;

    /**
     * Verifies a SC_VoteTableReq message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_VoteTableReq message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_VoteTableReq
     */
    public static fromObject(object: { [k: string]: any }): SC_VoteTableReq;

    /**
     * Creates a plain object from a SC_VoteTableReq message. Also converts values to other types if specified.
     * @param message SC_VoteTableReq
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_VoteTableReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_VoteTableReq to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_VoteTableReq {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1202
    }
}

/** Properties of a VoteCommitStatus. */
export interface IVoteCommitStatus {

    /** VoteCommitStatus guid */
    guid?: (number|null);

    /** VoteCommitStatus chairId */
    chairId?: (number|null);

    /** VoteCommitStatus agree */
    agree?: (boolean|null);
}

/** Represents a VoteCommitStatus. */
export class VoteCommitStatus implements IVoteCommitStatus {

    /**
     * Constructs a new VoteCommitStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVoteCommitStatus);

    /** VoteCommitStatus guid. */
    public guid: number;

    /** VoteCommitStatus chairId. */
    public chairId: number;

    /** VoteCommitStatus agree. */
    public agree: boolean;

    /**
     * Creates a new VoteCommitStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VoteCommitStatus instance
     */
    public static create(properties?: IVoteCommitStatus): VoteCommitStatus;

    /**
     * Encodes the specified VoteCommitStatus message. Does not implicitly {@link VoteCommitStatus.verify|verify} messages.
     * @param message VoteCommitStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVoteCommitStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VoteCommitStatus message, length delimited. Does not implicitly {@link VoteCommitStatus.verify|verify} messages.
     * @param message VoteCommitStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVoteCommitStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VoteCommitStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VoteCommitStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VoteCommitStatus;

    /**
     * Decodes a VoteCommitStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VoteCommitStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VoteCommitStatus;

    /**
     * Verifies a VoteCommitStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VoteCommitStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VoteCommitStatus
     */
    public static fromObject(object: { [k: string]: any }): VoteCommitStatus;

    /**
     * Creates a plain object from a VoteCommitStatus message. Also converts values to other types if specified.
     * @param message VoteCommitStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VoteCommitStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VoteCommitStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_VoteTableRequestInfo. */
export interface ISC_VoteTableRequestInfo {

    /** SC_VoteTableRequestInfo voteType */
    voteType?: (string|null);

    /** SC_VoteTableRequestInfo requestGuid */
    requestGuid?: (number|null);

    /** SC_VoteTableRequestInfo requestChairId */
    requestChairId?: (number|null);

    /** SC_VoteTableRequestInfo datetime */
    datetime?: (number|null);

    /** SC_VoteTableRequestInfo timeout */
    timeout?: (number|null);

    /** SC_VoteTableRequestInfo status */
    status?: (IVoteCommitStatus[]|null);
}

/** Represents a SC_VoteTableRequestInfo. */
export class SC_VoteTableRequestInfo implements ISC_VoteTableRequestInfo {

    /**
     * Constructs a new SC_VoteTableRequestInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_VoteTableRequestInfo);

    /** SC_VoteTableRequestInfo voteType. */
    public voteType: string;

    /** SC_VoteTableRequestInfo requestGuid. */
    public requestGuid: number;

    /** SC_VoteTableRequestInfo requestChairId. */
    public requestChairId: number;

    /** SC_VoteTableRequestInfo datetime. */
    public datetime: number;

    /** SC_VoteTableRequestInfo timeout. */
    public timeout: number;

    /** SC_VoteTableRequestInfo status. */
    public status: IVoteCommitStatus[];

    /**
     * Creates a new SC_VoteTableRequestInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_VoteTableRequestInfo instance
     */
    public static create(properties?: ISC_VoteTableRequestInfo): SC_VoteTableRequestInfo;

    /**
     * Encodes the specified SC_VoteTableRequestInfo message. Does not implicitly {@link SC_VoteTableRequestInfo.verify|verify} messages.
     * @param message SC_VoteTableRequestInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_VoteTableRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_VoteTableRequestInfo message, length delimited. Does not implicitly {@link SC_VoteTableRequestInfo.verify|verify} messages.
     * @param message SC_VoteTableRequestInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_VoteTableRequestInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_VoteTableRequestInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_VoteTableRequestInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_VoteTableRequestInfo;

    /**
     * Decodes a SC_VoteTableRequestInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_VoteTableRequestInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_VoteTableRequestInfo;

    /**
     * Verifies a SC_VoteTableRequestInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_VoteTableRequestInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_VoteTableRequestInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_VoteTableRequestInfo;

    /**
     * Creates a plain object from a SC_VoteTableRequestInfo message. Also converts values to other types if specified.
     * @param message SC_VoteTableRequestInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_VoteTableRequestInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_VoteTableRequestInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_VoteTableRequestInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1203
    }
}

/** Properties of a CS_VoteTableCommit. */
export interface ICS_VoteTableCommit {

    /** CS_VoteTableCommit agree */
    agree?: (boolean|null);
}

/** Represents a CS_VoteTableCommit. */
export class CS_VoteTableCommit implements ICS_VoteTableCommit {

    /**
     * Constructs a new CS_VoteTableCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_VoteTableCommit);

    /** CS_VoteTableCommit agree. */
    public agree: boolean;

    /**
     * Creates a new CS_VoteTableCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_VoteTableCommit instance
     */
    public static create(properties?: ICS_VoteTableCommit): CS_VoteTableCommit;

    /**
     * Encodes the specified CS_VoteTableCommit message. Does not implicitly {@link CS_VoteTableCommit.verify|verify} messages.
     * @param message CS_VoteTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_VoteTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_VoteTableCommit message, length delimited. Does not implicitly {@link CS_VoteTableCommit.verify|verify} messages.
     * @param message CS_VoteTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_VoteTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_VoteTableCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_VoteTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_VoteTableCommit;

    /**
     * Decodes a CS_VoteTableCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_VoteTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_VoteTableCommit;

    /**
     * Verifies a CS_VoteTableCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_VoteTableCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_VoteTableCommit
     */
    public static fromObject(object: { [k: string]: any }): CS_VoteTableCommit;

    /**
     * Creates a plain object from a CS_VoteTableCommit message. Also converts values to other types if specified.
     * @param message CS_VoteTableCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_VoteTableCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_VoteTableCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_VoteTableCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1204
    }
}

/** Properties of a SC_VoteTableCommit. */
export interface ISC_VoteTableCommit {

    /** SC_VoteTableCommit result */
    result?: (number|null);

    /** SC_VoteTableCommit chairId */
    chairId?: (number|null);

    /** SC_VoteTableCommit guid */
    guid?: (number|null);

    /** SC_VoteTableCommit agree */
    agree?: (boolean|null);
}

/** Represents a SC_VoteTableCommit. */
export class SC_VoteTableCommit implements ISC_VoteTableCommit {

    /**
     * Constructs a new SC_VoteTableCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_VoteTableCommit);

    /** SC_VoteTableCommit result. */
    public result: number;

    /** SC_VoteTableCommit chairId. */
    public chairId: number;

    /** SC_VoteTableCommit guid. */
    public guid: number;

    /** SC_VoteTableCommit agree. */
    public agree: boolean;

    /**
     * Creates a new SC_VoteTableCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_VoteTableCommit instance
     */
    public static create(properties?: ISC_VoteTableCommit): SC_VoteTableCommit;

    /**
     * Encodes the specified SC_VoteTableCommit message. Does not implicitly {@link SC_VoteTableCommit.verify|verify} messages.
     * @param message SC_VoteTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_VoteTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_VoteTableCommit message, length delimited. Does not implicitly {@link SC_VoteTableCommit.verify|verify} messages.
     * @param message SC_VoteTableCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_VoteTableCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_VoteTableCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_VoteTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_VoteTableCommit;

    /**
     * Decodes a SC_VoteTableCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_VoteTableCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_VoteTableCommit;

    /**
     * Verifies a SC_VoteTableCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_VoteTableCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_VoteTableCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_VoteTableCommit;

    /**
     * Creates a plain object from a SC_VoteTableCommit message. Also converts values to other types if specified.
     * @param message SC_VoteTableCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_VoteTableCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_VoteTableCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_VoteTableCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1205
    }
}

/** Properties of a SC_VoteTable. */
export interface ISC_VoteTable {

    /** SC_VoteTable success */
    success?: (boolean|null);
}

/** Represents a SC_VoteTable. */
export class SC_VoteTable implements ISC_VoteTable {

    /**
     * Constructs a new SC_VoteTable.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_VoteTable);

    /** SC_VoteTable success. */
    public success: boolean;

    /**
     * Creates a new SC_VoteTable instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_VoteTable instance
     */
    public static create(properties?: ISC_VoteTable): SC_VoteTable;

    /**
     * Encodes the specified SC_VoteTable message. Does not implicitly {@link SC_VoteTable.verify|verify} messages.
     * @param message SC_VoteTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_VoteTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_VoteTable message, length delimited. Does not implicitly {@link SC_VoteTable.verify|verify} messages.
     * @param message SC_VoteTable message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_VoteTable, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_VoteTable message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_VoteTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_VoteTable;

    /**
     * Decodes a SC_VoteTable message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_VoteTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_VoteTable;

    /**
     * Verifies a SC_VoteTable message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_VoteTable message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_VoteTable
     */
    public static fromObject(object: { [k: string]: any }): SC_VoteTable;

    /**
     * Creates a plain object from a SC_VoteTable message. Also converts values to other types if specified.
     * @param message SC_VoteTable
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_VoteTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_VoteTable to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_VoteTable {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1206
    }
}

/** Properties of a CS_Trustee. */
export interface ICS_Trustee {

    /** CS_Trustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a CS_Trustee. */
export class CS_Trustee implements ICS_Trustee {

    /**
     * Constructs a new CS_Trustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Trustee);

    /** CS_Trustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new CS_Trustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Trustee instance
     */
    public static create(properties?: ICS_Trustee): CS_Trustee;

    /**
     * Encodes the specified CS_Trustee message. Does not implicitly {@link CS_Trustee.verify|verify} messages.
     * @param message CS_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Trustee message, length delimited. Does not implicitly {@link CS_Trustee.verify|verify} messages.
     * @param message CS_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Trustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Trustee;

    /**
     * Decodes a CS_Trustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Trustee;

    /**
     * Verifies a CS_Trustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Trustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Trustee
     */
    public static fromObject(object: { [k: string]: any }): CS_Trustee;

    /**
     * Creates a plain object from a CS_Trustee message. Also converts values to other types if specified.
     * @param message CS_Trustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Trustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Trustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Trustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1207
    }
}

/** Properties of a SC_Trustee. */
export interface ISC_Trustee {

    /** SC_Trustee result */
    result?: (number|null);

    /** SC_Trustee chairId */
    chairId?: (number|null);

    /** SC_Trustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SC_Trustee. */
export class SC_Trustee implements ISC_Trustee {

    /**
     * Constructs a new SC_Trustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Trustee);

    /** SC_Trustee result. */
    public result: number;

    /** SC_Trustee chairId. */
    public chairId: number;

    /** SC_Trustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SC_Trustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Trustee instance
     */
    public static create(properties?: ISC_Trustee): SC_Trustee;

    /**
     * Encodes the specified SC_Trustee message. Does not implicitly {@link SC_Trustee.verify|verify} messages.
     * @param message SC_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Trustee message, length delimited. Does not implicitly {@link SC_Trustee.verify|verify} messages.
     * @param message SC_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Trustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Trustee;

    /**
     * Decodes a SC_Trustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Trustee;

    /**
     * Verifies a SC_Trustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Trustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Trustee
     */
    public static fromObject(object: { [k: string]: any }): SC_Trustee;

    /**
     * Creates a plain object from a SC_Trustee message. Also converts values to other types if specified.
     * @param message SC_Trustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Trustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Trustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Trustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1208
    }
}

/** Properties of a SC_TimeOutNotify. */
export interface ISC_TimeOutNotify {

    /** SC_TimeOutNotify leftTime */
    leftTime?: (number|null);

    /** SC_TimeOutNotify totalTime */
    totalTime?: (number|null);

    /** SC_TimeOutNotify extend */
    extend?: (string|null);
}

/** Represents a SC_TimeOutNotify. */
export class SC_TimeOutNotify implements ISC_TimeOutNotify {

    /**
     * Constructs a new SC_TimeOutNotify.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_TimeOutNotify);

    /** SC_TimeOutNotify leftTime. */
    public leftTime: number;

    /** SC_TimeOutNotify totalTime. */
    public totalTime: number;

    /** SC_TimeOutNotify extend. */
    public extend: string;

    /**
     * Creates a new SC_TimeOutNotify instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_TimeOutNotify instance
     */
    public static create(properties?: ISC_TimeOutNotify): SC_TimeOutNotify;

    /**
     * Encodes the specified SC_TimeOutNotify message. Does not implicitly {@link SC_TimeOutNotify.verify|verify} messages.
     * @param message SC_TimeOutNotify message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_TimeOutNotify, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_TimeOutNotify message, length delimited. Does not implicitly {@link SC_TimeOutNotify.verify|verify} messages.
     * @param message SC_TimeOutNotify message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_TimeOutNotify, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_TimeOutNotify message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_TimeOutNotify
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_TimeOutNotify;

    /**
     * Decodes a SC_TimeOutNotify message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_TimeOutNotify
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_TimeOutNotify;

    /**
     * Verifies a SC_TimeOutNotify message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_TimeOutNotify message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_TimeOutNotify
     */
    public static fromObject(object: { [k: string]: any }): SC_TimeOutNotify;

    /**
     * Creates a plain object from a SC_TimeOutNotify message. Also converts values to other types if specified.
     * @param message SC_TimeOutNotify
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_TimeOutNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_TimeOutNotify to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_TimeOutNotify {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1209
    }
}

/** Properties of a CS_UpdateLocation. */
export interface ICS_UpdateLocation {

    /** CS_UpdateLocation longitude */
    longitude?: (number|null);

    /** CS_UpdateLocation latitude */
    latitude?: (number|null);
}

/** Represents a CS_UpdateLocation. */
export class CS_UpdateLocation implements ICS_UpdateLocation {

    /**
     * Constructs a new CS_UpdateLocation.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_UpdateLocation);

    /** CS_UpdateLocation longitude. */
    public longitude: number;

    /** CS_UpdateLocation latitude. */
    public latitude: number;

    /**
     * Creates a new CS_UpdateLocation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_UpdateLocation instance
     */
    public static create(properties?: ICS_UpdateLocation): CS_UpdateLocation;

    /**
     * Encodes the specified CS_UpdateLocation message. Does not implicitly {@link CS_UpdateLocation.verify|verify} messages.
     * @param message CS_UpdateLocation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_UpdateLocation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_UpdateLocation message, length delimited. Does not implicitly {@link CS_UpdateLocation.verify|verify} messages.
     * @param message CS_UpdateLocation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_UpdateLocation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_UpdateLocation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_UpdateLocation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_UpdateLocation;

    /**
     * Decodes a CS_UpdateLocation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_UpdateLocation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_UpdateLocation;

    /**
     * Verifies a CS_UpdateLocation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_UpdateLocation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_UpdateLocation
     */
    public static fromObject(object: { [k: string]: any }): CS_UpdateLocation;

    /**
     * Creates a plain object from a CS_UpdateLocation message. Also converts values to other types if specified.
     * @param message CS_UpdateLocation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_UpdateLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_UpdateLocation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_UpdateLocation {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1210
    }
}

/** Properties of a SC_UpdateLocation. */
export interface ISC_UpdateLocation {

    /** SC_UpdateLocation result */
    result?: (number|null);
}

/** Represents a SC_UpdateLocation. */
export class SC_UpdateLocation implements ISC_UpdateLocation {

    /**
     * Constructs a new SC_UpdateLocation.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_UpdateLocation);

    /** SC_UpdateLocation result. */
    public result: number;

    /**
     * Creates a new SC_UpdateLocation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_UpdateLocation instance
     */
    public static create(properties?: ISC_UpdateLocation): SC_UpdateLocation;

    /**
     * Encodes the specified SC_UpdateLocation message. Does not implicitly {@link SC_UpdateLocation.verify|verify} messages.
     * @param message SC_UpdateLocation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_UpdateLocation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_UpdateLocation message, length delimited. Does not implicitly {@link SC_UpdateLocation.verify|verify} messages.
     * @param message SC_UpdateLocation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_UpdateLocation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_UpdateLocation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_UpdateLocation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_UpdateLocation;

    /**
     * Decodes a SC_UpdateLocation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_UpdateLocation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_UpdateLocation;

    /**
     * Verifies a SC_UpdateLocation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_UpdateLocation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_UpdateLocation
     */
    public static fromObject(object: { [k: string]: any }): SC_UpdateLocation;

    /**
     * Creates a plain object from a SC_UpdateLocation message. Also converts values to other types if specified.
     * @param message SC_UpdateLocation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_UpdateLocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_UpdateLocation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_UpdateLocation {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1211
    }
}

/** Properties of a C2SPlayerInteraction. */
export interface IC2SPlayerInteraction {

    /** C2SPlayerInteraction contentIdx */
    contentIdx?: (number|null);

    /** C2SPlayerInteraction type */
    type?: (number|null);

    /** C2SPlayerInteraction receiver */
    receiver?: (number|null);
}

/** Represents a C2SPlayerInteraction. */
export class C2SPlayerInteraction implements IC2SPlayerInteraction {

    /**
     * Constructs a new C2SPlayerInteraction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2SPlayerInteraction);

    /** C2SPlayerInteraction contentIdx. */
    public contentIdx: number;

    /** C2SPlayerInteraction type. */
    public type: number;

    /** C2SPlayerInteraction receiver. */
    public receiver: number;

    /**
     * Creates a new C2SPlayerInteraction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2SPlayerInteraction instance
     */
    public static create(properties?: IC2SPlayerInteraction): C2SPlayerInteraction;

    /**
     * Encodes the specified C2SPlayerInteraction message. Does not implicitly {@link C2SPlayerInteraction.verify|verify} messages.
     * @param message C2SPlayerInteraction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2SPlayerInteraction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2SPlayerInteraction message, length delimited. Does not implicitly {@link C2SPlayerInteraction.verify|verify} messages.
     * @param message C2SPlayerInteraction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2SPlayerInteraction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2SPlayerInteraction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2SPlayerInteraction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2SPlayerInteraction;

    /**
     * Decodes a C2SPlayerInteraction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2SPlayerInteraction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2SPlayerInteraction;

    /**
     * Verifies a C2SPlayerInteraction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2SPlayerInteraction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2SPlayerInteraction
     */
    public static fromObject(object: { [k: string]: any }): C2SPlayerInteraction;

    /**
     * Creates a plain object from a C2SPlayerInteraction message. Also converts values to other types if specified.
     * @param message C2SPlayerInteraction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2SPlayerInteraction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2SPlayerInteraction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2SPlayerInteraction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1212
    }
}

/** Properties of a S2CPlayerInteraction. */
export interface IS2CPlayerInteraction {

    /** S2CPlayerInteraction result */
    result?: (number|null);

    /** S2CPlayerInteraction contentIdx */
    contentIdx?: (number|null);

    /** S2CPlayerInteraction type */
    type?: (number|null);

    /** S2CPlayerInteraction sender */
    sender?: (number|null);

    /** S2CPlayerInteraction receiver */
    receiver?: (number|null);
}

/** Represents a S2CPlayerInteraction. */
export class S2CPlayerInteraction implements IS2CPlayerInteraction {

    /**
     * Constructs a new S2CPlayerInteraction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2CPlayerInteraction);

    /** S2CPlayerInteraction result. */
    public result: number;

    /** S2CPlayerInteraction contentIdx. */
    public contentIdx: number;

    /** S2CPlayerInteraction type. */
    public type: number;

    /** S2CPlayerInteraction sender. */
    public sender: number;

    /** S2CPlayerInteraction receiver. */
    public receiver: number;

    /**
     * Creates a new S2CPlayerInteraction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2CPlayerInteraction instance
     */
    public static create(properties?: IS2CPlayerInteraction): S2CPlayerInteraction;

    /**
     * Encodes the specified S2CPlayerInteraction message. Does not implicitly {@link S2CPlayerInteraction.verify|verify} messages.
     * @param message S2CPlayerInteraction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2CPlayerInteraction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2CPlayerInteraction message, length delimited. Does not implicitly {@link S2CPlayerInteraction.verify|verify} messages.
     * @param message S2CPlayerInteraction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2CPlayerInteraction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2CPlayerInteraction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2CPlayerInteraction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2CPlayerInteraction;

    /**
     * Decodes a S2CPlayerInteraction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2CPlayerInteraction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2CPlayerInteraction;

    /**
     * Verifies a S2CPlayerInteraction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2CPlayerInteraction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2CPlayerInteraction
     */
    public static fromObject(object: { [k: string]: any }): S2CPlayerInteraction;

    /**
     * Creates a plain object from a S2CPlayerInteraction message. Also converts values to other types if specified.
     * @param message S2CPlayerInteraction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2CPlayerInteraction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2CPlayerInteraction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2CPlayerInteraction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1213
    }
}

/** Properties of a CS_RequestBindPhone. */
export interface ICS_RequestBindPhone {

    /** CS_RequestBindPhone phoneNumber */
    phoneNumber?: (string|null);

    /** CS_RequestBindPhone smsVerifyNo */
    smsVerifyNo?: (string|null);

    /** CS_RequestBindPhone platformId */
    platformId?: (string|null);

    /** CS_RequestBindPhone password */
    password?: (string|null);
}

/** Represents a CS_RequestBindPhone. */
export class CS_RequestBindPhone implements ICS_RequestBindPhone {

    /**
     * Constructs a new CS_RequestBindPhone.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RequestBindPhone);

    /** CS_RequestBindPhone phoneNumber. */
    public phoneNumber: string;

    /** CS_RequestBindPhone smsVerifyNo. */
    public smsVerifyNo: string;

    /** CS_RequestBindPhone platformId. */
    public platformId: string;

    /** CS_RequestBindPhone password. */
    public password: string;

    /**
     * Creates a new CS_RequestBindPhone instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RequestBindPhone instance
     */
    public static create(properties?: ICS_RequestBindPhone): CS_RequestBindPhone;

    /**
     * Encodes the specified CS_RequestBindPhone message. Does not implicitly {@link CS_RequestBindPhone.verify|verify} messages.
     * @param message CS_RequestBindPhone message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RequestBindPhone, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RequestBindPhone message, length delimited. Does not implicitly {@link CS_RequestBindPhone.verify|verify} messages.
     * @param message CS_RequestBindPhone message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RequestBindPhone, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RequestBindPhone message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RequestBindPhone
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RequestBindPhone;

    /**
     * Decodes a CS_RequestBindPhone message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RequestBindPhone
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RequestBindPhone;

    /**
     * Verifies a CS_RequestBindPhone message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RequestBindPhone message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RequestBindPhone
     */
    public static fromObject(object: { [k: string]: any }): CS_RequestBindPhone;

    /**
     * Creates a plain object from a CS_RequestBindPhone message. Also converts values to other types if specified.
     * @param message CS_RequestBindPhone
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RequestBindPhone, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RequestBindPhone to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RequestBindPhone {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1214
    }
}

/** Properties of a SC_RequestBindPhone. */
export interface ISC_RequestBindPhone {

    /** SC_RequestBindPhone result */
    result?: (number|null);

    /** SC_RequestBindPhone phoneNumber */
    phoneNumber?: (string|null);
}

/** Represents a SC_RequestBindPhone. */
export class SC_RequestBindPhone implements ISC_RequestBindPhone {

    /**
     * Constructs a new SC_RequestBindPhone.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_RequestBindPhone);

    /** SC_RequestBindPhone result. */
    public result: number;

    /** SC_RequestBindPhone phoneNumber. */
    public phoneNumber: string;

    /**
     * Creates a new SC_RequestBindPhone instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_RequestBindPhone instance
     */
    public static create(properties?: ISC_RequestBindPhone): SC_RequestBindPhone;

    /**
     * Encodes the specified SC_RequestBindPhone message. Does not implicitly {@link SC_RequestBindPhone.verify|verify} messages.
     * @param message SC_RequestBindPhone message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_RequestBindPhone, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_RequestBindPhone message, length delimited. Does not implicitly {@link SC_RequestBindPhone.verify|verify} messages.
     * @param message SC_RequestBindPhone message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_RequestBindPhone, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_RequestBindPhone message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_RequestBindPhone
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_RequestBindPhone;

    /**
     * Decodes a SC_RequestBindPhone message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_RequestBindPhone
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_RequestBindPhone;

    /**
     * Verifies a SC_RequestBindPhone message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_RequestBindPhone message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_RequestBindPhone
     */
    public static fromObject(object: { [k: string]: any }): SC_RequestBindPhone;

    /**
     * Creates a plain object from a SC_RequestBindPhone message. Also converts values to other types if specified.
     * @param message SC_RequestBindPhone
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_RequestBindPhone, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_RequestBindPhone to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_RequestBindPhone {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1215
    }
}

/** Properties of a CS_RequestBindWx. */
export interface ICS_RequestBindWx {

    /** CS_RequestBindWx code */
    code?: (string|null);
}

/** Represents a CS_RequestBindWx. */
export class CS_RequestBindWx implements ICS_RequestBindWx {

    /**
     * Constructs a new CS_RequestBindWx.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_RequestBindWx);

    /** CS_RequestBindWx code. */
    public code: string;

    /**
     * Creates a new CS_RequestBindWx instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_RequestBindWx instance
     */
    public static create(properties?: ICS_RequestBindWx): CS_RequestBindWx;

    /**
     * Encodes the specified CS_RequestBindWx message. Does not implicitly {@link CS_RequestBindWx.verify|verify} messages.
     * @param message CS_RequestBindWx message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_RequestBindWx, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_RequestBindWx message, length delimited. Does not implicitly {@link CS_RequestBindWx.verify|verify} messages.
     * @param message CS_RequestBindWx message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_RequestBindWx, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_RequestBindWx message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_RequestBindWx
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_RequestBindWx;

    /**
     * Decodes a CS_RequestBindWx message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_RequestBindWx
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_RequestBindWx;

    /**
     * Verifies a CS_RequestBindWx message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_RequestBindWx message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_RequestBindWx
     */
    public static fromObject(object: { [k: string]: any }): CS_RequestBindWx;

    /**
     * Creates a plain object from a CS_RequestBindWx message. Also converts values to other types if specified.
     * @param message CS_RequestBindWx
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_RequestBindWx, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_RequestBindWx to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_RequestBindWx {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1216
    }
}

/** Properties of a SC_RequestBindWx. */
export interface ISC_RequestBindWx {

    /** SC_RequestBindWx result */
    result?: (number|null);

    /** SC_RequestBindWx pbBaseInfo */
    pbBaseInfo?: (IPlayerBaseInfo|null);
}

/** Represents a SC_RequestBindWx. */
export class SC_RequestBindWx implements ISC_RequestBindWx {

    /**
     * Constructs a new SC_RequestBindWx.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_RequestBindWx);

    /** SC_RequestBindWx result. */
    public result: number;

    /** SC_RequestBindWx pbBaseInfo. */
    public pbBaseInfo?: (IPlayerBaseInfo|null);

    /**
     * Creates a new SC_RequestBindWx instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_RequestBindWx instance
     */
    public static create(properties?: ISC_RequestBindWx): SC_RequestBindWx;

    /**
     * Encodes the specified SC_RequestBindWx message. Does not implicitly {@link SC_RequestBindWx.verify|verify} messages.
     * @param message SC_RequestBindWx message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_RequestBindWx, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_RequestBindWx message, length delimited. Does not implicitly {@link SC_RequestBindWx.verify|verify} messages.
     * @param message SC_RequestBindWx message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_RequestBindWx, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_RequestBindWx message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_RequestBindWx
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_RequestBindWx;

    /**
     * Decodes a SC_RequestBindWx message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_RequestBindWx
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_RequestBindWx;

    /**
     * Verifies a SC_RequestBindWx message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_RequestBindWx message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_RequestBindWx
     */
    public static fromObject(object: { [k: string]: any }): SC_RequestBindWx;

    /**
     * Creates a plain object from a SC_RequestBindWx message. Also converts values to other types if specified.
     * @param message SC_RequestBindWx
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_RequestBindWx, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_RequestBindWx to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_RequestBindWx {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1217
    }
}

/** Properties of a CS_PUBLISH_NOTICE. */
export interface ICS_PUBLISH_NOTICE {

    /** CS_PUBLISH_NOTICE notice */
    notice?: (INOTICE|null);
}

/** Represents a CS_PUBLISH_NOTICE. */
export class CS_PUBLISH_NOTICE implements ICS_PUBLISH_NOTICE {

    /**
     * Constructs a new CS_PUBLISH_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PUBLISH_NOTICE);

    /** CS_PUBLISH_NOTICE notice. */
    public notice?: (INOTICE|null);

    /**
     * Creates a new CS_PUBLISH_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PUBLISH_NOTICE instance
     */
    public static create(properties?: ICS_PUBLISH_NOTICE): CS_PUBLISH_NOTICE;

    /**
     * Encodes the specified CS_PUBLISH_NOTICE message. Does not implicitly {@link CS_PUBLISH_NOTICE.verify|verify} messages.
     * @param message CS_PUBLISH_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PUBLISH_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PUBLISH_NOTICE message, length delimited. Does not implicitly {@link CS_PUBLISH_NOTICE.verify|verify} messages.
     * @param message CS_PUBLISH_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PUBLISH_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PUBLISH_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PUBLISH_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PUBLISH_NOTICE;

    /**
     * Decodes a CS_PUBLISH_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PUBLISH_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PUBLISH_NOTICE;

    /**
     * Verifies a CS_PUBLISH_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PUBLISH_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PUBLISH_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): CS_PUBLISH_NOTICE;

    /**
     * Creates a plain object from a CS_PUBLISH_NOTICE message. Also converts values to other types if specified.
     * @param message CS_PUBLISH_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PUBLISH_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PUBLISH_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PUBLISH_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1218
    }
}

/** Properties of a SC_PUBLISH_NOTICE. */
export interface ISC_PUBLISH_NOTICE {

    /** SC_PUBLISH_NOTICE result */
    result?: (number|null);
}

/** Represents a SC_PUBLISH_NOTICE. */
export class SC_PUBLISH_NOTICE implements ISC_PUBLISH_NOTICE {

    /**
     * Constructs a new SC_PUBLISH_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PUBLISH_NOTICE);

    /** SC_PUBLISH_NOTICE result. */
    public result: number;

    /**
     * Creates a new SC_PUBLISH_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PUBLISH_NOTICE instance
     */
    public static create(properties?: ISC_PUBLISH_NOTICE): SC_PUBLISH_NOTICE;

    /**
     * Encodes the specified SC_PUBLISH_NOTICE message. Does not implicitly {@link SC_PUBLISH_NOTICE.verify|verify} messages.
     * @param message SC_PUBLISH_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PUBLISH_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PUBLISH_NOTICE message, length delimited. Does not implicitly {@link SC_PUBLISH_NOTICE.verify|verify} messages.
     * @param message SC_PUBLISH_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PUBLISH_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PUBLISH_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PUBLISH_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PUBLISH_NOTICE;

    /**
     * Decodes a SC_PUBLISH_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PUBLISH_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PUBLISH_NOTICE;

    /**
     * Verifies a SC_PUBLISH_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PUBLISH_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PUBLISH_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): SC_PUBLISH_NOTICE;

    /**
     * Creates a plain object from a SC_PUBLISH_NOTICE message. Also converts values to other types if specified.
     * @param message SC_PUBLISH_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PUBLISH_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PUBLISH_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PUBLISH_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1219
    }
}

/** Properties of a CS_NOTICE_REQ. */
export interface ICS_NOTICE_REQ {

    /** CS_NOTICE_REQ clubId */
    clubId?: (number|null);
}

/** Represents a CS_NOTICE_REQ. */
export class CS_NOTICE_REQ implements ICS_NOTICE_REQ {

    /**
     * Constructs a new CS_NOTICE_REQ.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_NOTICE_REQ);

    /** CS_NOTICE_REQ clubId. */
    public clubId: number;

    /**
     * Creates a new CS_NOTICE_REQ instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_NOTICE_REQ instance
     */
    public static create(properties?: ICS_NOTICE_REQ): CS_NOTICE_REQ;

    /**
     * Encodes the specified CS_NOTICE_REQ message. Does not implicitly {@link CS_NOTICE_REQ.verify|verify} messages.
     * @param message CS_NOTICE_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_NOTICE_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_NOTICE_REQ message, length delimited. Does not implicitly {@link CS_NOTICE_REQ.verify|verify} messages.
     * @param message CS_NOTICE_REQ message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_NOTICE_REQ, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_NOTICE_REQ message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_NOTICE_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_NOTICE_REQ;

    /**
     * Decodes a CS_NOTICE_REQ message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_NOTICE_REQ
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_NOTICE_REQ;

    /**
     * Verifies a CS_NOTICE_REQ message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_NOTICE_REQ message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_NOTICE_REQ
     */
    public static fromObject(object: { [k: string]: any }): CS_NOTICE_REQ;

    /**
     * Creates a plain object from a CS_NOTICE_REQ message. Also converts values to other types if specified.
     * @param message CS_NOTICE_REQ
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_NOTICE_REQ, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_NOTICE_REQ to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_NOTICE_REQ {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1220
    }
}

/** Properties of a SC_NOTICE_RES. */
export interface ISC_NOTICE_RES {

    /** SC_NOTICE_RES result */
    result?: (number|null);

    /** SC_NOTICE_RES notices */
    notices?: (INOTICE[]|null);
}

/** Represents a SC_NOTICE_RES. */
export class SC_NOTICE_RES implements ISC_NOTICE_RES {

    /**
     * Constructs a new SC_NOTICE_RES.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NOTICE_RES);

    /** SC_NOTICE_RES result. */
    public result: number;

    /** SC_NOTICE_RES notices. */
    public notices: INOTICE[];

    /**
     * Creates a new SC_NOTICE_RES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NOTICE_RES instance
     */
    public static create(properties?: ISC_NOTICE_RES): SC_NOTICE_RES;

    /**
     * Encodes the specified SC_NOTICE_RES message. Does not implicitly {@link SC_NOTICE_RES.verify|verify} messages.
     * @param message SC_NOTICE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NOTICE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NOTICE_RES message, length delimited. Does not implicitly {@link SC_NOTICE_RES.verify|verify} messages.
     * @param message SC_NOTICE_RES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NOTICE_RES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NOTICE_RES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NOTICE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NOTICE_RES;

    /**
     * Decodes a SC_NOTICE_RES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NOTICE_RES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NOTICE_RES;

    /**
     * Verifies a SC_NOTICE_RES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NOTICE_RES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NOTICE_RES
     */
    public static fromObject(object: { [k: string]: any }): SC_NOTICE_RES;

    /**
     * Creates a plain object from a SC_NOTICE_RES message. Also converts values to other types if specified.
     * @param message SC_NOTICE_RES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NOTICE_RES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NOTICE_RES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NOTICE_RES {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1221
    }
}

/** Properties of a CS_EDIT_NOTICE. */
export interface ICS_EDIT_NOTICE {

    /** CS_EDIT_NOTICE notice */
    notice?: (INOTICE|null);
}

/** Represents a CS_EDIT_NOTICE. */
export class CS_EDIT_NOTICE implements ICS_EDIT_NOTICE {

    /**
     * Constructs a new CS_EDIT_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_EDIT_NOTICE);

    /** CS_EDIT_NOTICE notice. */
    public notice?: (INOTICE|null);

    /**
     * Creates a new CS_EDIT_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_EDIT_NOTICE instance
     */
    public static create(properties?: ICS_EDIT_NOTICE): CS_EDIT_NOTICE;

    /**
     * Encodes the specified CS_EDIT_NOTICE message. Does not implicitly {@link CS_EDIT_NOTICE.verify|verify} messages.
     * @param message CS_EDIT_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_EDIT_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_EDIT_NOTICE message, length delimited. Does not implicitly {@link CS_EDIT_NOTICE.verify|verify} messages.
     * @param message CS_EDIT_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_EDIT_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_EDIT_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_EDIT_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_EDIT_NOTICE;

    /**
     * Decodes a CS_EDIT_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_EDIT_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_EDIT_NOTICE;

    /**
     * Verifies a CS_EDIT_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_EDIT_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_EDIT_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): CS_EDIT_NOTICE;

    /**
     * Creates a plain object from a CS_EDIT_NOTICE message. Also converts values to other types if specified.
     * @param message CS_EDIT_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_EDIT_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_EDIT_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_EDIT_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1222
    }
}

/** Properties of a SC_EDIT_NOTICE. */
export interface ISC_EDIT_NOTICE {

    /** SC_EDIT_NOTICE result */
    result?: (number|null);
}

/** Represents a SC_EDIT_NOTICE. */
export class SC_EDIT_NOTICE implements ISC_EDIT_NOTICE {

    /**
     * Constructs a new SC_EDIT_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_EDIT_NOTICE);

    /** SC_EDIT_NOTICE result. */
    public result: number;

    /**
     * Creates a new SC_EDIT_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_EDIT_NOTICE instance
     */
    public static create(properties?: ISC_EDIT_NOTICE): SC_EDIT_NOTICE;

    /**
     * Encodes the specified SC_EDIT_NOTICE message. Does not implicitly {@link SC_EDIT_NOTICE.verify|verify} messages.
     * @param message SC_EDIT_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_EDIT_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_EDIT_NOTICE message, length delimited. Does not implicitly {@link SC_EDIT_NOTICE.verify|verify} messages.
     * @param message SC_EDIT_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_EDIT_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_EDIT_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_EDIT_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_EDIT_NOTICE;

    /**
     * Decodes a SC_EDIT_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_EDIT_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_EDIT_NOTICE;

    /**
     * Verifies a SC_EDIT_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_EDIT_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_EDIT_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): SC_EDIT_NOTICE;

    /**
     * Creates a plain object from a SC_EDIT_NOTICE message. Also converts values to other types if specified.
     * @param message SC_EDIT_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_EDIT_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_EDIT_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_EDIT_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1223
    }
}

/** Properties of a CS_DEL_NOTICE. */
export interface ICS_DEL_NOTICE {

    /** CS_DEL_NOTICE id */
    id?: (string|null);
}

/** Represents a CS_DEL_NOTICE. */
export class CS_DEL_NOTICE implements ICS_DEL_NOTICE {

    /**
     * Constructs a new CS_DEL_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DEL_NOTICE);

    /** CS_DEL_NOTICE id. */
    public id: string;

    /**
     * Creates a new CS_DEL_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DEL_NOTICE instance
     */
    public static create(properties?: ICS_DEL_NOTICE): CS_DEL_NOTICE;

    /**
     * Encodes the specified CS_DEL_NOTICE message. Does not implicitly {@link CS_DEL_NOTICE.verify|verify} messages.
     * @param message CS_DEL_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DEL_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DEL_NOTICE message, length delimited. Does not implicitly {@link CS_DEL_NOTICE.verify|verify} messages.
     * @param message CS_DEL_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DEL_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DEL_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DEL_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DEL_NOTICE;

    /**
     * Decodes a CS_DEL_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DEL_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DEL_NOTICE;

    /**
     * Verifies a CS_DEL_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DEL_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DEL_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): CS_DEL_NOTICE;

    /**
     * Creates a plain object from a CS_DEL_NOTICE message. Also converts values to other types if specified.
     * @param message CS_DEL_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DEL_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DEL_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DEL_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1224
    }
}

/** Properties of a SC_DEL_NOTICE. */
export interface ISC_DEL_NOTICE {

    /** SC_DEL_NOTICE result */
    result?: (number|null);
}

/** Represents a SC_DEL_NOTICE. */
export class SC_DEL_NOTICE implements ISC_DEL_NOTICE {

    /**
     * Constructs a new SC_DEL_NOTICE.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DEL_NOTICE);

    /** SC_DEL_NOTICE result. */
    public result: number;

    /**
     * Creates a new SC_DEL_NOTICE instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DEL_NOTICE instance
     */
    public static create(properties?: ISC_DEL_NOTICE): SC_DEL_NOTICE;

    /**
     * Encodes the specified SC_DEL_NOTICE message. Does not implicitly {@link SC_DEL_NOTICE.verify|verify} messages.
     * @param message SC_DEL_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DEL_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DEL_NOTICE message, length delimited. Does not implicitly {@link SC_DEL_NOTICE.verify|verify} messages.
     * @param message SC_DEL_NOTICE message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DEL_NOTICE, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DEL_NOTICE message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DEL_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DEL_NOTICE;

    /**
     * Decodes a SC_DEL_NOTICE message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DEL_NOTICE
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DEL_NOTICE;

    /**
     * Verifies a SC_DEL_NOTICE message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DEL_NOTICE message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DEL_NOTICE
     */
    public static fromObject(object: { [k: string]: any }): SC_DEL_NOTICE;

    /**
     * Creates a plain object from a SC_DEL_NOTICE message. Also converts values to other types if specified.
     * @param message SC_DEL_NOTICE
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DEL_NOTICE, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DEL_NOTICE to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DEL_NOTICE {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1225
    }
}

/** Properties of a CS_PERSONAL_ID_BIND. */
export interface ICS_PERSONAL_ID_BIND {

    /** CS_PERSONAL_ID_BIND name */
    name?: (string|null);

    /** CS_PERSONAL_ID_BIND id */
    id?: (string|null);
}

/** Represents a CS_PERSONAL_ID_BIND. */
export class CS_PERSONAL_ID_BIND implements ICS_PERSONAL_ID_BIND {

    /**
     * Constructs a new CS_PERSONAL_ID_BIND.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PERSONAL_ID_BIND);

    /** CS_PERSONAL_ID_BIND name. */
    public name: string;

    /** CS_PERSONAL_ID_BIND id. */
    public id: string;

    /**
     * Creates a new CS_PERSONAL_ID_BIND instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PERSONAL_ID_BIND instance
     */
    public static create(properties?: ICS_PERSONAL_ID_BIND): CS_PERSONAL_ID_BIND;

    /**
     * Encodes the specified CS_PERSONAL_ID_BIND message. Does not implicitly {@link CS_PERSONAL_ID_BIND.verify|verify} messages.
     * @param message CS_PERSONAL_ID_BIND message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PERSONAL_ID_BIND, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PERSONAL_ID_BIND message, length delimited. Does not implicitly {@link CS_PERSONAL_ID_BIND.verify|verify} messages.
     * @param message CS_PERSONAL_ID_BIND message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PERSONAL_ID_BIND, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PERSONAL_ID_BIND message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PERSONAL_ID_BIND
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PERSONAL_ID_BIND;

    /**
     * Decodes a CS_PERSONAL_ID_BIND message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PERSONAL_ID_BIND
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PERSONAL_ID_BIND;

    /**
     * Verifies a CS_PERSONAL_ID_BIND message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PERSONAL_ID_BIND message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PERSONAL_ID_BIND
     */
    public static fromObject(object: { [k: string]: any }): CS_PERSONAL_ID_BIND;

    /**
     * Creates a plain object from a CS_PERSONAL_ID_BIND message. Also converts values to other types if specified.
     * @param message CS_PERSONAL_ID_BIND
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PERSONAL_ID_BIND, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PERSONAL_ID_BIND to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PERSONAL_ID_BIND {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1226
    }
}

/** Properties of a SC_PERSONAL_ID_BIND. */
export interface ISC_PERSONAL_ID_BIND {

    /** SC_PERSONAL_ID_BIND result */
    result?: (number|null);
}

/** Represents a SC_PERSONAL_ID_BIND. */
export class SC_PERSONAL_ID_BIND implements ISC_PERSONAL_ID_BIND {

    /**
     * Constructs a new SC_PERSONAL_ID_BIND.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PERSONAL_ID_BIND);

    /** SC_PERSONAL_ID_BIND result. */
    public result: number;

    /**
     * Creates a new SC_PERSONAL_ID_BIND instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PERSONAL_ID_BIND instance
     */
    public static create(properties?: ISC_PERSONAL_ID_BIND): SC_PERSONAL_ID_BIND;

    /**
     * Encodes the specified SC_PERSONAL_ID_BIND message. Does not implicitly {@link SC_PERSONAL_ID_BIND.verify|verify} messages.
     * @param message SC_PERSONAL_ID_BIND message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PERSONAL_ID_BIND, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PERSONAL_ID_BIND message, length delimited. Does not implicitly {@link SC_PERSONAL_ID_BIND.verify|verify} messages.
     * @param message SC_PERSONAL_ID_BIND message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PERSONAL_ID_BIND, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PERSONAL_ID_BIND message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PERSONAL_ID_BIND
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PERSONAL_ID_BIND;

    /**
     * Decodes a SC_PERSONAL_ID_BIND message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PERSONAL_ID_BIND
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PERSONAL_ID_BIND;

    /**
     * Verifies a SC_PERSONAL_ID_BIND message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PERSONAL_ID_BIND message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PERSONAL_ID_BIND
     */
    public static fromObject(object: { [k: string]: any }): SC_PERSONAL_ID_BIND;

    /**
     * Creates a plain object from a SC_PERSONAL_ID_BIND message. Also converts values to other types if specified.
     * @param message SC_PERSONAL_ID_BIND
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PERSONAL_ID_BIND, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PERSONAL_ID_BIND to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PERSONAL_ID_BIND {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1227
    }
}

/** Properties of a CS_SearchPlayer. */
export interface ICS_SearchPlayer {

    /** CS_SearchPlayer guid */
    guid?: (number|null);
}

/** Represents a CS_SearchPlayer. */
export class CS_SearchPlayer implements ICS_SearchPlayer {

    /**
     * Constructs a new CS_SearchPlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_SearchPlayer);

    /** CS_SearchPlayer guid. */
    public guid: number;

    /**
     * Creates a new CS_SearchPlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_SearchPlayer instance
     */
    public static create(properties?: ICS_SearchPlayer): CS_SearchPlayer;

    /**
     * Encodes the specified CS_SearchPlayer message. Does not implicitly {@link CS_SearchPlayer.verify|verify} messages.
     * @param message CS_SearchPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_SearchPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_SearchPlayer message, length delimited. Does not implicitly {@link CS_SearchPlayer.verify|verify} messages.
     * @param message CS_SearchPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_SearchPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_SearchPlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_SearchPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_SearchPlayer;

    /**
     * Decodes a CS_SearchPlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_SearchPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_SearchPlayer;

    /**
     * Verifies a CS_SearchPlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_SearchPlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_SearchPlayer
     */
    public static fromObject(object: { [k: string]: any }): CS_SearchPlayer;

    /**
     * Creates a plain object from a CS_SearchPlayer message. Also converts values to other types if specified.
     * @param message CS_SearchPlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_SearchPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_SearchPlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_SearchPlayer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1228
    }
}

/** Properties of a SC_SearchPlayer. */
export interface ISC_SearchPlayer {

    /** SC_SearchPlayer result */
    result?: (number|null);

    /** SC_SearchPlayer baseInfo */
    baseInfo?: (IPLAYER_BASE_INFO|null);
}

/** Represents a SC_SearchPlayer. */
export class SC_SearchPlayer implements ISC_SearchPlayer {

    /**
     * Constructs a new SC_SearchPlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_SearchPlayer);

    /** SC_SearchPlayer result. */
    public result: number;

    /** SC_SearchPlayer baseInfo. */
    public baseInfo?: (IPLAYER_BASE_INFO|null);

    /**
     * Creates a new SC_SearchPlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_SearchPlayer instance
     */
    public static create(properties?: ISC_SearchPlayer): SC_SearchPlayer;

    /**
     * Encodes the specified SC_SearchPlayer message. Does not implicitly {@link SC_SearchPlayer.verify|verify} messages.
     * @param message SC_SearchPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_SearchPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_SearchPlayer message, length delimited. Does not implicitly {@link SC_SearchPlayer.verify|verify} messages.
     * @param message SC_SearchPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_SearchPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_SearchPlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_SearchPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_SearchPlayer;

    /**
     * Decodes a SC_SearchPlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_SearchPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_SearchPlayer;

    /**
     * Verifies a SC_SearchPlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_SearchPlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_SearchPlayer
     */
    public static fromObject(object: { [k: string]: any }): SC_SearchPlayer;

    /**
     * Creates a plain object from a SC_SearchPlayer message. Also converts values to other types if specified.
     * @param message SC_SearchPlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_SearchPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_SearchPlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_SearchPlayer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1229
    }
}

/** Properties of a CS_PlayOnceAgain. */
export interface ICS_PlayOnceAgain {
}

/** Represents a CS_PlayOnceAgain. */
export class CS_PlayOnceAgain implements ICS_PlayOnceAgain {

    /**
     * Constructs a new CS_PlayOnceAgain.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PlayOnceAgain);

    /**
     * Creates a new CS_PlayOnceAgain instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PlayOnceAgain instance
     */
    public static create(properties?: ICS_PlayOnceAgain): CS_PlayOnceAgain;

    /**
     * Encodes the specified CS_PlayOnceAgain message. Does not implicitly {@link CS_PlayOnceAgain.verify|verify} messages.
     * @param message CS_PlayOnceAgain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PlayOnceAgain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PlayOnceAgain message, length delimited. Does not implicitly {@link CS_PlayOnceAgain.verify|verify} messages.
     * @param message CS_PlayOnceAgain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PlayOnceAgain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PlayOnceAgain message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PlayOnceAgain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PlayOnceAgain;

    /**
     * Decodes a CS_PlayOnceAgain message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PlayOnceAgain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PlayOnceAgain;

    /**
     * Verifies a CS_PlayOnceAgain message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PlayOnceAgain message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PlayOnceAgain
     */
    public static fromObject(object: { [k: string]: any }): CS_PlayOnceAgain;

    /**
     * Creates a plain object from a CS_PlayOnceAgain message. Also converts values to other types if specified.
     * @param message CS_PlayOnceAgain
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PlayOnceAgain, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PlayOnceAgain to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PlayOnceAgain {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1230
    }
}

/** Properties of a SC_PlayOnceAgain. */
export interface ISC_PlayOnceAgain {

    /** SC_PlayOnceAgain result */
    result?: (number|null);

    /** SC_PlayOnceAgain roundInfo */
    roundInfo?: (IROUND_INFO|null);
}

/** Represents a SC_PlayOnceAgain. */
export class SC_PlayOnceAgain implements ISC_PlayOnceAgain {

    /**
     * Constructs a new SC_PlayOnceAgain.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PlayOnceAgain);

    /** SC_PlayOnceAgain result. */
    public result: number;

    /** SC_PlayOnceAgain roundInfo. */
    public roundInfo?: (IROUND_INFO|null);

    /**
     * Creates a new SC_PlayOnceAgain instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PlayOnceAgain instance
     */
    public static create(properties?: ISC_PlayOnceAgain): SC_PlayOnceAgain;

    /**
     * Encodes the specified SC_PlayOnceAgain message. Does not implicitly {@link SC_PlayOnceAgain.verify|verify} messages.
     * @param message SC_PlayOnceAgain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PlayOnceAgain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PlayOnceAgain message, length delimited. Does not implicitly {@link SC_PlayOnceAgain.verify|verify} messages.
     * @param message SC_PlayOnceAgain message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PlayOnceAgain, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PlayOnceAgain message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PlayOnceAgain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PlayOnceAgain;

    /**
     * Decodes a SC_PlayOnceAgain message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PlayOnceAgain
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PlayOnceAgain;

    /**
     * Verifies a SC_PlayOnceAgain message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PlayOnceAgain message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PlayOnceAgain
     */
    public static fromObject(object: { [k: string]: any }): SC_PlayOnceAgain;

    /**
     * Creates a plain object from a SC_PlayOnceAgain message. Also converts values to other types if specified.
     * @param message SC_PlayOnceAgain
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PlayOnceAgain, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PlayOnceAgain to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PlayOnceAgain {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1231
    }
}

/** Properties of a SC_NotifyOnline. */
export interface ISC_NotifyOnline {

    /** SC_NotifyOnline chairId */
    chairId?: (number|null);

    /** SC_NotifyOnline guid */
    guid?: (number|null);

    /** SC_NotifyOnline isOnline */
    isOnline?: (boolean|null);
}

/** Represents a SC_NotifyOnline. */
export class SC_NotifyOnline implements ISC_NotifyOnline {

    /**
     * Constructs a new SC_NotifyOnline.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyOnline);

    /** SC_NotifyOnline chairId. */
    public chairId: number;

    /** SC_NotifyOnline guid. */
    public guid: number;

    /** SC_NotifyOnline isOnline. */
    public isOnline: boolean;

    /**
     * Creates a new SC_NotifyOnline instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyOnline instance
     */
    public static create(properties?: ISC_NotifyOnline): SC_NotifyOnline;

    /**
     * Encodes the specified SC_NotifyOnline message. Does not implicitly {@link SC_NotifyOnline.verify|verify} messages.
     * @param message SC_NotifyOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyOnline message, length delimited. Does not implicitly {@link SC_NotifyOnline.verify|verify} messages.
     * @param message SC_NotifyOnline message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyOnline, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyOnline message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyOnline;

    /**
     * Decodes a SC_NotifyOnline message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyOnline
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyOnline;

    /**
     * Verifies a SC_NotifyOnline message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyOnline message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyOnline
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyOnline;

    /**
     * Creates a plain object from a SC_NotifyOnline message. Also converts values to other types if specified.
     * @param message SC_NotifyOnline
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyOnline, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyOnline to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyOnline {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1232
    }
}

/** Properties of a SC_StartTimer. */
export interface ISC_StartTimer {

    /** SC_StartTimer id */
    id?: (number|null);

    /** SC_StartTimer type */
    type?: (number|null);

    /** SC_StartTimer leftTime */
    leftTime?: (number|null);

    /** SC_StartTimer totalTime */
    totalTime?: (number|null);

    /** SC_StartTimer extend */
    extend?: (string|null);
}

/** Represents a SC_StartTimer. */
export class SC_StartTimer implements ISC_StartTimer {

    /**
     * Constructs a new SC_StartTimer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_StartTimer);

    /** SC_StartTimer id. */
    public id: number;

    /** SC_StartTimer type. */
    public type: number;

    /** SC_StartTimer leftTime. */
    public leftTime: number;

    /** SC_StartTimer totalTime. */
    public totalTime: number;

    /** SC_StartTimer extend. */
    public extend: string;

    /**
     * Creates a new SC_StartTimer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_StartTimer instance
     */
    public static create(properties?: ISC_StartTimer): SC_StartTimer;

    /**
     * Encodes the specified SC_StartTimer message. Does not implicitly {@link SC_StartTimer.verify|verify} messages.
     * @param message SC_StartTimer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_StartTimer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_StartTimer message, length delimited. Does not implicitly {@link SC_StartTimer.verify|verify} messages.
     * @param message SC_StartTimer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_StartTimer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_StartTimer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_StartTimer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_StartTimer;

    /**
     * Decodes a SC_StartTimer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_StartTimer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_StartTimer;

    /**
     * Verifies a SC_StartTimer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_StartTimer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_StartTimer
     */
    public static fromObject(object: { [k: string]: any }): SC_StartTimer;

    /**
     * Creates a plain object from a SC_StartTimer message. Also converts values to other types if specified.
     * @param message SC_StartTimer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_StartTimer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_StartTimer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_StartTimer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1233
    }
}

/** Properties of a SC_CancelTimer. */
export interface ISC_CancelTimer {

    /** SC_CancelTimer id */
    id?: (number|null);
}

/** Represents a SC_CancelTimer. */
export class SC_CancelTimer implements ISC_CancelTimer {

    /**
     * Constructs a new SC_CancelTimer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CancelTimer);

    /** SC_CancelTimer id. */
    public id: number;

    /**
     * Creates a new SC_CancelTimer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CancelTimer instance
     */
    public static create(properties?: ISC_CancelTimer): SC_CancelTimer;

    /**
     * Encodes the specified SC_CancelTimer message. Does not implicitly {@link SC_CancelTimer.verify|verify} messages.
     * @param message SC_CancelTimer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CancelTimer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CancelTimer message, length delimited. Does not implicitly {@link SC_CancelTimer.verify|verify} messages.
     * @param message SC_CancelTimer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CancelTimer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CancelTimer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CancelTimer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CancelTimer;

    /**
     * Decodes a SC_CancelTimer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CancelTimer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CancelTimer;

    /**
     * Verifies a SC_CancelTimer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CancelTimer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CancelTimer
     */
    public static fromObject(object: { [k: string]: any }): SC_CancelTimer;

    /**
     * Creates a plain object from a SC_CancelTimer message. Also converts values to other types if specified.
     * @param message SC_CancelTimer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CancelTimer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CancelTimer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CancelTimer {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1234
    }
}

/** Properties of a CS_ForceKickoutPlayer. */
export interface ICS_ForceKickoutPlayer {

    /** CS_ForceKickoutPlayer guid */
    guid?: (number|null);

    /** CS_ForceKickoutPlayer clubId */
    clubId?: (number|null);
}

/** Represents a CS_ForceKickoutPlayer. */
export class CS_ForceKickoutPlayer implements ICS_ForceKickoutPlayer {

    /**
     * Constructs a new CS_ForceKickoutPlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ForceKickoutPlayer);

    /** CS_ForceKickoutPlayer guid. */
    public guid: number;

    /** CS_ForceKickoutPlayer clubId. */
    public clubId: number;

    /**
     * Creates a new CS_ForceKickoutPlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ForceKickoutPlayer instance
     */
    public static create(properties?: ICS_ForceKickoutPlayer): CS_ForceKickoutPlayer;

    /**
     * Encodes the specified CS_ForceKickoutPlayer message. Does not implicitly {@link CS_ForceKickoutPlayer.verify|verify} messages.
     * @param message CS_ForceKickoutPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ForceKickoutPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ForceKickoutPlayer message, length delimited. Does not implicitly {@link CS_ForceKickoutPlayer.verify|verify} messages.
     * @param message CS_ForceKickoutPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ForceKickoutPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ForceKickoutPlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ForceKickoutPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ForceKickoutPlayer;

    /**
     * Decodes a CS_ForceKickoutPlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ForceKickoutPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ForceKickoutPlayer;

    /**
     * Verifies a CS_ForceKickoutPlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ForceKickoutPlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ForceKickoutPlayer
     */
    public static fromObject(object: { [k: string]: any }): CS_ForceKickoutPlayer;

    /**
     * Creates a plain object from a CS_ForceKickoutPlayer message. Also converts values to other types if specified.
     * @param message CS_ForceKickoutPlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ForceKickoutPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ForceKickoutPlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ForceKickoutPlayer {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 1235
    }
}

/** Properties of a SC_ForceKickoutPlayer. */
export interface ISC_ForceKickoutPlayer {

    /** SC_ForceKickoutPlayer result */
    result?: (number|null);

    /** SC_ForceKickoutPlayer guid */
    guid?: (number|null);

    /** SC_ForceKickoutPlayer clubId */
    clubId?: (number|null);
}

/** Represents a SC_ForceKickoutPlayer. */
export class SC_ForceKickoutPlayer implements ISC_ForceKickoutPlayer {

    /**
     * Constructs a new SC_ForceKickoutPlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ForceKickoutPlayer);

    /** SC_ForceKickoutPlayer result. */
    public result: number;

    /** SC_ForceKickoutPlayer guid. */
    public guid: number;

    /** SC_ForceKickoutPlayer clubId. */
    public clubId: number;

    /**
     * Creates a new SC_ForceKickoutPlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ForceKickoutPlayer instance
     */
    public static create(properties?: ISC_ForceKickoutPlayer): SC_ForceKickoutPlayer;

    /**
     * Encodes the specified SC_ForceKickoutPlayer message. Does not implicitly {@link SC_ForceKickoutPlayer.verify|verify} messages.
     * @param message SC_ForceKickoutPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ForceKickoutPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ForceKickoutPlayer message, length delimited. Does not implicitly {@link SC_ForceKickoutPlayer.verify|verify} messages.
     * @param message SC_ForceKickoutPlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ForceKickoutPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ForceKickoutPlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ForceKickoutPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ForceKickoutPlayer;

    /**
     * Decodes a SC_ForceKickoutPlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ForceKickoutPlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ForceKickoutPlayer;

    /**
     * Verifies a SC_ForceKickoutPlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ForceKickoutPlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ForceKickoutPlayer
     */
    public static fromObject(object: { [k: string]: any }): SC_ForceKickoutPlayer;

    /**
     * Creates a plain object from a SC_ForceKickoutPlayer message. Also converts values to other types if specified.
     * @param message SC_ForceKickoutPlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ForceKickoutPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ForceKickoutPlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ForceKickoutPlayer {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 1236
    }
}

/** Properties of a C2S_VoiceInteractive. */
export interface IC2S_VoiceInteractive {

    /** C2S_VoiceInteractive content */
    content?: (string|null);

    /** C2S_VoiceInteractive time */
    time?: (number|null);

    /** C2S_VoiceInteractive receiver */
    receiver?: (number|null);
}

/** Represents a C2S_VoiceInteractive. */
export class C2S_VoiceInteractive implements IC2S_VoiceInteractive {

    /**
     * Constructs a new C2S_VoiceInteractive.
     * @param [properties] Properties to set
     */
    constructor(properties?: IC2S_VoiceInteractive);

    /** C2S_VoiceInteractive content. */
    public content: string;

    /** C2S_VoiceInteractive time. */
    public time: number;

    /** C2S_VoiceInteractive receiver. */
    public receiver: number;

    /**
     * Creates a new C2S_VoiceInteractive instance using the specified properties.
     * @param [properties] Properties to set
     * @returns C2S_VoiceInteractive instance
     */
    public static create(properties?: IC2S_VoiceInteractive): C2S_VoiceInteractive;

    /**
     * Encodes the specified C2S_VoiceInteractive message. Does not implicitly {@link C2S_VoiceInteractive.verify|verify} messages.
     * @param message C2S_VoiceInteractive message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IC2S_VoiceInteractive, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified C2S_VoiceInteractive message, length delimited. Does not implicitly {@link C2S_VoiceInteractive.verify|verify} messages.
     * @param message C2S_VoiceInteractive message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IC2S_VoiceInteractive, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a C2S_VoiceInteractive message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns C2S_VoiceInteractive
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): C2S_VoiceInteractive;

    /**
     * Decodes a C2S_VoiceInteractive message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns C2S_VoiceInteractive
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): C2S_VoiceInteractive;

    /**
     * Verifies a C2S_VoiceInteractive message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a C2S_VoiceInteractive message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns C2S_VoiceInteractive
     */
    public static fromObject(object: { [k: string]: any }): C2S_VoiceInteractive;

    /**
     * Creates a plain object from a C2S_VoiceInteractive message. Also converts values to other types if specified.
     * @param message C2S_VoiceInteractive
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: C2S_VoiceInteractive, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this C2S_VoiceInteractive to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace C2S_VoiceInteractive {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1237
    }
}

/** Properties of a S2C_VoiceInteractive. */
export interface IS2C_VoiceInteractive {

    /** S2C_VoiceInteractive result */
    result?: (number|null);

    /** S2C_VoiceInteractive content */
    content?: (string|null);

    /** S2C_VoiceInteractive time */
    time?: (number|null);

    /** S2C_VoiceInteractive sender */
    sender?: (number|null);

    /** S2C_VoiceInteractive receiver */
    receiver?: (number|null);
}

/** Represents a S2C_VoiceInteractive. */
export class S2C_VoiceInteractive implements IS2C_VoiceInteractive {

    /**
     * Constructs a new S2C_VoiceInteractive.
     * @param [properties] Properties to set
     */
    constructor(properties?: IS2C_VoiceInteractive);

    /** S2C_VoiceInteractive result. */
    public result: number;

    /** S2C_VoiceInteractive content. */
    public content: string;

    /** S2C_VoiceInteractive time. */
    public time: number;

    /** S2C_VoiceInteractive sender. */
    public sender: number;

    /** S2C_VoiceInteractive receiver. */
    public receiver: number;

    /**
     * Creates a new S2C_VoiceInteractive instance using the specified properties.
     * @param [properties] Properties to set
     * @returns S2C_VoiceInteractive instance
     */
    public static create(properties?: IS2C_VoiceInteractive): S2C_VoiceInteractive;

    /**
     * Encodes the specified S2C_VoiceInteractive message. Does not implicitly {@link S2C_VoiceInteractive.verify|verify} messages.
     * @param message S2C_VoiceInteractive message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IS2C_VoiceInteractive, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified S2C_VoiceInteractive message, length delimited. Does not implicitly {@link S2C_VoiceInteractive.verify|verify} messages.
     * @param message S2C_VoiceInteractive message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IS2C_VoiceInteractive, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a S2C_VoiceInteractive message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns S2C_VoiceInteractive
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): S2C_VoiceInteractive;

    /**
     * Decodes a S2C_VoiceInteractive message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns S2C_VoiceInteractive
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): S2C_VoiceInteractive;

    /**
     * Verifies a S2C_VoiceInteractive message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a S2C_VoiceInteractive message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns S2C_VoiceInteractive
     */
    public static fromObject(object: { [k: string]: any }): S2C_VoiceInteractive;

    /**
     * Creates a plain object from a S2C_VoiceInteractive message. Also converts values to other types if specified.
     * @param message S2C_VoiceInteractive
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: S2C_VoiceInteractive, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this S2C_VoiceInteractive to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace S2C_VoiceInteractive {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1238
    }
}

/** Properties of a SC_NotifyNotice. */
export interface ISC_NotifyNotice {

    /** SC_NotifyNotice op */
    op?: (number|null);

    /** SC_NotifyNotice notice */
    notice?: (INOTICE|null);
}

/** Represents a SC_NotifyNotice. */
export class SC_NotifyNotice implements ISC_NotifyNotice {

    /**
     * Constructs a new SC_NotifyNotice.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_NotifyNotice);

    /** SC_NotifyNotice op. */
    public op: number;

    /** SC_NotifyNotice notice. */
    public notice?: (INOTICE|null);

    /**
     * Creates a new SC_NotifyNotice instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_NotifyNotice instance
     */
    public static create(properties?: ISC_NotifyNotice): SC_NotifyNotice;

    /**
     * Encodes the specified SC_NotifyNotice message. Does not implicitly {@link SC_NotifyNotice.verify|verify} messages.
     * @param message SC_NotifyNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_NotifyNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_NotifyNotice message, length delimited. Does not implicitly {@link SC_NotifyNotice.verify|verify} messages.
     * @param message SC_NotifyNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_NotifyNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_NotifyNotice message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_NotifyNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_NotifyNotice;

    /**
     * Decodes a SC_NotifyNotice message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_NotifyNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_NotifyNotice;

    /**
     * Verifies a SC_NotifyNotice message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_NotifyNotice message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_NotifyNotice
     */
    public static fromObject(object: { [k: string]: any }): SC_NotifyNotice;

    /**
     * Creates a plain object from a SC_NotifyNotice message. Also converts values to other types if specified.
     * @param message SC_NotifyNotice
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_NotifyNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_NotifyNotice to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_NotifyNotice {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 1239
    }
}

/** Properties of a CS_ReconnectJoinRoom. */
export interface ICS_ReconnectJoinRoom {
}

/** Represents a CS_ReconnectJoinRoom. */
export class CS_ReconnectJoinRoom implements ICS_ReconnectJoinRoom {

    /**
     * Constructs a new CS_ReconnectJoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ReconnectJoinRoom);

    /**
     * Creates a new CS_ReconnectJoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ReconnectJoinRoom instance
     */
    public static create(properties?: ICS_ReconnectJoinRoom): CS_ReconnectJoinRoom;

    /**
     * Encodes the specified CS_ReconnectJoinRoom message. Does not implicitly {@link CS_ReconnectJoinRoom.verify|verify} messages.
     * @param message CS_ReconnectJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ReconnectJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ReconnectJoinRoom message, length delimited. Does not implicitly {@link CS_ReconnectJoinRoom.verify|verify} messages.
     * @param message CS_ReconnectJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ReconnectJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ReconnectJoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ReconnectJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ReconnectJoinRoom;

    /**
     * Decodes a CS_ReconnectJoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ReconnectJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ReconnectJoinRoom;

    /**
     * Verifies a CS_ReconnectJoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ReconnectJoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ReconnectJoinRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_ReconnectJoinRoom;

    /**
     * Creates a plain object from a CS_ReconnectJoinRoom message. Also converts values to other types if specified.
     * @param message CS_ReconnectJoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ReconnectJoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ReconnectJoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ReconnectJoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1240
    }
}

/** Properties of a SC_ReconnectJoinRoom. */
export interface ISC_ReconnectJoinRoom {

    /** SC_ReconnectJoinRoom result */
    result?: (number|null);

    /** SC_ReconnectJoinRoom info */
    info?: (ITABLE_INFO|null);

    /** SC_ReconnectJoinRoom seatList */
    seatList?: (ISEAT_INFO[]|null);

    /** SC_ReconnectJoinRoom roundInfo */
    roundInfo?: (IROUND_INFO|null);
}

/** Represents a SC_ReconnectJoinRoom. */
export class SC_ReconnectJoinRoom implements ISC_ReconnectJoinRoom {

    /**
     * Constructs a new SC_ReconnectJoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ReconnectJoinRoom);

    /** SC_ReconnectJoinRoom result. */
    public result: number;

    /** SC_ReconnectJoinRoom info. */
    public info?: (ITABLE_INFO|null);

    /** SC_ReconnectJoinRoom seatList. */
    public seatList: ISEAT_INFO[];

    /** SC_ReconnectJoinRoom roundInfo. */
    public roundInfo?: (IROUND_INFO|null);

    /**
     * Creates a new SC_ReconnectJoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ReconnectJoinRoom instance
     */
    public static create(properties?: ISC_ReconnectJoinRoom): SC_ReconnectJoinRoom;

    /**
     * Encodes the specified SC_ReconnectJoinRoom message. Does not implicitly {@link SC_ReconnectJoinRoom.verify|verify} messages.
     * @param message SC_ReconnectJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ReconnectJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ReconnectJoinRoom message, length delimited. Does not implicitly {@link SC_ReconnectJoinRoom.verify|verify} messages.
     * @param message SC_ReconnectJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ReconnectJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ReconnectJoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ReconnectJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ReconnectJoinRoom;

    /**
     * Decodes a SC_ReconnectJoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ReconnectJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ReconnectJoinRoom;

    /**
     * Verifies a SC_ReconnectJoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ReconnectJoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ReconnectJoinRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_ReconnectJoinRoom;

    /**
     * Creates a plain object from a SC_ReconnectJoinRoom message. Also converts values to other types if specified.
     * @param message SC_ReconnectJoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ReconnectJoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ReconnectJoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ReconnectJoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1241
    }
}

/** Properties of a SC_Alert. */
export interface ISC_Alert {

    /** SC_Alert code */
    code?: (number|null);

    /** SC_Alert jsonparam */
    jsonparam?: (string|null);
}

/** Represents a SC_Alert. */
export class SC_Alert implements ISC_Alert {

    /**
     * Constructs a new SC_Alert.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Alert);

    /** SC_Alert code. */
    public code: number;

    /** SC_Alert jsonparam. */
    public jsonparam: string;

    /**
     * Creates a new SC_Alert instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Alert instance
     */
    public static create(properties?: ISC_Alert): SC_Alert;

    /**
     * Encodes the specified SC_Alert message. Does not implicitly {@link SC_Alert.verify|verify} messages.
     * @param message SC_Alert message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Alert, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Alert message, length delimited. Does not implicitly {@link SC_Alert.verify|verify} messages.
     * @param message SC_Alert message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Alert, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Alert message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Alert
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Alert;

    /**
     * Decodes a SC_Alert message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Alert
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Alert;

    /**
     * Verifies a SC_Alert message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Alert message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Alert
     */
    public static fromObject(object: { [k: string]: any }): SC_Alert;

    /**
     * Creates a plain object from a SC_Alert message. Also converts values to other types if specified.
     * @param message SC_Alert
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Alert, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Alert to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Alert {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1242
    }
}

/** Properties of a CS_FastJoinRoom. */
export interface ICS_FastJoinRoom {

    /** CS_FastJoinRoom clubId */
    clubId?: (number|null);

    /** CS_FastJoinRoom gameId */
    gameId?: (number|null);

    /** CS_FastJoinRoom templateId */
    templateId?: (number|null);
}

/** Represents a CS_FastJoinRoom. */
export class CS_FastJoinRoom implements ICS_FastJoinRoom {

    /**
     * Constructs a new CS_FastJoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_FastJoinRoom);

    /** CS_FastJoinRoom clubId. */
    public clubId: number;

    /** CS_FastJoinRoom gameId. */
    public gameId: number;

    /** CS_FastJoinRoom templateId. */
    public templateId: number;

    /**
     * Creates a new CS_FastJoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_FastJoinRoom instance
     */
    public static create(properties?: ICS_FastJoinRoom): CS_FastJoinRoom;

    /**
     * Encodes the specified CS_FastJoinRoom message. Does not implicitly {@link CS_FastJoinRoom.verify|verify} messages.
     * @param message CS_FastJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_FastJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_FastJoinRoom message, length delimited. Does not implicitly {@link CS_FastJoinRoom.verify|verify} messages.
     * @param message CS_FastJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_FastJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_FastJoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_FastJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_FastJoinRoom;

    /**
     * Decodes a CS_FastJoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_FastJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_FastJoinRoom;

    /**
     * Verifies a CS_FastJoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_FastJoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_FastJoinRoom
     */
    public static fromObject(object: { [k: string]: any }): CS_FastJoinRoom;

    /**
     * Creates a plain object from a CS_FastJoinRoom message. Also converts values to other types if specified.
     * @param message CS_FastJoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_FastJoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_FastJoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_FastJoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1243
    }
}

/** Properties of a SC_FastJoinRoom. */
export interface ISC_FastJoinRoom {

    /** SC_FastJoinRoom result */
    result?: (number|null);

    /** SC_FastJoinRoom info */
    info?: (ITABLE_INFO|null);

    /** SC_FastJoinRoom seatList */
    seatList?: (ISEAT_INFO[]|null);

    /** SC_FastJoinRoom roundInfo */
    roundInfo?: (IROUND_INFO|null);
}

/** Represents a SC_FastJoinRoom. */
export class SC_FastJoinRoom implements ISC_FastJoinRoom {

    /**
     * Constructs a new SC_FastJoinRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_FastJoinRoom);

    /** SC_FastJoinRoom result. */
    public result: number;

    /** SC_FastJoinRoom info. */
    public info?: (ITABLE_INFO|null);

    /** SC_FastJoinRoom seatList. */
    public seatList: ISEAT_INFO[];

    /** SC_FastJoinRoom roundInfo. */
    public roundInfo?: (IROUND_INFO|null);

    /**
     * Creates a new SC_FastJoinRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_FastJoinRoom instance
     */
    public static create(properties?: ISC_FastJoinRoom): SC_FastJoinRoom;

    /**
     * Encodes the specified SC_FastJoinRoom message. Does not implicitly {@link SC_FastJoinRoom.verify|verify} messages.
     * @param message SC_FastJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_FastJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_FastJoinRoom message, length delimited. Does not implicitly {@link SC_FastJoinRoom.verify|verify} messages.
     * @param message SC_FastJoinRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_FastJoinRoom, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_FastJoinRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_FastJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_FastJoinRoom;

    /**
     * Decodes a SC_FastJoinRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_FastJoinRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_FastJoinRoom;

    /**
     * Verifies a SC_FastJoinRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_FastJoinRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_FastJoinRoom
     */
    public static fromObject(object: { [k: string]: any }): SC_FastJoinRoom;

    /**
     * Creates a plain object from a SC_FastJoinRoom message. Also converts values to other types if specified.
     * @param message SC_FastJoinRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_FastJoinRoom, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_FastJoinRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_FastJoinRoom {

    /** MsgID enum. */
    enum MsgID {
        NONE = 0,
        ID = 1244
    }
}

/** Properties of a GameClientRoomListCfg. */
export interface IGameClientRoomListCfg {

    /** GameClientRoomListCfg gameId */
    gameId?: (number|null);

    /** GameClientRoomListCfg secondGameType */
    secondGameType?: (number|null);

    /** GameClientRoomListCfg firstGameType */
    firstGameType?: (number|null);

    /** GameClientRoomListCfg gameName */
    gameName?: (string|null);

    /** GameClientRoomListCfg tableCount */
    tableCount?: (number|null);

    /** GameClientRoomListCfg moneyLimit */
    moneyLimit?: (number|null);

    /** GameClientRoomListCfg cellMoney */
    cellMoney?: (number|null);

    /** GameClientRoomListCfg tax */
    tax?: (number|null);

    /** GameClientRoomListCfg gameSwitchIsOpen */
    gameSwitchIsOpen?: (number|null);

    /** GameClientRoomListCfg platformId */
    platformId?: (string|null);

    /** GameClientRoomListCfg title */
    title?: (string|null);
}

/** Represents a GameClientRoomListCfg. */
export class GameClientRoomListCfg implements IGameClientRoomListCfg {

    /**
     * Constructs a new GameClientRoomListCfg.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGameClientRoomListCfg);

    /** GameClientRoomListCfg gameId. */
    public gameId: number;

    /** GameClientRoomListCfg secondGameType. */
    public secondGameType: number;

    /** GameClientRoomListCfg firstGameType. */
    public firstGameType: number;

    /** GameClientRoomListCfg gameName. */
    public gameName: string;

    /** GameClientRoomListCfg tableCount. */
    public tableCount: number;

    /** GameClientRoomListCfg moneyLimit. */
    public moneyLimit: number;

    /** GameClientRoomListCfg cellMoney. */
    public cellMoney: number;

    /** GameClientRoomListCfg tax. */
    public tax: number;

    /** GameClientRoomListCfg gameSwitchIsOpen. */
    public gameSwitchIsOpen: number;

    /** GameClientRoomListCfg platformId. */
    public platformId: string;

    /** GameClientRoomListCfg title. */
    public title: string;

    /**
     * Creates a new GameClientRoomListCfg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GameClientRoomListCfg instance
     */
    public static create(properties?: IGameClientRoomListCfg): GameClientRoomListCfg;

    /**
     * Encodes the specified GameClientRoomListCfg message. Does not implicitly {@link GameClientRoomListCfg.verify|verify} messages.
     * @param message GameClientRoomListCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGameClientRoomListCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GameClientRoomListCfg message, length delimited. Does not implicitly {@link GameClientRoomListCfg.verify|verify} messages.
     * @param message GameClientRoomListCfg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGameClientRoomListCfg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GameClientRoomListCfg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GameClientRoomListCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GameClientRoomListCfg;

    /**
     * Decodes a GameClientRoomListCfg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GameClientRoomListCfg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GameClientRoomListCfg;

    /**
     * Verifies a GameClientRoomListCfg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GameClientRoomListCfg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GameClientRoomListCfg
     */
    public static fromObject(object: { [k: string]: any }): GameClientRoomListCfg;

    /**
     * Creates a plain object from a GameClientRoomListCfg message. Also converts values to other types if specified.
     * @param message GameClientRoomListCfg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GameClientRoomListCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GameClientRoomListCfg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlayerBaseInfo. */
export interface IPlayerBaseInfo {

    /** PlayerBaseInfo bank */
    bank?: (number|Long|null);

    /** PlayerBaseInfo loginAwardDay */
    loginAwardDay?: (number|null);

    /** PlayerBaseInfo loginAwardReceiveDay */
    loginAwardReceiveDay?: (number|null);

    /** PlayerBaseInfo onlineAwardTime */
    onlineAwardTime?: (number|null);

    /** PlayerBaseInfo onlineAwardNum */
    onlineAwardNum?: (number|null);

    /** PlayerBaseInfo reliefPaymentCount */
    reliefPaymentCount?: (number|null);

    /** PlayerBaseInfo level */
    level?: (number|null);

    /** PlayerBaseInfo money */
    money?: (IMONEY_INFO[]|null);

    /** PlayerBaseInfo headerIcon */
    headerIcon?: (number|null);

    /** PlayerBaseInfo slotmaAddition */
    slotmaAddition?: (number|null);

    /** PlayerBaseInfo icon */
    icon?: (string|null);

    /** PlayerBaseInfo status */
    status?: (number|null);

    /** PlayerBaseInfo phone */
    phone?: (string|null);

    /** PlayerBaseInfo sex */
    sex?: (number|null);

    /** PlayerBaseInfo type */
    type?: (number|null);

    /** PlayerBaseInfo nickname */
    nickname?: (string|null);

    /** PlayerBaseInfo role */
    role?: (number|null);

    /** PlayerBaseInfo isBindPersonalId */
    isBindPersonalId?: (boolean|null);
}

/** Represents a PlayerBaseInfo. */
export class PlayerBaseInfo implements IPlayerBaseInfo {

    /**
     * Constructs a new PlayerBaseInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlayerBaseInfo);

    /** PlayerBaseInfo bank. */
    public bank: (number|Long);

    /** PlayerBaseInfo loginAwardDay. */
    public loginAwardDay: number;

    /** PlayerBaseInfo loginAwardReceiveDay. */
    public loginAwardReceiveDay: number;

    /** PlayerBaseInfo onlineAwardTime. */
    public onlineAwardTime: number;

    /** PlayerBaseInfo onlineAwardNum. */
    public onlineAwardNum: number;

    /** PlayerBaseInfo reliefPaymentCount. */
    public reliefPaymentCount: number;

    /** PlayerBaseInfo level. */
    public level: number;

    /** PlayerBaseInfo money. */
    public money: IMONEY_INFO[];

    /** PlayerBaseInfo headerIcon. */
    public headerIcon: number;

    /** PlayerBaseInfo slotmaAddition. */
    public slotmaAddition: number;

    /** PlayerBaseInfo icon. */
    public icon: string;

    /** PlayerBaseInfo status. */
    public status: number;

    /** PlayerBaseInfo phone. */
    public phone: string;

    /** PlayerBaseInfo sex. */
    public sex: number;

    /** PlayerBaseInfo type. */
    public type: number;

    /** PlayerBaseInfo nickname. */
    public nickname: string;

    /** PlayerBaseInfo role. */
    public role: number;

    /** PlayerBaseInfo isBindPersonalId. */
    public isBindPersonalId: boolean;

    /**
     * Creates a new PlayerBaseInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlayerBaseInfo instance
     */
    public static create(properties?: IPlayerBaseInfo): PlayerBaseInfo;

    /**
     * Encodes the specified PlayerBaseInfo message. Does not implicitly {@link PlayerBaseInfo.verify|verify} messages.
     * @param message PlayerBaseInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlayerBaseInfo message, length delimited. Does not implicitly {@link PlayerBaseInfo.verify|verify} messages.
     * @param message PlayerBaseInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlayerBaseInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlayerBaseInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlayerBaseInfo;

    /**
     * Decodes a PlayerBaseInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlayerBaseInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlayerBaseInfo;

    /**
     * Verifies a PlayerBaseInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlayerBaseInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlayerBaseInfo
     */
    public static fromObject(object: { [k: string]: any }): PlayerBaseInfo;

    /**
     * Creates a plain object from a PlayerBaseInfo message. Also converts values to other types if specified.
     * @param message PlayerBaseInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlayerBaseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlayerBaseInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlayerVisualInfo. */
export interface IPlayerVisualInfo {

    /** PlayerVisualInfo chairId */
    chairId?: (number|null);

    /** PlayerVisualInfo guid */
    guid?: (number|null);

    /** PlayerVisualInfo account */
    account?: (string|null);

    /** PlayerVisualInfo nickname */
    nickname?: (string|null);

    /** PlayerVisualInfo level */
    level?: (number|null);

    /** PlayerVisualInfo money */
    money?: (IMONEY_INFO[]|null);

    /** PlayerVisualInfo headerIcon */
    headerIcon?: (number|null);

    /** PlayerVisualInfo ipArea */
    ipArea?: (string|null);

    /** PlayerVisualInfo sex */
    sex?: (number|null);

    /** PlayerVisualInfo icon */
    icon?: (string|null);
}

/** Represents a PlayerVisualInfo. */
export class PlayerVisualInfo implements IPlayerVisualInfo {

    /**
     * Constructs a new PlayerVisualInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlayerVisualInfo);

    /** PlayerVisualInfo chairId. */
    public chairId: number;

    /** PlayerVisualInfo guid. */
    public guid: number;

    /** PlayerVisualInfo account. */
    public account: string;

    /** PlayerVisualInfo nickname. */
    public nickname: string;

    /** PlayerVisualInfo level. */
    public level: number;

    /** PlayerVisualInfo money. */
    public money: IMONEY_INFO[];

    /** PlayerVisualInfo headerIcon. */
    public headerIcon: number;

    /** PlayerVisualInfo ipArea. */
    public ipArea: string;

    /** PlayerVisualInfo sex. */
    public sex: number;

    /** PlayerVisualInfo icon. */
    public icon: string;

    /**
     * Creates a new PlayerVisualInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlayerVisualInfo instance
     */
    public static create(properties?: IPlayerVisualInfo): PlayerVisualInfo;

    /**
     * Encodes the specified PlayerVisualInfo message. Does not implicitly {@link PlayerVisualInfo.verify|verify} messages.
     * @param message PlayerVisualInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlayerVisualInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlayerVisualInfo message, length delimited. Does not implicitly {@link PlayerVisualInfo.verify|verify} messages.
     * @param message PlayerVisualInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlayerVisualInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlayerVisualInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlayerVisualInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlayerVisualInfo;

    /**
     * Decodes a PlayerVisualInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlayerVisualInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlayerVisualInfo;

    /**
     * Verifies a PlayerVisualInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlayerVisualInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlayerVisualInfo
     */
    public static fromObject(object: { [k: string]: any }): PlayerVisualInfo;

    /**
     * Creates a plain object from a PlayerVisualInfo message. Also converts values to other types if specified.
     * @param message PlayerVisualInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlayerVisualInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlayerVisualInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an ItemInfo. */
export interface IItemInfo {

    /** ItemInfo id */
    id?: (number|null);

    /** ItemInfo num */
    num?: (number|null);
}

/** Represents an ItemInfo. */
export class ItemInfo implements IItemInfo {

    /**
     * Constructs a new ItemInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IItemInfo);

    /** ItemInfo id. */
    public id: number;

    /** ItemInfo num. */
    public num: number;

    /**
     * Creates a new ItemInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ItemInfo instance
     */
    public static create(properties?: IItemInfo): ItemInfo;

    /**
     * Encodes the specified ItemInfo message. Does not implicitly {@link ItemInfo.verify|verify} messages.
     * @param message ItemInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IItemInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ItemInfo message, length delimited. Does not implicitly {@link ItemInfo.verify|verify} messages.
     * @param message ItemInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IItemInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ItemInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ItemInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ItemInfo;

    /**
     * Decodes an ItemInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ItemInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ItemInfo;

    /**
     * Verifies an ItemInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ItemInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ItemInfo
     */
    public static fromObject(object: { [k: string]: any }): ItemInfo;

    /**
     * Creates a plain object from an ItemInfo message. Also converts values to other types if specified.
     * @param message ItemInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ItemInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ItemInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MsgDataInfo. */
export interface IMsgDataInfo {

    /** MsgDataInfo id */
    id?: (number|null);

    /** MsgDataInfo startTime */
    startTime?: (number|null);

    /** MsgDataInfo endTime */
    endTime?: (number|null);

    /** MsgDataInfo msgType */
    msgType?: (number|null);

    /** MsgDataInfo isRead */
    isRead?: (number|null);

    /** MsgDataInfo content */
    content?: (string|null);
}

/** Represents a MsgDataInfo. */
export class MsgDataInfo implements IMsgDataInfo {

    /**
     * Constructs a new MsgDataInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMsgDataInfo);

    /** MsgDataInfo id. */
    public id: number;

    /** MsgDataInfo startTime. */
    public startTime: number;

    /** MsgDataInfo endTime. */
    public endTime: number;

    /** MsgDataInfo msgType. */
    public msgType: number;

    /** MsgDataInfo isRead. */
    public isRead: number;

    /** MsgDataInfo content. */
    public content: string;

    /**
     * Creates a new MsgDataInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MsgDataInfo instance
     */
    public static create(properties?: IMsgDataInfo): MsgDataInfo;

    /**
     * Encodes the specified MsgDataInfo message. Does not implicitly {@link MsgDataInfo.verify|verify} messages.
     * @param message MsgDataInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMsgDataInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MsgDataInfo message, length delimited. Does not implicitly {@link MsgDataInfo.verify|verify} messages.
     * @param message MsgDataInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMsgDataInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MsgDataInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MsgDataInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MsgDataInfo;

    /**
     * Decodes a MsgDataInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MsgDataInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MsgDataInfo;

    /**
     * Verifies a MsgDataInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MsgDataInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MsgDataInfo
     */
    public static fromObject(object: { [k: string]: any }): MsgDataInfo;

    /**
     * Creates a plain object from a MsgDataInfo message. Also converts values to other types if specified.
     * @param message MsgDataInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MsgDataInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MsgDataInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an ItemBagInfo. */
export interface IItemBagInfo {

    /** ItemBagInfo items */
    items?: (IItemInfo[]|null);
}

/** Represents an ItemBagInfo. */
export class ItemBagInfo implements IItemBagInfo {

    /**
     * Constructs a new ItemBagInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IItemBagInfo);

    /** ItemBagInfo items. */
    public items: IItemInfo[];

    /**
     * Creates a new ItemBagInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ItemBagInfo instance
     */
    public static create(properties?: IItemBagInfo): ItemBagInfo;

    /**
     * Encodes the specified ItemBagInfo message. Does not implicitly {@link ItemBagInfo.verify|verify} messages.
     * @param message ItemBagInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IItemBagInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ItemBagInfo message, length delimited. Does not implicitly {@link ItemBagInfo.verify|verify} messages.
     * @param message ItemBagInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IItemBagInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ItemBagInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ItemBagInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ItemBagInfo;

    /**
     * Decodes an ItemBagInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ItemBagInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ItemBagInfo;

    /**
     * Verifies an ItemBagInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ItemBagInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ItemBagInfo
     */
    public static fromObject(object: { [k: string]: any }): ItemBagInfo;

    /**
     * Creates a plain object from an ItemBagInfo message. Also converts values to other types if specified.
     * @param message ItemBagInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ItemBagInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ItemBagInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MailInfo. */
export interface IMailInfo {

    /** MailInfo id */
    id?: (string|null);

    /** MailInfo expiration */
    expiration?: (number|null);

    /** MailInfo createTime */
    createTime?: (number|null);

    /** MailInfo receiver */
    receiver?: (IPLAYER_BASE_INFO|null);

    /** MailInfo sender */
    sender?: (IPLAYER_BASE_INFO|null);

    /** MailInfo title */
    title?: (string|null);

    /** MailInfo content */
    content?: (string|null);

    /** MailInfo status */
    status?: (number|null);
}

/** Represents a MailInfo. */
export class MailInfo implements IMailInfo {

    /**
     * Constructs a new MailInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMailInfo);

    /** MailInfo id. */
    public id: string;

    /** MailInfo expiration. */
    public expiration: number;

    /** MailInfo createTime. */
    public createTime: number;

    /** MailInfo receiver. */
    public receiver?: (IPLAYER_BASE_INFO|null);

    /** MailInfo sender. */
    public sender?: (IPLAYER_BASE_INFO|null);

    /** MailInfo title. */
    public title: string;

    /** MailInfo content. */
    public content: string;

    /** MailInfo status. */
    public status: number;

    /**
     * Creates a new MailInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MailInfo instance
     */
    public static create(properties?: IMailInfo): MailInfo;

    /**
     * Encodes the specified MailInfo message. Does not implicitly {@link MailInfo.verify|verify} messages.
     * @param message MailInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMailInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MailInfo message, length delimited. Does not implicitly {@link MailInfo.verify|verify} messages.
     * @param message MailInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMailInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MailInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MailInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MailInfo;

    /**
     * Decodes a MailInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MailInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MailInfo;

    /**
     * Verifies a MailInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MailInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MailInfo
     */
    public static fromObject(object: { [k: string]: any }): MailInfo;

    /**
     * Creates a plain object from a MailInfo message. Also converts values to other types if specified.
     * @param message MailInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MailInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MailInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BankStatement. */
export interface IBankStatement {

    /** BankStatement serial */
    serial?: (number|Long|null);

    /** BankStatement guid */
    guid?: (number|null);

    /** BankStatement time */
    time?: (number|null);

    /** BankStatement opt */
    opt?: (number|null);

    /** BankStatement target */
    target?: (string|null);

    /** BankStatement money */
    money?: (number|Long|null);

    /** BankStatement bankBalance */
    bankBalance?: (number|Long|null);
}

/** Represents a BankStatement. */
export class BankStatement implements IBankStatement {

    /**
     * Constructs a new BankStatement.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBankStatement);

    /** BankStatement serial. */
    public serial: (number|Long);

    /** BankStatement guid. */
    public guid: number;

    /** BankStatement time. */
    public time: number;

    /** BankStatement opt. */
    public opt: number;

    /** BankStatement target. */
    public target: string;

    /** BankStatement money. */
    public money: (number|Long);

    /** BankStatement bankBalance. */
    public bankBalance: (number|Long);

    /**
     * Creates a new BankStatement instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BankStatement instance
     */
    public static create(properties?: IBankStatement): BankStatement;

    /**
     * Encodes the specified BankStatement message. Does not implicitly {@link BankStatement.verify|verify} messages.
     * @param message BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BankStatement message, length delimited. Does not implicitly {@link BankStatement.verify|verify} messages.
     * @param message BankStatement message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBankStatement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BankStatement message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BankStatement;

    /**
     * Decodes a BankStatement message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BankStatement
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BankStatement;

    /**
     * Verifies a BankStatement message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BankStatement message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BankStatement
     */
    public static fromObject(object: { [k: string]: any }): BankStatement;

    /**
     * Creates a plain object from a BankStatement message. Also converts values to other types if specified.
     * @param message BankStatement
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BankStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BankStatement to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RankItem. */
export interface IRankItem {

    /** RankItem rank */
    rank?: (number|null);

    /** RankItem guid */
    guid?: (number|null);

    /** RankItem nickname */
    nickname?: (string|null);

    /** RankItem money */
    money?: (number|Long|null);
}

/** Represents a RankItem. */
export class RankItem implements IRankItem {

    /**
     * Constructs a new RankItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRankItem);

    /** RankItem rank. */
    public rank: number;

    /** RankItem guid. */
    public guid: number;

    /** RankItem nickname. */
    public nickname: string;

    /** RankItem money. */
    public money: (number|Long);

    /**
     * Creates a new RankItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RankItem instance
     */
    public static create(properties?: IRankItem): RankItem;

    /**
     * Encodes the specified RankItem message. Does not implicitly {@link RankItem.verify|verify} messages.
     * @param message RankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RankItem message, length delimited. Does not implicitly {@link RankItem.verify|verify} messages.
     * @param message RankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RankItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RankItem;

    /**
     * Decodes a RankItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RankItem;

    /**
     * Verifies a RankItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RankItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RankItem
     */
    public static fromObject(object: { [k: string]: any }): RankItem;

    /**
     * Creates a plain object from a RankItem message. Also converts values to other types if specified.
     * @param message RankItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RankItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RankList. */
export interface IRankList {

    /** RankList pbRankList */
    pbRankList?: (IRankItem[]|null);
}

/** Represents a RankList. */
export class RankList implements IRankList {

    /**
     * Constructs a new RankList.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRankList);

    /** RankList pbRankList. */
    public pbRankList: IRankItem[];

    /**
     * Creates a new RankList instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RankList instance
     */
    public static create(properties?: IRankList): RankList;

    /**
     * Encodes the specified RankList message. Does not implicitly {@link RankList.verify|verify} messages.
     * @param message RankList message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRankList, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RankList message, length delimited. Does not implicitly {@link RankList.verify|verify} messages.
     * @param message RankList message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRankList, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RankList message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RankList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RankList;

    /**
     * Decodes a RankList message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RankList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RankList;

    /**
     * Verifies a RankList message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RankList message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RankList
     */
    public static fromObject(object: { [k: string]: any }): RankList;

    /**
     * Creates a plain object from a RankList message. Also converts values to other types if specified.
     * @param message RankList
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RankList to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidInfo. */
export interface IAndroidInfo {

    /** AndroidInfo guid */
    guid?: (number|null);

    /** AndroidInfo account */
    account?: (string|null);

    /** AndroidInfo nickname */
    nickname?: (string|null);

    /** AndroidInfo gameId */
    gameId?: (number|null);

    /** AndroidInfo money */
    money?: (number|Long|null);
}

/** Represents an AndroidInfo. */
export class AndroidInfo implements IAndroidInfo {

    /**
     * Constructs a new AndroidInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidInfo);

    /** AndroidInfo guid. */
    public guid: number;

    /** AndroidInfo account. */
    public account: string;

    /** AndroidInfo nickname. */
    public nickname: string;

    /** AndroidInfo gameId. */
    public gameId: number;

    /** AndroidInfo money. */
    public money: (number|Long);

    /**
     * Creates a new AndroidInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidInfo instance
     */
    public static create(properties?: IAndroidInfo): AndroidInfo;

    /**
     * Encodes the specified AndroidInfo message. Does not implicitly {@link AndroidInfo.verify|verify} messages.
     * @param message AndroidInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidInfo message, length delimited. Does not implicitly {@link AndroidInfo.verify|verify} messages.
     * @param message AndroidInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidInfo;

    /**
     * Decodes an AndroidInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidInfo;

    /**
     * Verifies an AndroidInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidInfo
     */
    public static fromObject(object: { [k: string]: any }): AndroidInfo;

    /**
     * Creates a plain object from an AndroidInfo message. Also converts values to other types if specified.
     * @param message AndroidInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CashFalse. */
export interface ICashFalse {

    /** CashFalse guid */
    guid?: (number|null);

    /** CashFalse orderId */
    orderId?: (number|null);

    /** CashFalse coins */
    coins?: (number|Long|null);

    /** CashFalse status */
    status?: (number|null);

    /** CashFalse statusC */
    statusC?: (number|null);
}

/** Represents a CashFalse. */
export class CashFalse implements ICashFalse {

    /**
     * Constructs a new CashFalse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICashFalse);

    /** CashFalse guid. */
    public guid: number;

    /** CashFalse orderId. */
    public orderId: number;

    /** CashFalse coins. */
    public coins: (number|Long);

    /** CashFalse status. */
    public status: number;

    /** CashFalse statusC. */
    public statusC: number;

    /**
     * Creates a new CashFalse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CashFalse instance
     */
    public static create(properties?: ICashFalse): CashFalse;

    /**
     * Encodes the specified CashFalse message. Does not implicitly {@link CashFalse.verify|verify} messages.
     * @param message CashFalse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICashFalse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CashFalse message, length delimited. Does not implicitly {@link CashFalse.verify|verify} messages.
     * @param message CashFalse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICashFalse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CashFalse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CashFalse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CashFalse;

    /**
     * Decodes a CashFalse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CashFalse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CashFalse;

    /**
     * Verifies a CashFalse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CashFalse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CashFalse
     */
    public static fromObject(object: { [k: string]: any }): CashFalse;

    /**
     * Creates a plain object from a CashFalse message. Also converts values to other types if specified.
     * @param message CashFalse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CashFalse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CashFalse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CashMoneyType. */
export interface ICashMoneyType {

    /** CashMoneyType cashType */
    cashType?: (number|null);

    /** CashMoneyType money */
    money?: (number|null);

    /** CashMoneyType createdAt */
    createdAt?: (string|null);

    /** CashMoneyType status */
    status?: (number|null);

    /** CashMoneyType agentGuid */
    agentGuid?: (number|null);

    /** CashMoneyType exchangeCode */
    exchangeCode?: (string|null);
}

/** Represents a CashMoneyType. */
export class CashMoneyType implements ICashMoneyType {

    /**
     * Constructs a new CashMoneyType.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICashMoneyType);

    /** CashMoneyType cashType. */
    public cashType: number;

    /** CashMoneyType money. */
    public money: number;

    /** CashMoneyType createdAt. */
    public createdAt: string;

    /** CashMoneyType status. */
    public status: number;

    /** CashMoneyType agentGuid. */
    public agentGuid: number;

    /** CashMoneyType exchangeCode. */
    public exchangeCode: string;

    /**
     * Creates a new CashMoneyType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CashMoneyType instance
     */
    public static create(properties?: ICashMoneyType): CashMoneyType;

    /**
     * Encodes the specified CashMoneyType message. Does not implicitly {@link CashMoneyType.verify|verify} messages.
     * @param message CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CashMoneyType message, length delimited. Does not implicitly {@link CashMoneyType.verify|verify} messages.
     * @param message CashMoneyType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICashMoneyType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CashMoneyType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CashMoneyType;

    /**
     * Decodes a CashMoneyType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CashMoneyType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CashMoneyType;

    /**
     * Verifies a CashMoneyType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CashMoneyType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CashMoneyType
     */
    public static fromObject(object: { [k: string]: any }): CashMoneyType;

    /**
     * Creates a plain object from a CashMoneyType message. Also converts values to other types if specified.
     * @param message CashMoneyType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CashMoneyType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CashMoneyType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlayerMoney. */
export interface IPlayerMoney {

    /** PlayerMoney money */
    money?: (number|Long|null);

    /** PlayerMoney bank */
    bank?: (number|Long|null);
}

/** Represents a PlayerMoney. */
export class PlayerMoney implements IPlayerMoney {

    /**
     * Constructs a new PlayerMoney.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlayerMoney);

    /** PlayerMoney money. */
    public money: (number|Long);

    /** PlayerMoney bank. */
    public bank: (number|Long);

    /**
     * Creates a new PlayerMoney instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlayerMoney instance
     */
    public static create(properties?: IPlayerMoney): PlayerMoney;

    /**
     * Encodes the specified PlayerMoney message. Does not implicitly {@link PlayerMoney.verify|verify} messages.
     * @param message PlayerMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlayerMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlayerMoney message, length delimited. Does not implicitly {@link PlayerMoney.verify|verify} messages.
     * @param message PlayerMoney message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlayerMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlayerMoney message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlayerMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlayerMoney;

    /**
     * Decodes a PlayerMoney message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlayerMoney
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlayerMoney;

    /**
     * Verifies a PlayerMoney message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlayerMoney message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlayerMoney
     */
    public static fromObject(object: { [k: string]: any }): PlayerMoney;

    /**
     * Creates a plain object from a PlayerMoney message. Also converts values to other types if specified.
     * @param message PlayerMoney
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlayerMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlayerMoney to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Recharge. */
export interface IRecharge {

    /** Recharge guid */
    guid?: (number|null);

    /** Recharge id */
    id?: (number|null);

    /** Recharge exchangeGold */
    exchangeGold?: (number|Long|null);

    /** Recharge payStatus */
    payStatus?: (number|null);

    /** Recharge serverStatus */
    serverStatus?: (number|null);
}

/** Represents a Recharge. */
export class Recharge implements IRecharge {

    /**
     * Constructs a new Recharge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRecharge);

    /** Recharge guid. */
    public guid: number;

    /** Recharge id. */
    public id: number;

    /** Recharge exchangeGold. */
    public exchangeGold: (number|Long);

    /** Recharge payStatus. */
    public payStatus: number;

    /** Recharge serverStatus. */
    public serverStatus: number;

    /**
     * Creates a new Recharge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Recharge instance
     */
    public static create(properties?: IRecharge): Recharge;

    /**
     * Encodes the specified Recharge message. Does not implicitly {@link Recharge.verify|verify} messages.
     * @param message Recharge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Recharge message, length delimited. Does not implicitly {@link Recharge.verify|verify} messages.
     * @param message Recharge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Recharge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Recharge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Recharge;

    /**
     * Decodes a Recharge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Recharge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Recharge;

    /**
     * Verifies a Recharge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Recharge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Recharge
     */
    public static fromObject(object: { [k: string]: any }): Recharge;

    /**
     * Creates a plain object from a Recharge message. Also converts values to other types if specified.
     * @param message Recharge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Recharge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Recharge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Marquee. */
export interface IMarquee {

    /** Marquee id */
    id?: (number|null);

    /** Marquee startTime */
    startTime?: (number|null);

    /** Marquee endTime */
    endTime?: (number|null);

    /** Marquee content */
    content?: (string|null);

    /** Marquee number */
    number?: (number|null);

    /** Marquee intervalTime */
    intervalTime?: (number|null);
}

/** Represents a Marquee. */
export class Marquee implements IMarquee {

    /**
     * Constructs a new Marquee.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMarquee);

    /** Marquee id. */
    public id: number;

    /** Marquee startTime. */
    public startTime: number;

    /** Marquee endTime. */
    public endTime: number;

    /** Marquee content. */
    public content: string;

    /** Marquee number. */
    public number: number;

    /** Marquee intervalTime. */
    public intervalTime: number;

    /**
     * Creates a new Marquee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Marquee instance
     */
    public static create(properties?: IMarquee): Marquee;

    /**
     * Encodes the specified Marquee message. Does not implicitly {@link Marquee.verify|verify} messages.
     * @param message Marquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Marquee message, length delimited. Does not implicitly {@link Marquee.verify|verify} messages.
     * @param message Marquee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMarquee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Marquee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Marquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Marquee;

    /**
     * Decodes a Marquee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Marquee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Marquee;

    /**
     * Verifies a Marquee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Marquee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Marquee
     */
    public static fromObject(object: { [k: string]: any }): Marquee;

    /**
     * Creates a plain object from a Marquee message. Also converts values to other types if specified.
     * @param message Marquee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Marquee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Marquee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AgentsTransferData. */
export interface IAgentsTransferData {

    /** AgentsTransferData agentsId */
    agentsId?: (number|null);

    /** AgentsTransferData playerId */
    playerId?: (number|null);

    /** AgentsTransferData transferId */
    transferId?: (string|null);

    /** AgentsTransferData transferType */
    transferType?: (number|null);

    /** AgentsTransferData transferMoney */
    transferMoney?: (number|null);

    /** AgentsTransferData retId */
    retId?: (number|null);

    /** AgentsTransferData reCode */
    reCode?: (number|null);
}

/** Represents an AgentsTransferData. */
export class AgentsTransferData implements IAgentsTransferData {

    /**
     * Constructs a new AgentsTransferData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAgentsTransferData);

    /** AgentsTransferData agentsId. */
    public agentsId: number;

    /** AgentsTransferData playerId. */
    public playerId: number;

    /** AgentsTransferData transferId. */
    public transferId: string;

    /** AgentsTransferData transferType. */
    public transferType: number;

    /** AgentsTransferData transferMoney. */
    public transferMoney: number;

    /** AgentsTransferData retId. */
    public retId: number;

    /** AgentsTransferData reCode. */
    public reCode: number;

    /**
     * Creates a new AgentsTransferData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AgentsTransferData instance
     */
    public static create(properties?: IAgentsTransferData): AgentsTransferData;

    /**
     * Encodes the specified AgentsTransferData message. Does not implicitly {@link AgentsTransferData.verify|verify} messages.
     * @param message AgentsTransferData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAgentsTransferData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AgentsTransferData message, length delimited. Does not implicitly {@link AgentsTransferData.verify|verify} messages.
     * @param message AgentsTransferData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAgentsTransferData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AgentsTransferData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AgentsTransferData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AgentsTransferData;

    /**
     * Decodes an AgentsTransferData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AgentsTransferData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AgentsTransferData;

    /**
     * Verifies an AgentsTransferData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AgentsTransferData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AgentsTransferData
     */
    public static fromObject(object: { [k: string]: any }): AgentsTransferData;

    /**
     * Creates a plain object from an AgentsTransferData message. Also converts values to other types if specified.
     * @param message AgentsTransferData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AgentsTransferData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AgentsTransferData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ProxyInfo. */
export interface IProxyInfo {

    /** ProxyInfo proxyId */
    proxyId?: (number|null);

    /** ProxyInfo name */
    name?: (string|null);

    /** ProxyInfo minRecharge */
    minRecharge?: (number|null);

    /** ProxyInfo qq */
    qq?: (string|null);

    /** ProxyInfo weixin */
    weixin?: (string|null);

    /** ProxyInfo zfb */
    zfb?: (string|null);

    /** ProxyInfo phone */
    phone?: (string|null);
}

/** Represents a ProxyInfo. */
export class ProxyInfo implements IProxyInfo {

    /**
     * Constructs a new ProxyInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IProxyInfo);

    /** ProxyInfo proxyId. */
    public proxyId: number;

    /** ProxyInfo name. */
    public name: string;

    /** ProxyInfo minRecharge. */
    public minRecharge: number;

    /** ProxyInfo qq. */
    public qq: string;

    /** ProxyInfo weixin. */
    public weixin: string;

    /** ProxyInfo zfb. */
    public zfb: string;

    /** ProxyInfo phone. */
    public phone: string;

    /**
     * Creates a new ProxyInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ProxyInfo instance
     */
    public static create(properties?: IProxyInfo): ProxyInfo;

    /**
     * Encodes the specified ProxyInfo message. Does not implicitly {@link ProxyInfo.verify|verify} messages.
     * @param message ProxyInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IProxyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ProxyInfo message, length delimited. Does not implicitly {@link ProxyInfo.verify|verify} messages.
     * @param message ProxyInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IProxyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ProxyInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ProxyInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ProxyInfo;

    /**
     * Decodes a ProxyInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ProxyInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ProxyInfo;

    /**
     * Verifies a ProxyInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ProxyInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ProxyInfo
     */
    public static fromObject(object: { [k: string]: any }): ProxyInfo;

    /**
     * Creates a plain object from a ProxyInfo message. Also converts values to other types if specified.
     * @param message ProxyInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ProxyInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ProxyInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlatformProxyInfos. */
export interface IPlatformProxyInfos {

    /** PlatformProxyInfos platformId */
    platformId?: (number|null);

    /** PlatformProxyInfos pbProxyList */
    pbProxyList?: (IProxyInfo[]|null);
}

/** Represents a PlatformProxyInfos. */
export class PlatformProxyInfos implements IPlatformProxyInfos {

    /**
     * Constructs a new PlatformProxyInfos.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlatformProxyInfos);

    /** PlatformProxyInfos platformId. */
    public platformId: number;

    /** PlatformProxyInfos pbProxyList. */
    public pbProxyList: IProxyInfo[];

    /**
     * Creates a new PlatformProxyInfos instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlatformProxyInfos instance
     */
    public static create(properties?: IPlatformProxyInfos): PlatformProxyInfos;

    /**
     * Encodes the specified PlatformProxyInfos message. Does not implicitly {@link PlatformProxyInfos.verify|verify} messages.
     * @param message PlatformProxyInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlatformProxyInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlatformProxyInfos message, length delimited. Does not implicitly {@link PlatformProxyInfos.verify|verify} messages.
     * @param message PlatformProxyInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlatformProxyInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlatformProxyInfos message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlatformProxyInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlatformProxyInfos;

    /**
     * Decodes a PlatformProxyInfos message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlatformProxyInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlatformProxyInfos;

    /**
     * Verifies a PlatformProxyInfos message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlatformProxyInfos message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlatformProxyInfos
     */
    public static fromObject(object: { [k: string]: any }): PlatformProxyInfos;

    /**
     * Creates a plain object from a PlatformProxyInfos message. Also converts values to other types if specified.
     * @param message PlatformProxyInfos
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlatformProxyInfos, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlatformProxyInfos to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GameNotice. */
export interface IGameNotice {

    /** GameNotice firstGameType */
    firstGameType?: (number|null);

    /** GameNotice secondGameType */
    secondGameType?: (number|null);

    /** GameNotice number */
    number?: (number|null);

    /** GameNotice intervalTime */
    intervalTime?: (number|null);

    /** GameNotice startTime */
    startTime?: (number|null);

    /** GameNotice noticeType */
    noticeType?: (number|null);

    /** GameNotice param1 */
    param1?: (string|null);

    /** GameNotice param2 */
    param2?: (string|null);

    /** GameNotice param3 */
    param3?: (string|null);

    /** GameNotice param4 */
    param4?: (string|null);

    /** GameNotice param5 */
    param5?: (string|null);
}

/** Represents a GameNotice. */
export class GameNotice implements IGameNotice {

    /**
     * Constructs a new GameNotice.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGameNotice);

    /** GameNotice firstGameType. */
    public firstGameType: number;

    /** GameNotice secondGameType. */
    public secondGameType: number;

    /** GameNotice number. */
    public number: number;

    /** GameNotice intervalTime. */
    public intervalTime: number;

    /** GameNotice startTime. */
    public startTime: number;

    /** GameNotice noticeType. */
    public noticeType: number;

    /** GameNotice param1. */
    public param1: string;

    /** GameNotice param2. */
    public param2: string;

    /** GameNotice param3. */
    public param3: string;

    /** GameNotice param4. */
    public param4: string;

    /** GameNotice param5. */
    public param5: string;

    /**
     * Creates a new GameNotice instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GameNotice instance
     */
    public static create(properties?: IGameNotice): GameNotice;

    /**
     * Encodes the specified GameNotice message. Does not implicitly {@link GameNotice.verify|verify} messages.
     * @param message GameNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGameNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GameNotice message, length delimited. Does not implicitly {@link GameNotice.verify|verify} messages.
     * @param message GameNotice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGameNotice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GameNotice message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GameNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GameNotice;

    /**
     * Decodes a GameNotice message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GameNotice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GameNotice;

    /**
     * Verifies a GameNotice message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GameNotice message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GameNotice
     */
    public static fromObject(object: { [k: string]: any }): GameNotice;

    /**
     * Creates a plain object from a GameNotice message. Also converts values to other types if specified.
     * @param message GameNotice
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GameNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GameNotice to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RegAccount. */
export interface IRegAccount {

    /** RegAccount account */
    account?: (string|null);

    /** RegAccount password */
    password?: (string|null);

    /** RegAccount phone */
    phone?: (string|null);

    /** RegAccount phoneType */
    phoneType?: (string|null);

    /** RegAccount version */
    version?: (string|null);

    /** RegAccount channelId */
    channelId?: (string|null);

    /** RegAccount packageName */
    packageName?: (string|null);

    /** RegAccount imei */
    imei?: (string|null);

    /** RegAccount ip */
    ip?: (string|null);

    /** RegAccount ipArea */
    ipArea?: (string|null);

    /** RegAccount platformId */
    platformId?: (string|null);

    /** RegAccount deprecatedImei */
    deprecatedImei?: (string|null);

    /** RegAccount sharedId */
    sharedId?: (string|null);

    /** RegAccount promotionInfo */
    promotionInfo?: (string|null);

    /** RegAccount inviteCode */
    inviteCode?: (string|null);

    /** RegAccount inviteType */
    inviteType?: (number|null);
}

/** Represents a RegAccount. */
export class RegAccount implements IRegAccount {

    /**
     * Constructs a new RegAccount.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRegAccount);

    /** RegAccount account. */
    public account: string;

    /** RegAccount password. */
    public password: string;

    /** RegAccount phone. */
    public phone: string;

    /** RegAccount phoneType. */
    public phoneType: string;

    /** RegAccount version. */
    public version: string;

    /** RegAccount channelId. */
    public channelId: string;

    /** RegAccount packageName. */
    public packageName: string;

    /** RegAccount imei. */
    public imei: string;

    /** RegAccount ip. */
    public ip: string;

    /** RegAccount ipArea. */
    public ipArea: string;

    /** RegAccount platformId. */
    public platformId: string;

    /** RegAccount deprecatedImei. */
    public deprecatedImei: string;

    /** RegAccount sharedId. */
    public sharedId: string;

    /** RegAccount promotionInfo. */
    public promotionInfo: string;

    /** RegAccount inviteCode. */
    public inviteCode: string;

    /** RegAccount inviteType. */
    public inviteType: number;

    /**
     * Creates a new RegAccount instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RegAccount instance
     */
    public static create(properties?: IRegAccount): RegAccount;

    /**
     * Encodes the specified RegAccount message. Does not implicitly {@link RegAccount.verify|verify} messages.
     * @param message RegAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRegAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RegAccount message, length delimited. Does not implicitly {@link RegAccount.verify|verify} messages.
     * @param message RegAccount message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRegAccount, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RegAccount message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RegAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RegAccount;

    /**
     * Decodes a RegAccount message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RegAccount
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RegAccount;

    /**
     * Verifies a RegAccount message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RegAccount message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RegAccount
     */
    public static fromObject(object: { [k: string]: any }): RegAccount;

    /**
     * Creates a plain object from a RegAccount message. Also converts values to other types if specified.
     * @param message RegAccount
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RegAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RegAccount to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** HU_TYPE enum. */
export enum HU_TYPE {
    WEI_HU = 0,
    TIAN_HU = 1,
    DI_HU = 2,
    REN_HU = 3,
    TIAN_TING = 4,
    QING_YI_SE = 5,
    QUAN_HUA = 6,
    ZI_YI_SE = 7,
    MIAO_SHOU_HUI_CHUN = 8,
    HAI_DI_LAO_YUE = 9,
    GANG_SHANG_HUA = 10,
    QUAN_QIU_REN = 11,
    SHUANG_AN_GANG = 12,
    SHUANG_JIAN_KE = 13,
    HUN_YI_SE = 14,
    BU_QIU_REN = 15,
    SHUANG_MING_GANG = 16,
    HU_JUE_ZHANG = 17,
    JIAN_KE = 18,
    MEN_QING = 19,
    AN_GANG = 20,
    DUAN_YAO = 21,
    SI_GUI_YI = 22,
    PING_HU = 23,
    SHUANG_AN_KE = 24,
    SAN_AN_KE = 25,
    SI_AN_KE = 26,
    BAO_TING = 27,
    MEN_FENG_KE = 28,
    QUAN_FENG_KE = 29,
    ZI_MO = 30,
    DAN_DIAO_JIANG = 31,
    YI_BAN_GAO = 32,
    LAO_SHAO_FU = 33,
    LIAN_LIU = 34,
    YAO_JIU_KE = 35,
    MING_GANG = 36,
    DA_SAN_FENG = 37,
    XIAO_SAN_FENG = 38,
    PENG_PENG_HU = 39,
    SAN_GANG = 40,
    QUAN_DAI_YAO = 41,
    QIANG_GANG_HU = 42,
    HUA_PAI = 43,
    DA_QI_XIN = 44,
    LIAN_QI_DUI = 45,
    SAN_YUAN_QI_DUI = 46,
    SI_XI_QI_DUI = 47,
    QI_DUI = 48,
    DA_YU_WU = 49,
    XIAO_YU_WU = 50,
    DA_SI_XI = 51,
    XIAO_SI_XI = 52,
    DA_SAN_YUAN = 53,
    XIAO_SAN_YUAN = 54,
    JIU_LIAN_BAO_DENG = 55,
    LUO_HAN_18 = 56,
    SHUANG_LONG_HUI = 57,
    YI_SE_SI_TONG_SHUN = 58,
    YI_SE_SI_JIE_GAO = 59,
    YI_SE_SI_BU_GAO = 60,
    HUN_YAO_JIU = 61,
    YI_SE_SAN_JIE_GAO = 62,
    YI_SE_SAN_TONG_SHUN = 63,
    SI_ZI_KE = 64,
    QING_LONG = 65,
    YI_SE_SAN_BU_GAO = 66,
    DA_DUI_ZI = 67,
    LONG_QI_DUI = 68,
    QING_QI_DUI = 69,
    QING_LONG_BEI = 70,
    QING_DA_DUI = 71,
    QING_DAN_DIAO = 72,
    NORMAL_JI = 73,
    FAN_PAI_JI = 74,
    CHONG_FENG_JI = 75,
    ZHE_REN_JI = 76,
    WU_GU_JI = 77,
    YAO_BAI_JI = 78,
    BEN_JI = 79,
    XING_QI_JI = 80,
    CHUI_FENG_JI = 81,
    BA_GANG = 82,
    DIAN_PAO = 83,
    WEI_JIAO = 84,
    JIAO_PAI = 85,
    MEN = 86,
    MEN_ZI_MO = 87,
    LIAN_ZHUANG = 88,
    ZHUANG = 89,
    YING_BAO = 90,
    RUAN_BAO = 91,
    SHA_BAO = 92,
    HONG_ZHONG = 93,
    CHONG_FENG_WU_GU = 94,
    ZHE_REN_WU_GU = 95,
    JING_JI = 96,
    JING_WU_GU_JI = 97,
    CHONG_FENG_JING_JI = 98,
    CHONG_FENG_JING_WU_GU = 99,
    ZHE_REN_JING_JI = 100,
    ZHE_REN_JING_WU_GU = 101,
    GANG_SHANG_PAO = 102,
    JIANG_DUI = 103,
    JIANG_QI_DUI = 104,
    QUAN_YAO_JIU = 105,
    DAI_GOU = 106,
    DI_LONG = 107,
    QING_DI_LONG = 108,
    KA_ER_TIAO = 109,
    KA_WU_XING = 110,
    SI_DUI = 111,
    LONG_SI_DUI = 112,
    QING_SI_DUI = 113,
    QING_LONG_SI_DUI = 114,
    GU_MAI = 115,
    WU_JI = 116,
    SI_JI = 117,
    RUAN_AN_GANG = 118,
    RUAN_MING_GANG = 119,
    RUAN_BA_GANG = 120,
    HAI_DI_PAO = 121
}

/** ACTION enum. */
export enum ACTION {
    ACTION_NIL = 0,
    ACTION_TRUSTEE = 1,
    ACTION_PENG = 2,
    ACTION_AN_GANG = 4,
    ACTION_MING_GANG = 8,
    ACTION_BA_GANG = 16,
    ACTION_HU = 32,
    ACTION_PASS = 64,
    ACTION_LEFT_CHI = 128,
    ACTION_MID_CHI = 256,
    ACTION_RIGHT_CHI = 512,
    ACTION_TING = 1024,
    ACTION_JIA_BEI = 2048,
    ACTION_CHU_PAI = 4096,
    ACTION_ZI_MO = 8192,
    ACTION_MEN = 16384,
    ACTION_MO_PAI = 32768,
    ACTION_MEN_ZI_MO = 65536,
    ACTION_FREE_BA_GANG = 131072,
    ACTION_FREE_AN_GANG = 262144,
    ACTION_DING_QUE = 524288,
    ACTION_HUAN_PAI = 1048576,
    ACTION_QIANG_GANG_HU = 2097152,
    ACTION_GANG_HUAN_PAI = 4194304,
    ACTION_RUAN_AN_GANG = 8388608,
    ACTION_RUAN_MING_GANG = 16777216,
    ACTION_RUAN_BA_GANG = 33554432,
    ACTION_RUAN_PENG = 67108864,
    ACTION_PIAO_FEN = 134217728
}

/** SECTION_TYPE enum. */
export enum SECTION_TYPE {
    Four = 0,
    AnGang = 1,
    MingGang = 2,
    BaGang = 3,
    DuiZi = 4,
    Three = 5,
    Peng = 6,
    Chi = 7,
    LeftChi = 8,
    MidChi = 9,
    RightChi = 10,
    FreeBaGang = 11,
    FreeAnGang = 12,
    RuanAnGang = 13,
    RuanMingGang = 14,
    RuanBaGang = 15,
    RuanPeng = 16
}

/** FSM_STATE enum. */
export enum FSM_STATE {
    PER_BEGIN = 0,
    XI_PAI = 1,
    CHECK_TING = 2,
    WAIT_MO_PAI = 4,
    WAIT_CHU_PAI = 5,
    WAIT_ACTION_AFTER_CHU_PAI = 6,
    WAIT_ACTION_AFTER_MO_PAI = 7,
    WAIT_QIANG_GANG_HU = 8,
    GAME_BALANCE = 15,
    GAME_CLOSE = 16,
    HUAN_PAI = 17,
    DING_QUE = 18,
    FAST_START_VOTE = 19,
    FINAL_END = 20,
    FS_GU_MAI = 21,
    PIAO_FEN = 22,
    WAIT_BAO_TING = 23,
    GAME_IDLE_HEAD = 4096
}

/** HUAN_PAI_ORDER enum. */
export enum HUAN_PAI_ORDER {
    CLOCK_WISE = 0,
    COUNTER_CLOCK_WISE = 1,
    DIAGONAL = 2
}

/** Properties of a Maajan_Tiles. */
export interface IMaajan_Tiles {

    /** Maajan_Tiles tiles */
    tiles?: (number[]|null);
}

/** Represents a Maajan_Tiles. */
export class Maajan_Tiles implements IMaajan_Tiles {

    /**
     * Constructs a new Maajan_Tiles.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Tiles);

    /** Maajan_Tiles tiles. */
    public tiles: number[];

    /**
     * Creates a new Maajan_Tiles instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Tiles instance
     */
    public static create(properties?: IMaajan_Tiles): Maajan_Tiles;

    /**
     * Encodes the specified Maajan_Tiles message. Does not implicitly {@link Maajan_Tiles.verify|verify} messages.
     * @param message Maajan_Tiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Tiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Tiles message, length delimited. Does not implicitly {@link Maajan_Tiles.verify|verify} messages.
     * @param message Maajan_Tiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Tiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Tiles message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Tiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Tiles;

    /**
     * Decodes a Maajan_Tiles message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Tiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Tiles;

    /**
     * Verifies a Maajan_Tiles message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Tiles message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Tiles
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Tiles;

    /**
     * Creates a plain object from a Maajan_Tiles message. Also converts values to other types if specified.
     * @param message Maajan_Tiles
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Tiles, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Tiles to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_MingPai. */
export interface IMaajan_MingPai {

    /** Maajan_MingPai tile */
    tile?: (number|null);

    /** Maajan_MingPai type */
    type?: (number|null);

    /** Maajan_MingPai substituteNum */
    substituteNum?: (number|null);
}

/** Represents a Maajan_MingPai. */
export class Maajan_MingPai implements IMaajan_MingPai {

    /**
     * Constructs a new Maajan_MingPai.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_MingPai);

    /** Maajan_MingPai tile. */
    public tile: number;

    /** Maajan_MingPai type. */
    public type: number;

    /** Maajan_MingPai substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new Maajan_MingPai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_MingPai instance
     */
    public static create(properties?: IMaajan_MingPai): Maajan_MingPai;

    /**
     * Encodes the specified Maajan_MingPai message. Does not implicitly {@link Maajan_MingPai.verify|verify} messages.
     * @param message Maajan_MingPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_MingPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_MingPai message, length delimited. Does not implicitly {@link Maajan_MingPai.verify|verify} messages.
     * @param message Maajan_MingPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_MingPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_MingPai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_MingPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_MingPai;

    /**
     * Decodes a Maajan_MingPai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_MingPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_MingPai;

    /**
     * Verifies a Maajan_MingPai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_MingPai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_MingPai
     */
    public static fromObject(object: { [k: string]: any }): Maajan_MingPai;

    /**
     * Creates a plain object from a Maajan_MingPai message. Also converts values to other types if specified.
     * @param message Maajan_MingPai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_MingPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_MingPai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Player_Info. */
export interface IMaajan_Player_Info {

    /** Maajan_Player_Info pbMingPai */
    pbMingPai?: (IMaajan_MingPai[]|null);

    /** Maajan_Player_Info shouPai */
    shouPai?: (number[]|null);

    /** Maajan_Player_Info huaPai */
    huaPai?: (number[]|null);

    /** Maajan_Player_Info deskPai */
    deskPai?: (number[]|null);

    /** Maajan_Player_Info chairId */
    chairId?: (number|null);

    /** Maajan_Player_Info isHu */
    isHu?: (boolean|null);

    /** Maajan_Player_Info huFan */
    huFan?: (number|null);

    /** Maajan_Player_Info jiabei */
    jiabei?: (number|null);

    /** Maajan_Player_Info describe */
    describe?: (string|null);

    /** Maajan_Player_Info winMoney */
    winMoney?: (number|null);

    /** Maajan_Player_Info taxes */
    taxes?: (number|null);

    /** Maajan_Player_Info finishTask */
    finishTask?: (boolean|null);

    /** Maajan_Player_Info isTing */
    isTing?: (boolean|null);

    /** Maajan_Player_Info totalScore */
    totalScore?: (number|null);

    /** Maajan_Player_Info roundScore */
    roundScore?: (number|null);

    /** Maajan_Player_Info menPai */
    menPai?: (number[]|null);

    /** Maajan_Player_Info moPai */
    moPai?: (number|null);

    /** Maajan_Player_Info guMaiScore */
    guMaiScore?: (number|null);
}

/** Represents a Maajan_Player_Info. */
export class Maajan_Player_Info implements IMaajan_Player_Info {

    /**
     * Constructs a new Maajan_Player_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Player_Info);

    /** Maajan_Player_Info pbMingPai. */
    public pbMingPai: IMaajan_MingPai[];

    /** Maajan_Player_Info shouPai. */
    public shouPai: number[];

    /** Maajan_Player_Info huaPai. */
    public huaPai: number[];

    /** Maajan_Player_Info deskPai. */
    public deskPai: number[];

    /** Maajan_Player_Info chairId. */
    public chairId: number;

    /** Maajan_Player_Info isHu. */
    public isHu: boolean;

    /** Maajan_Player_Info huFan. */
    public huFan: number;

    /** Maajan_Player_Info jiabei. */
    public jiabei: number;

    /** Maajan_Player_Info describe. */
    public describe: string;

    /** Maajan_Player_Info winMoney. */
    public winMoney: number;

    /** Maajan_Player_Info taxes. */
    public taxes: number;

    /** Maajan_Player_Info finishTask. */
    public finishTask: boolean;

    /** Maajan_Player_Info isTing. */
    public isTing: boolean;

    /** Maajan_Player_Info totalScore. */
    public totalScore: number;

    /** Maajan_Player_Info roundScore. */
    public roundScore: number;

    /** Maajan_Player_Info menPai. */
    public menPai: number[];

    /** Maajan_Player_Info moPai. */
    public moPai: number;

    /** Maajan_Player_Info guMaiScore. */
    public guMaiScore: number;

    /**
     * Creates a new Maajan_Player_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Player_Info instance
     */
    public static create(properties?: IMaajan_Player_Info): Maajan_Player_Info;

    /**
     * Encodes the specified Maajan_Player_Info message. Does not implicitly {@link Maajan_Player_Info.verify|verify} messages.
     * @param message Maajan_Player_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Player_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Player_Info message, length delimited. Does not implicitly {@link Maajan_Player_Info.verify|verify} messages.
     * @param message Maajan_Player_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Player_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Player_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Player_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Player_Info;

    /**
     * Decodes a Maajan_Player_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Player_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Player_Info;

    /**
     * Verifies a Maajan_Player_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Player_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Player_Info
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Player_Info;

    /**
     * Creates a plain object from a Maajan_Player_Info message. Also converts values to other types if specified.
     * @param message Maajan_Player_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Player_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Player_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Reconnect_Data. */
export interface IMaajan_Reconnect_Data {

    /** Maajan_Reconnect_Data actLeftTime */
    actLeftTime?: (number|null);

    /** Maajan_Reconnect_Data lastChuPaiChair */
    lastChuPaiChair?: (number|null);

    /** Maajan_Reconnect_Data lastChuPai */
    lastChuPai?: (number|null);

    /** Maajan_Reconnect_Data totalScores */
    totalScores?: ({ [k: string]: string }|null);

    /** Maajan_Reconnect_Data totalMoney */
    totalMoney?: ({ [k: string]: string }|null);
}

/** Represents a Maajan_Reconnect_Data. */
export class Maajan_Reconnect_Data implements IMaajan_Reconnect_Data {

    /**
     * Constructs a new Maajan_Reconnect_Data.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Reconnect_Data);

    /** Maajan_Reconnect_Data actLeftTime. */
    public actLeftTime: number;

    /** Maajan_Reconnect_Data lastChuPaiChair. */
    public lastChuPaiChair: number;

    /** Maajan_Reconnect_Data lastChuPai. */
    public lastChuPai: number;

    /** Maajan_Reconnect_Data totalScores. */
    public totalScores: { [k: string]: string };

    /** Maajan_Reconnect_Data totalMoney. */
    public totalMoney: { [k: string]: string };

    /**
     * Creates a new Maajan_Reconnect_Data instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Reconnect_Data instance
     */
    public static create(properties?: IMaajan_Reconnect_Data): Maajan_Reconnect_Data;

    /**
     * Encodes the specified Maajan_Reconnect_Data message. Does not implicitly {@link Maajan_Reconnect_Data.verify|verify} messages.
     * @param message Maajan_Reconnect_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Reconnect_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Reconnect_Data message, length delimited. Does not implicitly {@link Maajan_Reconnect_Data.verify|verify} messages.
     * @param message Maajan_Reconnect_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Reconnect_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Reconnect_Data message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Reconnect_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Reconnect_Data;

    /**
     * Decodes a Maajan_Reconnect_Data message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Reconnect_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Reconnect_Data;

    /**
     * Verifies a Maajan_Reconnect_Data message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Reconnect_Data message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Reconnect_Data
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Reconnect_Data;

    /**
     * Creates a plain object from a Maajan_Reconnect_Data message. Also converts values to other types if specified.
     * @param message Maajan_Reconnect_Data
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Reconnect_Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Reconnect_Data to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Task_Data. */
export interface IMaajan_Task_Data {

    /** Maajan_Task_Data taskType */
    taskType?: (number|null);

    /** Maajan_Task_Data taskTile */
    taskTile?: (number|null);

    /** Maajan_Task_Data taskScale */
    taskScale?: (number|null);
}

/** Represents a Maajan_Task_Data. */
export class Maajan_Task_Data implements IMaajan_Task_Data {

    /**
     * Constructs a new Maajan_Task_Data.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Task_Data);

    /** Maajan_Task_Data taskType. */
    public taskType: number;

    /** Maajan_Task_Data taskTile. */
    public taskTile: number;

    /** Maajan_Task_Data taskScale. */
    public taskScale: number;

    /**
     * Creates a new Maajan_Task_Data instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Task_Data instance
     */
    public static create(properties?: IMaajan_Task_Data): Maajan_Task_Data;

    /**
     * Encodes the specified Maajan_Task_Data message. Does not implicitly {@link Maajan_Task_Data.verify|verify} messages.
     * @param message Maajan_Task_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Task_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Task_Data message, length delimited. Does not implicitly {@link Maajan_Task_Data.verify|verify} messages.
     * @param message Maajan_Task_Data message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Task_Data, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Task_Data message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Task_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Task_Data;

    /**
     * Decodes a Maajan_Task_Data message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Task_Data
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Task_Data;

    /**
     * Verifies a Maajan_Task_Data message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Task_Data message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Task_Data
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Task_Data;

    /**
     * Creates a plain object from a Maajan_Task_Data message. Also converts values to other types if specified.
     * @param message Maajan_Task_Data
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Task_Data, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Task_Data to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_Maajan_Desk_Enter. */
export interface ISC_Maajan_Desk_Enter {

    /** SC_Maajan_Desk_Enter pbPlayers */
    pbPlayers?: (IMaajan_Player_Info[]|null);

    /** SC_Maajan_Desk_Enter state */
    state?: (number|null);

    /** SC_Maajan_Desk_Enter zhuang */
    zhuang?: (number|null);

    /** SC_Maajan_Desk_Enter selfChairId */
    selfChairId?: (number|null);

    /** SC_Maajan_Desk_Enter actTimeLimit */
    actTimeLimit?: (number|null);

    /** SC_Maajan_Desk_Enter decisionTimeLimit */
    decisionTimeLimit?: (number|null);

    /** SC_Maajan_Desk_Enter pbRecData */
    pbRecData?: (IMaajan_Reconnect_Data|null);

    /** SC_Maajan_Desk_Enter pbTaskData */
    pbTaskData?: (IMaajan_Task_Data|null);

    /** SC_Maajan_Desk_Enter round */
    round?: (number|null);

    /** SC_Maajan_Desk_Enter isReconnect */
    isReconnect?: (boolean|null);
}

/** Represents a SC_Maajan_Desk_Enter. */
export class SC_Maajan_Desk_Enter implements ISC_Maajan_Desk_Enter {

    /**
     * Constructs a new SC_Maajan_Desk_Enter.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Desk_Enter);

    /** SC_Maajan_Desk_Enter pbPlayers. */
    public pbPlayers: IMaajan_Player_Info[];

    /** SC_Maajan_Desk_Enter state. */
    public state: number;

    /** SC_Maajan_Desk_Enter zhuang. */
    public zhuang: number;

    /** SC_Maajan_Desk_Enter selfChairId. */
    public selfChairId: number;

    /** SC_Maajan_Desk_Enter actTimeLimit. */
    public actTimeLimit: number;

    /** SC_Maajan_Desk_Enter decisionTimeLimit. */
    public decisionTimeLimit: number;

    /** SC_Maajan_Desk_Enter pbRecData. */
    public pbRecData?: (IMaajan_Reconnect_Data|null);

    /** SC_Maajan_Desk_Enter pbTaskData. */
    public pbTaskData?: (IMaajan_Task_Data|null);

    /** SC_Maajan_Desk_Enter round. */
    public round: number;

    /** SC_Maajan_Desk_Enter isReconnect. */
    public isReconnect: boolean;

    /**
     * Creates a new SC_Maajan_Desk_Enter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Desk_Enter instance
     */
    public static create(properties?: ISC_Maajan_Desk_Enter): SC_Maajan_Desk_Enter;

    /**
     * Encodes the specified SC_Maajan_Desk_Enter message. Does not implicitly {@link SC_Maajan_Desk_Enter.verify|verify} messages.
     * @param message SC_Maajan_Desk_Enter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Desk_Enter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Desk_Enter message, length delimited. Does not implicitly {@link SC_Maajan_Desk_Enter.verify|verify} messages.
     * @param message SC_Maajan_Desk_Enter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Desk_Enter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Desk_Enter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Desk_Enter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Desk_Enter;

    /**
     * Decodes a SC_Maajan_Desk_Enter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Desk_Enter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Desk_Enter;

    /**
     * Verifies a SC_Maajan_Desk_Enter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Desk_Enter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Desk_Enter
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Desk_Enter;

    /**
     * Creates a plain object from a SC_Maajan_Desk_Enter message. Also converts values to other types if specified.
     * @param message SC_Maajan_Desk_Enter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Desk_Enter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Desk_Enter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Desk_Enter {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23100
    }
}

/** Properties of a SC_Maajan_Tile_Left. */
export interface ISC_Maajan_Tile_Left {

    /** SC_Maajan_Tile_Left tileLeft */
    tileLeft?: (number|null);
}

/** Represents a SC_Maajan_Tile_Left. */
export class SC_Maajan_Tile_Left implements ISC_Maajan_Tile_Left {

    /**
     * Constructs a new SC_Maajan_Tile_Left.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Tile_Left);

    /** SC_Maajan_Tile_Left tileLeft. */
    public tileLeft: number;

    /**
     * Creates a new SC_Maajan_Tile_Left instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Tile_Left instance
     */
    public static create(properties?: ISC_Maajan_Tile_Left): SC_Maajan_Tile_Left;

    /**
     * Encodes the specified SC_Maajan_Tile_Left message. Does not implicitly {@link SC_Maajan_Tile_Left.verify|verify} messages.
     * @param message SC_Maajan_Tile_Left message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Tile_Left, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Tile_Left message, length delimited. Does not implicitly {@link SC_Maajan_Tile_Left.verify|verify} messages.
     * @param message SC_Maajan_Tile_Left message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Tile_Left, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Tile_Left message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Tile_Left
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Tile_Left;

    /**
     * Decodes a SC_Maajan_Tile_Left message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Tile_Left
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Tile_Left;

    /**
     * Verifies a SC_Maajan_Tile_Left message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Tile_Left message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Tile_Left
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Tile_Left;

    /**
     * Creates a plain object from a SC_Maajan_Tile_Left message. Also converts values to other types if specified.
     * @param message SC_Maajan_Tile_Left
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Tile_Left, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Tile_Left to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Tile_Left {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23108
    }
}

/** Properties of a SC_Maajan_Discard_Round. */
export interface ISC_Maajan_Discard_Round {

    /** SC_Maajan_Discard_Round chairId */
    chairId?: (number|null);
}

/** Represents a SC_Maajan_Discard_Round. */
export class SC_Maajan_Discard_Round implements ISC_Maajan_Discard_Round {

    /**
     * Constructs a new SC_Maajan_Discard_Round.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Discard_Round);

    /** SC_Maajan_Discard_Round chairId. */
    public chairId: number;

    /**
     * Creates a new SC_Maajan_Discard_Round instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Discard_Round instance
     */
    public static create(properties?: ISC_Maajan_Discard_Round): SC_Maajan_Discard_Round;

    /**
     * Encodes the specified SC_Maajan_Discard_Round message. Does not implicitly {@link SC_Maajan_Discard_Round.verify|verify} messages.
     * @param message SC_Maajan_Discard_Round message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Discard_Round, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Discard_Round message, length delimited. Does not implicitly {@link SC_Maajan_Discard_Round.verify|verify} messages.
     * @param message SC_Maajan_Discard_Round message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Discard_Round, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Discard_Round message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Discard_Round
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Discard_Round;

    /**
     * Decodes a SC_Maajan_Discard_Round message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Discard_Round
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Discard_Round;

    /**
     * Verifies a SC_Maajan_Discard_Round message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Discard_Round message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Discard_Round
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Discard_Round;

    /**
     * Creates a plain object from a SC_Maajan_Discard_Round message. Also converts values to other types if specified.
     * @param message SC_Maajan_Discard_Round
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Discard_Round, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Discard_Round to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Discard_Round {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23109
    }
}

/** Properties of a SC_Maajan_Desk_State. */
export interface ISC_Maajan_Desk_State {

    /** SC_Maajan_Desk_State state */
    state?: (number|null);
}

/** Represents a SC_Maajan_Desk_State. */
export class SC_Maajan_Desk_State implements ISC_Maajan_Desk_State {

    /**
     * Constructs a new SC_Maajan_Desk_State.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Desk_State);

    /** SC_Maajan_Desk_State state. */
    public state: number;

    /**
     * Creates a new SC_Maajan_Desk_State instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Desk_State instance
     */
    public static create(properties?: ISC_Maajan_Desk_State): SC_Maajan_Desk_State;

    /**
     * Encodes the specified SC_Maajan_Desk_State message. Does not implicitly {@link SC_Maajan_Desk_State.verify|verify} messages.
     * @param message SC_Maajan_Desk_State message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Desk_State, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Desk_State message, length delimited. Does not implicitly {@link SC_Maajan_Desk_State.verify|verify} messages.
     * @param message SC_Maajan_Desk_State message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Desk_State, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Desk_State message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Desk_State
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Desk_State;

    /**
     * Decodes a SC_Maajan_Desk_State message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Desk_State
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Desk_State;

    /**
     * Verifies a SC_Maajan_Desk_State message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Desk_State message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Desk_State
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Desk_State;

    /**
     * Creates a plain object from a SC_Maajan_Desk_State message. Also converts values to other types if specified.
     * @param message SC_Maajan_Desk_State
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Desk_State, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Desk_State to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Desk_State {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23110
    }
}

/** Properties of a SC_Maajan_Draw. */
export interface ISC_Maajan_Draw {

    /** SC_Maajan_Draw chairId */
    chairId?: (number|null);

    /** SC_Maajan_Draw tile */
    tile?: (number|null);
}

/** Represents a SC_Maajan_Draw. */
export class SC_Maajan_Draw implements ISC_Maajan_Draw {

    /**
     * Constructs a new SC_Maajan_Draw.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Draw);

    /** SC_Maajan_Draw chairId. */
    public chairId: number;

    /** SC_Maajan_Draw tile. */
    public tile: number;

    /**
     * Creates a new SC_Maajan_Draw instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Draw instance
     */
    public static create(properties?: ISC_Maajan_Draw): SC_Maajan_Draw;

    /**
     * Encodes the specified SC_Maajan_Draw message. Does not implicitly {@link SC_Maajan_Draw.verify|verify} messages.
     * @param message SC_Maajan_Draw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Draw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Draw message, length delimited. Does not implicitly {@link SC_Maajan_Draw.verify|verify} messages.
     * @param message SC_Maajan_Draw message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Draw, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Draw message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Draw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Draw;

    /**
     * Decodes a SC_Maajan_Draw message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Draw
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Draw;

    /**
     * Verifies a SC_Maajan_Draw message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Draw message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Draw
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Draw;

    /**
     * Creates a plain object from a SC_Maajan_Draw message. Also converts values to other types if specified.
     * @param message SC_Maajan_Draw
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Draw, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Draw to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Draw {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23111
    }
}

/** Properties of a SC_Maajan_Bu_Hua. */
export interface ISC_Maajan_Bu_Hua {

    /** SC_Maajan_Bu_Hua pbBuHu */
    pbBuHu?: (IMaajan_Tiles[]|null);
}

/** Represents a SC_Maajan_Bu_Hua. */
export class SC_Maajan_Bu_Hua implements ISC_Maajan_Bu_Hua {

    /**
     * Constructs a new SC_Maajan_Bu_Hua.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Bu_Hua);

    /** SC_Maajan_Bu_Hua pbBuHu. */
    public pbBuHu: IMaajan_Tiles[];

    /**
     * Creates a new SC_Maajan_Bu_Hua instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Bu_Hua instance
     */
    public static create(properties?: ISC_Maajan_Bu_Hua): SC_Maajan_Bu_Hua;

    /**
     * Encodes the specified SC_Maajan_Bu_Hua message. Does not implicitly {@link SC_Maajan_Bu_Hua.verify|verify} messages.
     * @param message SC_Maajan_Bu_Hua message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Bu_Hua, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Bu_Hua message, length delimited. Does not implicitly {@link SC_Maajan_Bu_Hua.verify|verify} messages.
     * @param message SC_Maajan_Bu_Hua message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Bu_Hua, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Bu_Hua message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Bu_Hua
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Bu_Hua;

    /**
     * Decodes a SC_Maajan_Bu_Hua message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Bu_Hua
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Bu_Hua;

    /**
     * Verifies a SC_Maajan_Bu_Hua message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Bu_Hua message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Bu_Hua
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Bu_Hua;

    /**
     * Creates a plain object from a SC_Maajan_Bu_Hua message. Also converts values to other types if specified.
     * @param message SC_Maajan_Bu_Hua
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Bu_Hua, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Bu_Hua to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Bu_Hua {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23112
    }
}

/** Properties of a SC_Maajan_Act_Trustee. */
export interface ISC_Maajan_Act_Trustee {

    /** SC_Maajan_Act_Trustee chairId */
    chairId?: (number|null);

    /** SC_Maajan_Act_Trustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SC_Maajan_Act_Trustee. */
export class SC_Maajan_Act_Trustee implements ISC_Maajan_Act_Trustee {

    /**
     * Constructs a new SC_Maajan_Act_Trustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Act_Trustee);

    /** SC_Maajan_Act_Trustee chairId. */
    public chairId: number;

    /** SC_Maajan_Act_Trustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SC_Maajan_Act_Trustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Act_Trustee instance
     */
    public static create(properties?: ISC_Maajan_Act_Trustee): SC_Maajan_Act_Trustee;

    /**
     * Encodes the specified SC_Maajan_Act_Trustee message. Does not implicitly {@link SC_Maajan_Act_Trustee.verify|verify} messages.
     * @param message SC_Maajan_Act_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Act_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Act_Trustee message, length delimited. Does not implicitly {@link SC_Maajan_Act_Trustee.verify|verify} messages.
     * @param message SC_Maajan_Act_Trustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Act_Trustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Act_Trustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Act_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Act_Trustee;

    /**
     * Decodes a SC_Maajan_Act_Trustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Act_Trustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Act_Trustee;

    /**
     * Verifies a SC_Maajan_Act_Trustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Act_Trustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Act_Trustee
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Act_Trustee;

    /**
     * Creates a plain object from a SC_Maajan_Act_Trustee message. Also converts values to other types if specified.
     * @param message SC_Maajan_Act_Trustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Act_Trustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Act_Trustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Act_Trustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23113
    }
}

/** Properties of a Maajan_Balance_Score. */
export interface IMaajan_Balance_Score {

    /** Maajan_Balance_Score score */
    score?: (number|null);

    /** Maajan_Balance_Score type */
    type?: (number|null);

    /** Maajan_Balance_Score tile */
    tile?: (number|null);

    /** Maajan_Balance_Score count */
    count?: (number|null);

    /** Maajan_Balance_Score fan */
    fan?: (number|null);
}

/** Represents a Maajan_Balance_Score. */
export class Maajan_Balance_Score implements IMaajan_Balance_Score {

    /**
     * Constructs a new Maajan_Balance_Score.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Balance_Score);

    /** Maajan_Balance_Score score. */
    public score: number;

    /** Maajan_Balance_Score type. */
    public type: number;

    /** Maajan_Balance_Score tile. */
    public tile: number;

    /** Maajan_Balance_Score count. */
    public count: number;

    /** Maajan_Balance_Score fan. */
    public fan: number;

    /**
     * Creates a new Maajan_Balance_Score instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Balance_Score instance
     */
    public static create(properties?: IMaajan_Balance_Score): Maajan_Balance_Score;

    /**
     * Encodes the specified Maajan_Balance_Score message. Does not implicitly {@link Maajan_Balance_Score.verify|verify} messages.
     * @param message Maajan_Balance_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Balance_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Balance_Score message, length delimited. Does not implicitly {@link Maajan_Balance_Score.verify|verify} messages.
     * @param message Maajan_Balance_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Balance_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Balance_Score message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Balance_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Balance_Score;

    /**
     * Decodes a Maajan_Balance_Score message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Balance_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Balance_Score;

    /**
     * Verifies a Maajan_Balance_Score message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Balance_Score message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Balance_Score
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Balance_Score;

    /**
     * Creates a plain object from a Maajan_Balance_Score message. Also converts values to other types if specified.
     * @param message Maajan_Balance_Score
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Balance_Score, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Balance_Score to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Balance_Item. */
export interface IMaajan_Balance_Item {

    /** Maajan_Balance_Item type */
    type?: (Maajan_Balance_Item.ItemType|null);

    /** Maajan_Balance_Item typescore */
    typescore?: (IMaajan_Balance_Score[]|null);
}

/** Represents a Maajan_Balance_Item. */
export class Maajan_Balance_Item implements IMaajan_Balance_Item {

    /**
     * Constructs a new Maajan_Balance_Item.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Balance_Item);

    /** Maajan_Balance_Item type. */
    public type: Maajan_Balance_Item.ItemType;

    /** Maajan_Balance_Item typescore. */
    public typescore: IMaajan_Balance_Score[];

    /**
     * Creates a new Maajan_Balance_Item instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Balance_Item instance
     */
    public static create(properties?: IMaajan_Balance_Item): Maajan_Balance_Item;

    /**
     * Encodes the specified Maajan_Balance_Item message. Does not implicitly {@link Maajan_Balance_Item.verify|verify} messages.
     * @param message Maajan_Balance_Item message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Balance_Item, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Balance_Item message, length delimited. Does not implicitly {@link Maajan_Balance_Item.verify|verify} messages.
     * @param message Maajan_Balance_Item message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Balance_Item, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Balance_Item message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Balance_Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Balance_Item;

    /**
     * Decodes a Maajan_Balance_Item message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Balance_Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Balance_Item;

    /**
     * Verifies a Maajan_Balance_Item message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Balance_Item message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Balance_Item
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Balance_Item;

    /**
     * Creates a plain object from a Maajan_Balance_Item message. Also converts values to other types if specified.
     * @param message Maajan_Balance_Item
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Balance_Item, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Balance_Item to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace Maajan_Balance_Item {

    /** ItemType enum. */
    enum ItemType {
        Nil = 0,
        Hu = 1,
        ZiMo = 2,
        Men = 3,
        MenZiMo = 4
    }
}

/** Properties of a Maajan_Blanace_Player. */
export interface IMaajan_Blanace_Player {

    /** Maajan_Blanace_Player chairId */
    chairId?: (number|null);

    /** Maajan_Blanace_Player hu */
    hu?: (boolean|null);

    /** Maajan_Blanace_Player huFan */
    huFan?: (number|null);

    /** Maajan_Blanace_Player totalScore */
    totalScore?: (number|null);

    /** Maajan_Blanace_Player roundScore */
    roundScore?: (number|null);

    /** Maajan_Blanace_Player items */
    items?: (IMaajan_Balance_Item[]|null);

    /** Maajan_Blanace_Player gang */
    gang?: (IMaajan_Balance_Score[]|null);

    /** Maajan_Blanace_Player ji */
    ji?: (IMaajan_Balance_Score[]|null);

    /** Maajan_Blanace_Player status */
    status?: (Maajan_Blanace_Player.BalanceStatus|null);

    /** Maajan_Blanace_Player huTile */
    huTile?: (number|null);

    /** Maajan_Blanace_Player roundMoney */
    roundMoney?: (number|null);

    /** Maajan_Blanace_Player totalMoney */
    totalMoney?: (number|null);
}

/** Represents a Maajan_Blanace_Player. */
export class Maajan_Blanace_Player implements IMaajan_Blanace_Player {

    /**
     * Constructs a new Maajan_Blanace_Player.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Blanace_Player);

    /** Maajan_Blanace_Player chairId. */
    public chairId: number;

    /** Maajan_Blanace_Player hu. */
    public hu: boolean;

    /** Maajan_Blanace_Player huFan. */
    public huFan: number;

    /** Maajan_Blanace_Player totalScore. */
    public totalScore: number;

    /** Maajan_Blanace_Player roundScore. */
    public roundScore: number;

    /** Maajan_Blanace_Player items. */
    public items: IMaajan_Balance_Item[];

    /** Maajan_Blanace_Player gang. */
    public gang: IMaajan_Balance_Score[];

    /** Maajan_Blanace_Player ji. */
    public ji: IMaajan_Balance_Score[];

    /** Maajan_Blanace_Player status. */
    public status: Maajan_Blanace_Player.BalanceStatus;

    /** Maajan_Blanace_Player huTile. */
    public huTile: number;

    /** Maajan_Blanace_Player roundMoney. */
    public roundMoney: number;

    /** Maajan_Blanace_Player totalMoney. */
    public totalMoney: number;

    /**
     * Creates a new Maajan_Blanace_Player instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Blanace_Player instance
     */
    public static create(properties?: IMaajan_Blanace_Player): Maajan_Blanace_Player;

    /**
     * Encodes the specified Maajan_Blanace_Player message. Does not implicitly {@link Maajan_Blanace_Player.verify|verify} messages.
     * @param message Maajan_Blanace_Player message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Blanace_Player, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Blanace_Player message, length delimited. Does not implicitly {@link Maajan_Blanace_Player.verify|verify} messages.
     * @param message Maajan_Blanace_Player message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Blanace_Player, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Blanace_Player message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Blanace_Player
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Blanace_Player;

    /**
     * Decodes a Maajan_Blanace_Player message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Blanace_Player
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Blanace_Player;

    /**
     * Verifies a Maajan_Blanace_Player message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Blanace_Player message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Blanace_Player
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Blanace_Player;

    /**
     * Creates a plain object from a Maajan_Blanace_Player message. Also converts values to other types if specified.
     * @param message Maajan_Blanace_Player
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Blanace_Player, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Blanace_Player to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace Maajan_Blanace_Player {

    /** BalanceStatus enum. */
    enum BalanceStatus {
        Nil = 0,
        Hu = 1,
        JiaoPai = 2,
        WeiJiao = 3
    }
}

/** Properties of a SC_Maajan_Game_Finish. */
export interface ISC_Maajan_Game_Finish {

    /** SC_Maajan_Game_Finish players */
    players?: (IMaajan_Player_Info[]|null);

    /** SC_Maajan_Game_Finish playerBalance */
    playerBalance?: (IMaajan_Blanace_Player[]|null);

    /** SC_Maajan_Game_Finish benJi */
    benJi?: (number|null);
}

/** Represents a SC_Maajan_Game_Finish. */
export class SC_Maajan_Game_Finish implements ISC_Maajan_Game_Finish {

    /**
     * Constructs a new SC_Maajan_Game_Finish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Game_Finish);

    /** SC_Maajan_Game_Finish players. */
    public players: IMaajan_Player_Info[];

    /** SC_Maajan_Game_Finish playerBalance. */
    public playerBalance: IMaajan_Blanace_Player[];

    /** SC_Maajan_Game_Finish benJi. */
    public benJi: number;

    /**
     * Creates a new SC_Maajan_Game_Finish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Game_Finish instance
     */
    public static create(properties?: ISC_Maajan_Game_Finish): SC_Maajan_Game_Finish;

    /**
     * Encodes the specified SC_Maajan_Game_Finish message. Does not implicitly {@link SC_Maajan_Game_Finish.verify|verify} messages.
     * @param message SC_Maajan_Game_Finish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Game_Finish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Game_Finish message, length delimited. Does not implicitly {@link SC_Maajan_Game_Finish.verify|verify} messages.
     * @param message SC_Maajan_Game_Finish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Game_Finish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Game_Finish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Game_Finish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Game_Finish;

    /**
     * Decodes a SC_Maajan_Game_Finish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Game_Finish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Game_Finish;

    /**
     * Verifies a SC_Maajan_Game_Finish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Game_Finish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Game_Finish
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Game_Finish;

    /**
     * Creates a plain object from a SC_Maajan_Game_Finish message. Also converts values to other types if specified.
     * @param message SC_Maajan_Game_Finish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Game_Finish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Game_Finish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Game_Finish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23115
    }
}

/** Properties of an Action. */
export interface IAction {

    /** Action action */
    action?: (number|null);

    /** Action tile */
    tile?: (number|null);

    /** Action substituteNum */
    substituteNum?: (number|null);
}

/** Represents an Action. */
export class Action implements IAction {

    /**
     * Constructs a new Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAction);

    /** Action action. */
    public action: number;

    /** Action tile. */
    public tile: number;

    /** Action substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Action instance
     */
    public static create(properties?: IAction): Action;

    /**
     * Encodes the specified Action message. Does not implicitly {@link Action.verify|verify} messages.
     * @param message Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Action message, length delimited. Does not implicitly {@link Action.verify|verify} messages.
     * @param message Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Action;

    /**
     * Decodes an Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Action;

    /**
     * Verifies an Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Action
     */
    public static fromObject(object: { [k: string]: any }): Action;

    /**
     * Creates a plain object from an Action message. Also converts values to other types if specified.
     * @param message Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_WaitingDoActions. */
export interface ISC_WaitingDoActions {

    /** SC_WaitingDoActions chairId */
    chairId?: (number|null);

    /** SC_WaitingDoActions actions */
    actions?: (IAction[]|null);

    /** SC_WaitingDoActions sessionId */
    sessionId?: (number|null);
}

/** Represents a SC_WaitingDoActions. */
export class SC_WaitingDoActions implements ISC_WaitingDoActions {

    /**
     * Constructs a new SC_WaitingDoActions.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_WaitingDoActions);

    /** SC_WaitingDoActions chairId. */
    public chairId: number;

    /** SC_WaitingDoActions actions. */
    public actions: IAction[];

    /** SC_WaitingDoActions sessionId. */
    public sessionId: number;

    /**
     * Creates a new SC_WaitingDoActions instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_WaitingDoActions instance
     */
    public static create(properties?: ISC_WaitingDoActions): SC_WaitingDoActions;

    /**
     * Encodes the specified SC_WaitingDoActions message. Does not implicitly {@link SC_WaitingDoActions.verify|verify} messages.
     * @param message SC_WaitingDoActions message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_WaitingDoActions, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_WaitingDoActions message, length delimited. Does not implicitly {@link SC_WaitingDoActions.verify|verify} messages.
     * @param message SC_WaitingDoActions message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_WaitingDoActions, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_WaitingDoActions message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_WaitingDoActions
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_WaitingDoActions;

    /**
     * Decodes a SC_WaitingDoActions message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_WaitingDoActions
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_WaitingDoActions;

    /**
     * Verifies a SC_WaitingDoActions message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_WaitingDoActions message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_WaitingDoActions
     */
    public static fromObject(object: { [k: string]: any }): SC_WaitingDoActions;

    /**
     * Creates a plain object from a SC_WaitingDoActions message. Also converts values to other types if specified.
     * @param message SC_WaitingDoActions
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_WaitingDoActions, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_WaitingDoActions to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_WaitingDoActions {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23116
    }
}

/** Properties of a CS_Maajan_Do_Action. */
export interface ICS_Maajan_Do_Action {

    /** CS_Maajan_Do_Action action */
    action?: (number|null);

    /** CS_Maajan_Do_Action valueTile */
    valueTile?: (number|null);

    /** CS_Maajan_Do_Action sessionId */
    sessionId?: (number|null);

    /** CS_Maajan_Do_Action substituteNum */
    substituteNum?: (number|null);
}

/** Represents a CS_Maajan_Do_Action. */
export class CS_Maajan_Do_Action implements ICS_Maajan_Do_Action {

    /**
     * Constructs a new CS_Maajan_Do_Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Maajan_Do_Action);

    /** CS_Maajan_Do_Action action. */
    public action: number;

    /** CS_Maajan_Do_Action valueTile. */
    public valueTile: number;

    /** CS_Maajan_Do_Action sessionId. */
    public sessionId: number;

    /** CS_Maajan_Do_Action substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new CS_Maajan_Do_Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Maajan_Do_Action instance
     */
    public static create(properties?: ICS_Maajan_Do_Action): CS_Maajan_Do_Action;

    /**
     * Encodes the specified CS_Maajan_Do_Action message. Does not implicitly {@link CS_Maajan_Do_Action.verify|verify} messages.
     * @param message CS_Maajan_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Maajan_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Maajan_Do_Action message, length delimited. Does not implicitly {@link CS_Maajan_Do_Action.verify|verify} messages.
     * @param message CS_Maajan_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Maajan_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Maajan_Do_Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Maajan_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Maajan_Do_Action;

    /**
     * Decodes a CS_Maajan_Do_Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Maajan_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Maajan_Do_Action;

    /**
     * Verifies a CS_Maajan_Do_Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Maajan_Do_Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Maajan_Do_Action
     */
    public static fromObject(object: { [k: string]: any }): CS_Maajan_Do_Action;

    /**
     * Creates a plain object from a CS_Maajan_Do_Action message. Also converts values to other types if specified.
     * @param message CS_Maajan_Do_Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Maajan_Do_Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Maajan_Do_Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Maajan_Do_Action {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23002
    }
}

/** Properties of a SC_Maajan_Do_Action_Commit. */
export interface ISC_Maajan_Do_Action_Commit {

    /** SC_Maajan_Do_Action_Commit chairId */
    chairId?: (number|null);

    /** SC_Maajan_Do_Action_Commit action */
    action?: (number|null);

    /** SC_Maajan_Do_Action_Commit valueTile */
    valueTile?: (number|null);

    /** SC_Maajan_Do_Action_Commit targetChairId */
    targetChairId?: (number|null);

    /** SC_Maajan_Do_Action_Commit sessionId */
    sessionId?: (number|null);

    /** SC_Maajan_Do_Action_Commit substituteNum */
    substituteNum?: (number|null);
}

/** Represents a SC_Maajan_Do_Action_Commit. */
export class SC_Maajan_Do_Action_Commit implements ISC_Maajan_Do_Action_Commit {

    /**
     * Constructs a new SC_Maajan_Do_Action_Commit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Do_Action_Commit);

    /** SC_Maajan_Do_Action_Commit chairId. */
    public chairId: number;

    /** SC_Maajan_Do_Action_Commit action. */
    public action: number;

    /** SC_Maajan_Do_Action_Commit valueTile. */
    public valueTile: number;

    /** SC_Maajan_Do_Action_Commit targetChairId. */
    public targetChairId: number;

    /** SC_Maajan_Do_Action_Commit sessionId. */
    public sessionId: number;

    /** SC_Maajan_Do_Action_Commit substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new SC_Maajan_Do_Action_Commit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Do_Action_Commit instance
     */
    public static create(properties?: ISC_Maajan_Do_Action_Commit): SC_Maajan_Do_Action_Commit;

    /**
     * Encodes the specified SC_Maajan_Do_Action_Commit message. Does not implicitly {@link SC_Maajan_Do_Action_Commit.verify|verify} messages.
     * @param message SC_Maajan_Do_Action_Commit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Do_Action_Commit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Do_Action_Commit message, length delimited. Does not implicitly {@link SC_Maajan_Do_Action_Commit.verify|verify} messages.
     * @param message SC_Maajan_Do_Action_Commit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Do_Action_Commit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Do_Action_Commit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Do_Action_Commit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Do_Action_Commit;

    /**
     * Decodes a SC_Maajan_Do_Action_Commit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Do_Action_Commit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Do_Action_Commit;

    /**
     * Verifies a SC_Maajan_Do_Action_Commit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Do_Action_Commit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Do_Action_Commit
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Do_Action_Commit;

    /**
     * Creates a plain object from a SC_Maajan_Do_Action_Commit message. Also converts values to other types if specified.
     * @param message SC_Maajan_Do_Action_Commit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Do_Action_Commit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Do_Action_Commit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Do_Action_Commit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23004
    }
}

/** Properties of a SC_Maajan_Do_Action. */
export interface ISC_Maajan_Do_Action {

    /** SC_Maajan_Do_Action chairId */
    chairId?: (number|null);

    /** SC_Maajan_Do_Action action */
    action?: (number|null);

    /** SC_Maajan_Do_Action valueTile */
    valueTile?: (number|null);

    /** SC_Maajan_Do_Action targetChairId */
    targetChairId?: (number|null);

    /** SC_Maajan_Do_Action sessionId */
    sessionId?: (number|null);

    /** SC_Maajan_Do_Action substituteNum */
    substituteNum?: (number|null);
}

/** Represents a SC_Maajan_Do_Action. */
export class SC_Maajan_Do_Action implements ISC_Maajan_Do_Action {

    /**
     * Constructs a new SC_Maajan_Do_Action.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Do_Action);

    /** SC_Maajan_Do_Action chairId. */
    public chairId: number;

    /** SC_Maajan_Do_Action action. */
    public action: number;

    /** SC_Maajan_Do_Action valueTile. */
    public valueTile: number;

    /** SC_Maajan_Do_Action targetChairId. */
    public targetChairId: number;

    /** SC_Maajan_Do_Action sessionId. */
    public sessionId: number;

    /** SC_Maajan_Do_Action substituteNum. */
    public substituteNum: number;

    /**
     * Creates a new SC_Maajan_Do_Action instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Do_Action instance
     */
    public static create(properties?: ISC_Maajan_Do_Action): SC_Maajan_Do_Action;

    /**
     * Encodes the specified SC_Maajan_Do_Action message. Does not implicitly {@link SC_Maajan_Do_Action.verify|verify} messages.
     * @param message SC_Maajan_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Do_Action message, length delimited. Does not implicitly {@link SC_Maajan_Do_Action.verify|verify} messages.
     * @param message SC_Maajan_Do_Action message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Do_Action, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Do_Action message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Do_Action;

    /**
     * Decodes a SC_Maajan_Do_Action message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Do_Action
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Do_Action;

    /**
     * Verifies a SC_Maajan_Do_Action message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Do_Action message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Do_Action
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Do_Action;

    /**
     * Creates a plain object from a SC_Maajan_Do_Action message. Also converts values to other types if specified.
     * @param message SC_Maajan_Do_Action
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Do_Action, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Do_Action to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Do_Action {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23118
    }
}

/** Properties of a CS_Maajan_Action_Discard. */
export interface ICS_Maajan_Action_Discard {

    /** CS_Maajan_Action_Discard tile */
    tile?: (number|null);
}

/** Represents a CS_Maajan_Action_Discard. */
export class CS_Maajan_Action_Discard implements ICS_Maajan_Action_Discard {

    /**
     * Constructs a new CS_Maajan_Action_Discard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Maajan_Action_Discard);

    /** CS_Maajan_Action_Discard tile. */
    public tile: number;

    /**
     * Creates a new CS_Maajan_Action_Discard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Maajan_Action_Discard instance
     */
    public static create(properties?: ICS_Maajan_Action_Discard): CS_Maajan_Action_Discard;

    /**
     * Encodes the specified CS_Maajan_Action_Discard message. Does not implicitly {@link CS_Maajan_Action_Discard.verify|verify} messages.
     * @param message CS_Maajan_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Maajan_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Maajan_Action_Discard message, length delimited. Does not implicitly {@link CS_Maajan_Action_Discard.verify|verify} messages.
     * @param message CS_Maajan_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Maajan_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Maajan_Action_Discard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Maajan_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Maajan_Action_Discard;

    /**
     * Decodes a CS_Maajan_Action_Discard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Maajan_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Maajan_Action_Discard;

    /**
     * Verifies a CS_Maajan_Action_Discard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Maajan_Action_Discard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Maajan_Action_Discard
     */
    public static fromObject(object: { [k: string]: any }): CS_Maajan_Action_Discard;

    /**
     * Creates a plain object from a CS_Maajan_Action_Discard message. Also converts values to other types if specified.
     * @param message CS_Maajan_Action_Discard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Maajan_Action_Discard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Maajan_Action_Discard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Maajan_Action_Discard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23003
    }
}

/** Properties of a SC_Maajan_Action_Discard. */
export interface ISC_Maajan_Action_Discard {

    /** SC_Maajan_Action_Discard chairId */
    chairId?: (number|null);

    /** SC_Maajan_Action_Discard tile */
    tile?: (number|null);
}

/** Represents a SC_Maajan_Action_Discard. */
export class SC_Maajan_Action_Discard implements ISC_Maajan_Action_Discard {

    /**
     * Constructs a new SC_Maajan_Action_Discard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Action_Discard);

    /** SC_Maajan_Action_Discard chairId. */
    public chairId: number;

    /** SC_Maajan_Action_Discard tile. */
    public tile: number;

    /**
     * Creates a new SC_Maajan_Action_Discard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Action_Discard instance
     */
    public static create(properties?: ISC_Maajan_Action_Discard): SC_Maajan_Action_Discard;

    /**
     * Encodes the specified SC_Maajan_Action_Discard message. Does not implicitly {@link SC_Maajan_Action_Discard.verify|verify} messages.
     * @param message SC_Maajan_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Action_Discard message, length delimited. Does not implicitly {@link SC_Maajan_Action_Discard.verify|verify} messages.
     * @param message SC_Maajan_Action_Discard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Action_Discard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Action_Discard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Action_Discard;

    /**
     * Decodes a SC_Maajan_Action_Discard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Action_Discard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Action_Discard;

    /**
     * Verifies a SC_Maajan_Action_Discard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Action_Discard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Action_Discard
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Action_Discard;

    /**
     * Creates a plain object from a SC_Maajan_Action_Discard message. Also converts values to other types if specified.
     * @param message SC_Maajan_Action_Discard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Action_Discard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Action_Discard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Action_Discard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23119
    }
}

/** Properties of a Maajan_Player_Score. */
export interface IMaajan_Player_Score {

    /** Maajan_Player_Score chairId */
    chairId?: (number|null);

    /** Maajan_Player_Score guid */
    guid?: (number|null);

    /** Maajan_Player_Score score */
    score?: (number|null);

    /** Maajan_Player_Score money */
    money?: (number|null);
}

/** Represents a Maajan_Player_Score. */
export class Maajan_Player_Score implements IMaajan_Player_Score {

    /**
     * Constructs a new Maajan_Player_Score.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Player_Score);

    /** Maajan_Player_Score chairId. */
    public chairId: number;

    /** Maajan_Player_Score guid. */
    public guid: number;

    /** Maajan_Player_Score score. */
    public score: number;

    /** Maajan_Player_Score money. */
    public money: number;

    /**
     * Creates a new Maajan_Player_Score instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Player_Score instance
     */
    public static create(properties?: IMaajan_Player_Score): Maajan_Player_Score;

    /**
     * Encodes the specified Maajan_Player_Score message. Does not implicitly {@link Maajan_Player_Score.verify|verify} messages.
     * @param message Maajan_Player_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Player_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Player_Score message, length delimited. Does not implicitly {@link Maajan_Player_Score.verify|verify} messages.
     * @param message Maajan_Player_Score message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Player_Score, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Player_Score message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Player_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Player_Score;

    /**
     * Decodes a Maajan_Player_Score message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Player_Score
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Player_Score;

    /**
     * Verifies a Maajan_Player_Score message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Player_Score message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Player_Score
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Player_Score;

    /**
     * Creates a plain object from a Maajan_Player_Score message. Also converts values to other types if specified.
     * @param message Maajan_Player_Score
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Player_Score, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Player_Score to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_Maajan_Final_Game_Over. */
export interface ISC_Maajan_Final_Game_Over {

    /** SC_Maajan_Final_Game_Over playerScores */
    playerScores?: (IMaajan_Player_Score[]|null);
}

/** Represents a SC_Maajan_Final_Game_Over. */
export class SC_Maajan_Final_Game_Over implements ISC_Maajan_Final_Game_Over {

    /**
     * Constructs a new SC_Maajan_Final_Game_Over.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_Final_Game_Over);

    /** SC_Maajan_Final_Game_Over playerScores. */
    public playerScores: IMaajan_Player_Score[];

    /**
     * Creates a new SC_Maajan_Final_Game_Over instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_Final_Game_Over instance
     */
    public static create(properties?: ISC_Maajan_Final_Game_Over): SC_Maajan_Final_Game_Over;

    /**
     * Encodes the specified SC_Maajan_Final_Game_Over message. Does not implicitly {@link SC_Maajan_Final_Game_Over.verify|verify} messages.
     * @param message SC_Maajan_Final_Game_Over message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_Final_Game_Over, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_Final_Game_Over message, length delimited. Does not implicitly {@link SC_Maajan_Final_Game_Over.verify|verify} messages.
     * @param message SC_Maajan_Final_Game_Over message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_Final_Game_Over, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_Final_Game_Over message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_Final_Game_Over
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_Final_Game_Over;

    /**
     * Decodes a SC_Maajan_Final_Game_Over message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_Final_Game_Over
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_Final_Game_Over;

    /**
     * Verifies a SC_Maajan_Final_Game_Over message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_Final_Game_Over message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_Final_Game_Over
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_Final_Game_Over;

    /**
     * Creates a plain object from a SC_Maajan_Final_Game_Over message. Also converts values to other types if specified.
     * @param message SC_Maajan_Final_Game_Over
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_Final_Game_Over, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_Final_Game_Over to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_Final_Game_Over {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23120
    }
}

/** Properties of a SC_Maajan_StopAction. */
export interface ISC_Maajan_StopAction {

    /** SC_Maajan_StopAction chairId */
    chairId?: (number|null);
}

/** Represents a SC_Maajan_StopAction. */
export class SC_Maajan_StopAction implements ISC_Maajan_StopAction {

    /**
     * Constructs a new SC_Maajan_StopAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Maajan_StopAction);

    /** SC_Maajan_StopAction chairId. */
    public chairId: number;

    /**
     * Creates a new SC_Maajan_StopAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Maajan_StopAction instance
     */
    public static create(properties?: ISC_Maajan_StopAction): SC_Maajan_StopAction;

    /**
     * Encodes the specified SC_Maajan_StopAction message. Does not implicitly {@link SC_Maajan_StopAction.verify|verify} messages.
     * @param message SC_Maajan_StopAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Maajan_StopAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Maajan_StopAction message, length delimited. Does not implicitly {@link SC_Maajan_StopAction.verify|verify} messages.
     * @param message SC_Maajan_StopAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Maajan_StopAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Maajan_StopAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Maajan_StopAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Maajan_StopAction;

    /**
     * Decodes a SC_Maajan_StopAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Maajan_StopAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Maajan_StopAction;

    /**
     * Verifies a SC_Maajan_StopAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Maajan_StopAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Maajan_StopAction
     */
    public static fromObject(object: { [k: string]: any }): SC_Maajan_StopAction;

    /**
     * Creates a plain object from a SC_Maajan_StopAction message. Also converts values to other types if specified.
     * @param message SC_Maajan_StopAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Maajan_StopAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Maajan_StopAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Maajan_StopAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23121
    }
}

/** Properties of a TingTiles. */
export interface ITingTiles {

    /** TingTiles discard */
    discard?: (number|null);

    /** TingTiles tiles */
    tiles?: (number[]|null);
}

/** Represents a TingTiles. */
export class TingTiles implements ITingTiles {

    /**
     * Constructs a new TingTiles.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITingTiles);

    /** TingTiles discard. */
    public discard: number;

    /** TingTiles tiles. */
    public tiles: number[];

    /**
     * Creates a new TingTiles instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TingTiles instance
     */
    public static create(properties?: ITingTiles): TingTiles;

    /**
     * Encodes the specified TingTiles message. Does not implicitly {@link TingTiles.verify|verify} messages.
     * @param message TingTiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITingTiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TingTiles message, length delimited. Does not implicitly {@link TingTiles.verify|verify} messages.
     * @param message TingTiles message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITingTiles, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TingTiles message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TingTiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TingTiles;

    /**
     * Decodes a TingTiles message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TingTiles
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TingTiles;

    /**
     * Verifies a TingTiles message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TingTiles message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TingTiles
     */
    public static fromObject(object: { [k: string]: any }): TingTiles;

    /**
     * Creates a plain object from a TingTiles message. Also converts values to other types if specified.
     * @param message TingTiles
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TingTiles, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TingTiles to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_WaitingTing. */
export interface ISC_WaitingTing {

    /** SC_WaitingTing ting */
    ting?: (ITingTiles[]|null);
}

/** Represents a SC_WaitingTing. */
export class SC_WaitingTing implements ISC_WaitingTing {

    /**
     * Constructs a new SC_WaitingTing.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_WaitingTing);

    /** SC_WaitingTing ting. */
    public ting: ITingTiles[];

    /**
     * Creates a new SC_WaitingTing instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_WaitingTing instance
     */
    public static create(properties?: ISC_WaitingTing): SC_WaitingTing;

    /**
     * Encodes the specified SC_WaitingTing message. Does not implicitly {@link SC_WaitingTing.verify|verify} messages.
     * @param message SC_WaitingTing message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_WaitingTing, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_WaitingTing message, length delimited. Does not implicitly {@link SC_WaitingTing.verify|verify} messages.
     * @param message SC_WaitingTing message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_WaitingTing, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_WaitingTing message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_WaitingTing
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_WaitingTing;

    /**
     * Decodes a SC_WaitingTing message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_WaitingTing
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_WaitingTing;

    /**
     * Verifies a SC_WaitingTing message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_WaitingTing message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_WaitingTing
     */
    public static fromObject(object: { [k: string]: any }): SC_WaitingTing;

    /**
     * Creates a plain object from a SC_WaitingTing message. Also converts values to other types if specified.
     * @param message SC_WaitingTing
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_WaitingTing, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_WaitingTing to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_WaitingTing {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23122
    }
}

/** Properties of a HuanPaiStatus. */
export interface IHuanPaiStatus {

    /** HuanPaiStatus chairId */
    chairId?: (number|null);

    /** HuanPaiStatus done */
    done?: (boolean|null);
}

/** Represents a HuanPaiStatus. */
export class HuanPaiStatus implements IHuanPaiStatus {

    /**
     * Constructs a new HuanPaiStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IHuanPaiStatus);

    /** HuanPaiStatus chairId. */
    public chairId: number;

    /** HuanPaiStatus done. */
    public done: boolean;

    /**
     * Creates a new HuanPaiStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns HuanPaiStatus instance
     */
    public static create(properties?: IHuanPaiStatus): HuanPaiStatus;

    /**
     * Encodes the specified HuanPaiStatus message. Does not implicitly {@link HuanPaiStatus.verify|verify} messages.
     * @param message HuanPaiStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IHuanPaiStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified HuanPaiStatus message, length delimited. Does not implicitly {@link HuanPaiStatus.verify|verify} messages.
     * @param message HuanPaiStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IHuanPaiStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a HuanPaiStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns HuanPaiStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): HuanPaiStatus;

    /**
     * Decodes a HuanPaiStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns HuanPaiStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): HuanPaiStatus;

    /**
     * Verifies a HuanPaiStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a HuanPaiStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns HuanPaiStatus
     */
    public static fromObject(object: { [k: string]: any }): HuanPaiStatus;

    /**
     * Creates a plain object from a HuanPaiStatus message. Also converts values to other types if specified.
     * @param message HuanPaiStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: HuanPaiStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this HuanPaiStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_AllowHuanPai. */
export interface ISC_AllowHuanPai {
}

/** Represents a SC_AllowHuanPai. */
export class SC_AllowHuanPai implements ISC_AllowHuanPai {

    /**
     * Constructs a new SC_AllowHuanPai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowHuanPai);

    /**
     * Creates a new SC_AllowHuanPai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowHuanPai instance
     */
    public static create(properties?: ISC_AllowHuanPai): SC_AllowHuanPai;

    /**
     * Encodes the specified SC_AllowHuanPai message. Does not implicitly {@link SC_AllowHuanPai.verify|verify} messages.
     * @param message SC_AllowHuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowHuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowHuanPai message, length delimited. Does not implicitly {@link SC_AllowHuanPai.verify|verify} messages.
     * @param message SC_AllowHuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowHuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowHuanPai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowHuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowHuanPai;

    /**
     * Decodes a SC_AllowHuanPai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowHuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowHuanPai;

    /**
     * Verifies a SC_AllowHuanPai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowHuanPai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowHuanPai
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowHuanPai;

    /**
     * Creates a plain object from a SC_AllowHuanPai message. Also converts values to other types if specified.
     * @param message SC_AllowHuanPai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowHuanPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowHuanPai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowHuanPai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23123
    }
}

/** Properties of a CS_HuanPai. */
export interface ICS_HuanPai {

    /** CS_HuanPai tiles */
    tiles?: (number[]|null);
}

/** Represents a CS_HuanPai. */
export class CS_HuanPai implements ICS_HuanPai {

    /**
     * Constructs a new CS_HuanPai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_HuanPai);

    /** CS_HuanPai tiles. */
    public tiles: number[];

    /**
     * Creates a new CS_HuanPai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_HuanPai instance
     */
    public static create(properties?: ICS_HuanPai): CS_HuanPai;

    /**
     * Encodes the specified CS_HuanPai message. Does not implicitly {@link CS_HuanPai.verify|verify} messages.
     * @param message CS_HuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_HuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_HuanPai message, length delimited. Does not implicitly {@link CS_HuanPai.verify|verify} messages.
     * @param message CS_HuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_HuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_HuanPai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_HuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_HuanPai;

    /**
     * Decodes a CS_HuanPai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_HuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_HuanPai;

    /**
     * Verifies a CS_HuanPai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_HuanPai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_HuanPai
     */
    public static fromObject(object: { [k: string]: any }): CS_HuanPai;

    /**
     * Creates a plain object from a CS_HuanPai message. Also converts values to other types if specified.
     * @param message CS_HuanPai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_HuanPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_HuanPai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_HuanPai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23124
    }
}

/** Properties of a SC_HuanPai. */
export interface ISC_HuanPai {

    /** SC_HuanPai result */
    result?: (number|null);

    /** SC_HuanPai chairId */
    chairId?: (number|null);

    /** SC_HuanPai done */
    done?: (boolean|null);

    /** SC_HuanPai selfChoice */
    selfChoice?: (number[]|null);
}

/** Represents a SC_HuanPai. */
export class SC_HuanPai implements ISC_HuanPai {

    /**
     * Constructs a new SC_HuanPai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_HuanPai);

    /** SC_HuanPai result. */
    public result: number;

    /** SC_HuanPai chairId. */
    public chairId: number;

    /** SC_HuanPai done. */
    public done: boolean;

    /** SC_HuanPai selfChoice. */
    public selfChoice: number[];

    /**
     * Creates a new SC_HuanPai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_HuanPai instance
     */
    public static create(properties?: ISC_HuanPai): SC_HuanPai;

    /**
     * Encodes the specified SC_HuanPai message. Does not implicitly {@link SC_HuanPai.verify|verify} messages.
     * @param message SC_HuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_HuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_HuanPai message, length delimited. Does not implicitly {@link SC_HuanPai.verify|verify} messages.
     * @param message SC_HuanPai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_HuanPai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_HuanPai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_HuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_HuanPai;

    /**
     * Decodes a SC_HuanPai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_HuanPai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_HuanPai;

    /**
     * Verifies a SC_HuanPai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_HuanPai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_HuanPai
     */
    public static fromObject(object: { [k: string]: any }): SC_HuanPai;

    /**
     * Creates a plain object from a SC_HuanPai message. Also converts values to other types if specified.
     * @param message SC_HuanPai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_HuanPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_HuanPai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_HuanPai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23125
    }
}

/** Properties of a SC_HuanPaiCommit. */
export interface ISC_HuanPaiCommit {

    /** SC_HuanPaiCommit newShouPai */
    newShouPai?: (number[]|null);

    /** SC_HuanPaiCommit huanOrder */
    huanOrder?: (number|null);
}

/** Represents a SC_HuanPaiCommit. */
export class SC_HuanPaiCommit implements ISC_HuanPaiCommit {

    /**
     * Constructs a new SC_HuanPaiCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_HuanPaiCommit);

    /** SC_HuanPaiCommit newShouPai. */
    public newShouPai: number[];

    /** SC_HuanPaiCommit huanOrder. */
    public huanOrder: number;

    /**
     * Creates a new SC_HuanPaiCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_HuanPaiCommit instance
     */
    public static create(properties?: ISC_HuanPaiCommit): SC_HuanPaiCommit;

    /**
     * Encodes the specified SC_HuanPaiCommit message. Does not implicitly {@link SC_HuanPaiCommit.verify|verify} messages.
     * @param message SC_HuanPaiCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_HuanPaiCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_HuanPaiCommit message, length delimited. Does not implicitly {@link SC_HuanPaiCommit.verify|verify} messages.
     * @param message SC_HuanPaiCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_HuanPaiCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_HuanPaiCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_HuanPaiCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_HuanPaiCommit;

    /**
     * Decodes a SC_HuanPaiCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_HuanPaiCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_HuanPaiCommit;

    /**
     * Verifies a SC_HuanPaiCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_HuanPaiCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_HuanPaiCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_HuanPaiCommit;

    /**
     * Creates a plain object from a SC_HuanPaiCommit message. Also converts values to other types if specified.
     * @param message SC_HuanPaiCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_HuanPaiCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_HuanPaiCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_HuanPaiCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23126
    }
}

/** Properties of a SC_HuanPaiStatus. */
export interface ISC_HuanPaiStatus {

    /** SC_HuanPaiStatus selfChoice */
    selfChoice?: (number[]|null);

    /** SC_HuanPaiStatus status */
    status?: (IHuanPaiStatus[]|null);
}

/** Represents a SC_HuanPaiStatus. */
export class SC_HuanPaiStatus implements ISC_HuanPaiStatus {

    /**
     * Constructs a new SC_HuanPaiStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_HuanPaiStatus);

    /** SC_HuanPaiStatus selfChoice. */
    public selfChoice: number[];

    /** SC_HuanPaiStatus status. */
    public status: IHuanPaiStatus[];

    /**
     * Creates a new SC_HuanPaiStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_HuanPaiStatus instance
     */
    public static create(properties?: ISC_HuanPaiStatus): SC_HuanPaiStatus;

    /**
     * Encodes the specified SC_HuanPaiStatus message. Does not implicitly {@link SC_HuanPaiStatus.verify|verify} messages.
     * @param message SC_HuanPaiStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_HuanPaiStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_HuanPaiStatus message, length delimited. Does not implicitly {@link SC_HuanPaiStatus.verify|verify} messages.
     * @param message SC_HuanPaiStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_HuanPaiStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_HuanPaiStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_HuanPaiStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_HuanPaiStatus;

    /**
     * Decodes a SC_HuanPaiStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_HuanPaiStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_HuanPaiStatus;

    /**
     * Verifies a SC_HuanPaiStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_HuanPaiStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_HuanPaiStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_HuanPaiStatus;

    /**
     * Creates a plain object from a SC_HuanPaiStatus message. Also converts values to other types if specified.
     * @param message SC_HuanPaiStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_HuanPaiStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_HuanPaiStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_HuanPaiStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23127
    }
}

/** Properties of a DingQueInfo. */
export interface IDingQueInfo {

    /** DingQueInfo chairId */
    chairId?: (number|null);

    /** DingQueInfo men */
    men?: (number|null);
}

/** Represents a DingQueInfo. */
export class DingQueInfo implements IDingQueInfo {

    /**
     * Constructs a new DingQueInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDingQueInfo);

    /** DingQueInfo chairId. */
    public chairId: number;

    /** DingQueInfo men. */
    public men: number;

    /**
     * Creates a new DingQueInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DingQueInfo instance
     */
    public static create(properties?: IDingQueInfo): DingQueInfo;

    /**
     * Encodes the specified DingQueInfo message. Does not implicitly {@link DingQueInfo.verify|verify} messages.
     * @param message DingQueInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDingQueInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DingQueInfo message, length delimited. Does not implicitly {@link DingQueInfo.verify|verify} messages.
     * @param message DingQueInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDingQueInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DingQueInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DingQueInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DingQueInfo;

    /**
     * Decodes a DingQueInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DingQueInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DingQueInfo;

    /**
     * Verifies a DingQueInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DingQueInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DingQueInfo
     */
    public static fromObject(object: { [k: string]: any }): DingQueInfo;

    /**
     * Creates a plain object from a DingQueInfo message. Also converts values to other types if specified.
     * @param message DingQueInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DingQueInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DingQueInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DingQueStatus. */
export interface IDingQueStatus {

    /** DingQueStatus chairId */
    chairId?: (number|null);

    /** DingQueStatus done */
    done?: (boolean|null);
}

/** Represents a DingQueStatus. */
export class DingQueStatus implements IDingQueStatus {

    /**
     * Constructs a new DingQueStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDingQueStatus);

    /** DingQueStatus chairId. */
    public chairId: number;

    /** DingQueStatus done. */
    public done: boolean;

    /**
     * Creates a new DingQueStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DingQueStatus instance
     */
    public static create(properties?: IDingQueStatus): DingQueStatus;

    /**
     * Encodes the specified DingQueStatus message. Does not implicitly {@link DingQueStatus.verify|verify} messages.
     * @param message DingQueStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDingQueStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DingQueStatus message, length delimited. Does not implicitly {@link DingQueStatus.verify|verify} messages.
     * @param message DingQueStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDingQueStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DingQueStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DingQueStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DingQueStatus;

    /**
     * Decodes a DingQueStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DingQueStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DingQueStatus;

    /**
     * Verifies a DingQueStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DingQueStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DingQueStatus
     */
    public static fromObject(object: { [k: string]: any }): DingQueStatus;

    /**
     * Creates a plain object from a DingQueStatus message. Also converts values to other types if specified.
     * @param message DingQueStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DingQueStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DingQueStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_AllowDingQue. */
export interface ISC_AllowDingQue {
}

/** Represents a SC_AllowDingQue. */
export class SC_AllowDingQue implements ISC_AllowDingQue {

    /**
     * Constructs a new SC_AllowDingQue.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowDingQue);

    /**
     * Creates a new SC_AllowDingQue instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowDingQue instance
     */
    public static create(properties?: ISC_AllowDingQue): SC_AllowDingQue;

    /**
     * Encodes the specified SC_AllowDingQue message. Does not implicitly {@link SC_AllowDingQue.verify|verify} messages.
     * @param message SC_AllowDingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowDingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowDingQue message, length delimited. Does not implicitly {@link SC_AllowDingQue.verify|verify} messages.
     * @param message SC_AllowDingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowDingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowDingQue message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowDingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowDingQue;

    /**
     * Decodes a SC_AllowDingQue message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowDingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowDingQue;

    /**
     * Verifies a SC_AllowDingQue message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowDingQue message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowDingQue
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowDingQue;

    /**
     * Creates a plain object from a SC_AllowDingQue message. Also converts values to other types if specified.
     * @param message SC_AllowDingQue
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowDingQue, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowDingQue to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowDingQue {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23128
    }
}

/** Properties of a CS_DingQue. */
export interface ICS_DingQue {

    /** CS_DingQue men */
    men?: (number|null);
}

/** Represents a CS_DingQue. */
export class CS_DingQue implements ICS_DingQue {

    /**
     * Constructs a new CS_DingQue.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_DingQue);

    /** CS_DingQue men. */
    public men: number;

    /**
     * Creates a new CS_DingQue instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_DingQue instance
     */
    public static create(properties?: ICS_DingQue): CS_DingQue;

    /**
     * Encodes the specified CS_DingQue message. Does not implicitly {@link CS_DingQue.verify|verify} messages.
     * @param message CS_DingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_DingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_DingQue message, length delimited. Does not implicitly {@link CS_DingQue.verify|verify} messages.
     * @param message CS_DingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_DingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_DingQue message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_DingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_DingQue;

    /**
     * Decodes a CS_DingQue message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_DingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_DingQue;

    /**
     * Verifies a CS_DingQue message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_DingQue message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_DingQue
     */
    public static fromObject(object: { [k: string]: any }): CS_DingQue;

    /**
     * Creates a plain object from a CS_DingQue message. Also converts values to other types if specified.
     * @param message CS_DingQue
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_DingQue, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_DingQue to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_DingQue {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23129
    }
}

/** Properties of a SC_DingQue. */
export interface ISC_DingQue {

    /** SC_DingQue result */
    result?: (number|null);

    /** SC_DingQue status */
    status?: (IDingQueStatus|null);
}

/** Represents a SC_DingQue. */
export class SC_DingQue implements ISC_DingQue {

    /**
     * Constructs a new SC_DingQue.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DingQue);

    /** SC_DingQue result. */
    public result: number;

    /** SC_DingQue status. */
    public status?: (IDingQueStatus|null);

    /**
     * Creates a new SC_DingQue instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DingQue instance
     */
    public static create(properties?: ISC_DingQue): SC_DingQue;

    /**
     * Encodes the specified SC_DingQue message. Does not implicitly {@link SC_DingQue.verify|verify} messages.
     * @param message SC_DingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DingQue message, length delimited. Does not implicitly {@link SC_DingQue.verify|verify} messages.
     * @param message SC_DingQue message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DingQue, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DingQue message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DingQue;

    /**
     * Decodes a SC_DingQue message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DingQue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DingQue;

    /**
     * Verifies a SC_DingQue message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DingQue message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DingQue
     */
    public static fromObject(object: { [k: string]: any }): SC_DingQue;

    /**
     * Creates a plain object from a SC_DingQue message. Also converts values to other types if specified.
     * @param message SC_DingQue
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DingQue, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DingQue to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DingQue {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23130
    }
}

/** Properties of a SC_DingQueStatus. */
export interface ISC_DingQueStatus {

    /** SC_DingQueStatus queStatus */
    queStatus?: (IDingQueStatus[]|null);

    /** SC_DingQueStatus queInfo */
    queInfo?: (IDingQueInfo[]|null);
}

/** Represents a SC_DingQueStatus. */
export class SC_DingQueStatus implements ISC_DingQueStatus {

    /**
     * Constructs a new SC_DingQueStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DingQueStatus);

    /** SC_DingQueStatus queStatus. */
    public queStatus: IDingQueStatus[];

    /** SC_DingQueStatus queInfo. */
    public queInfo: IDingQueInfo[];

    /**
     * Creates a new SC_DingQueStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DingQueStatus instance
     */
    public static create(properties?: ISC_DingQueStatus): SC_DingQueStatus;

    /**
     * Encodes the specified SC_DingQueStatus message. Does not implicitly {@link SC_DingQueStatus.verify|verify} messages.
     * @param message SC_DingQueStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DingQueStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DingQueStatus message, length delimited. Does not implicitly {@link SC_DingQueStatus.verify|verify} messages.
     * @param message SC_DingQueStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DingQueStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DingQueStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DingQueStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DingQueStatus;

    /**
     * Decodes a SC_DingQueStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DingQueStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DingQueStatus;

    /**
     * Verifies a SC_DingQueStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DingQueStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DingQueStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_DingQueStatus;

    /**
     * Creates a plain object from a SC_DingQueStatus message. Also converts values to other types if specified.
     * @param message SC_DingQueStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DingQueStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DingQueStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DingQueStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23131
    }
}

/** Properties of a SC_DingQueCommit. */
export interface ISC_DingQueCommit {

    /** SC_DingQueCommit dingQues */
    dingQues?: (IDingQueInfo[]|null);
}

/** Represents a SC_DingQueCommit. */
export class SC_DingQueCommit implements ISC_DingQueCommit {

    /**
     * Constructs a new SC_DingQueCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_DingQueCommit);

    /** SC_DingQueCommit dingQues. */
    public dingQues: IDingQueInfo[];

    /**
     * Creates a new SC_DingQueCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_DingQueCommit instance
     */
    public static create(properties?: ISC_DingQueCommit): SC_DingQueCommit;

    /**
     * Encodes the specified SC_DingQueCommit message. Does not implicitly {@link SC_DingQueCommit.verify|verify} messages.
     * @param message SC_DingQueCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_DingQueCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_DingQueCommit message, length delimited. Does not implicitly {@link SC_DingQueCommit.verify|verify} messages.
     * @param message SC_DingQueCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_DingQueCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_DingQueCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_DingQueCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_DingQueCommit;

    /**
     * Decodes a SC_DingQueCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_DingQueCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_DingQueCommit;

    /**
     * Verifies a SC_DingQueCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_DingQueCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_DingQueCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_DingQueCommit;

    /**
     * Creates a plain object from a SC_DingQueCommit message. Also converts values to other types if specified.
     * @param message SC_DingQueCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_DingQueCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_DingQueCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_DingQueCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23132
    }
}

/** Properties of a MaajanXueZhanBalanceType. */
export interface IMaajanXueZhanBalanceType {

    /** MaajanXueZhanBalanceType type */
    type?: (number|null);

    /** MaajanXueZhanBalanceType count */
    count?: (number|null);
}

/** Represents a MaajanXueZhanBalanceType. */
export class MaajanXueZhanBalanceType implements IMaajanXueZhanBalanceType {

    /**
     * Constructs a new MaajanXueZhanBalanceType.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanXueZhanBalanceType);

    /** MaajanXueZhanBalanceType type. */
    public type: number;

    /** MaajanXueZhanBalanceType count. */
    public count: number;

    /**
     * Creates a new MaajanXueZhanBalanceType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanXueZhanBalanceType instance
     */
    public static create(properties?: IMaajanXueZhanBalanceType): MaajanXueZhanBalanceType;

    /**
     * Encodes the specified MaajanXueZhanBalanceType message. Does not implicitly {@link MaajanXueZhanBalanceType.verify|verify} messages.
     * @param message MaajanXueZhanBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanXueZhanBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanXueZhanBalanceType message, length delimited. Does not implicitly {@link MaajanXueZhanBalanceType.verify|verify} messages.
     * @param message MaajanXueZhanBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanXueZhanBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanXueZhanBalanceType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanXueZhanBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanXueZhanBalanceType;

    /**
     * Decodes a MaajanXueZhanBalanceType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanXueZhanBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanXueZhanBalanceType;

    /**
     * Verifies a MaajanXueZhanBalanceType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanXueZhanBalanceType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanXueZhanBalanceType
     */
    public static fromObject(object: { [k: string]: any }): MaajanXueZhanBalanceType;

    /**
     * Creates a plain object from a MaajanXueZhanBalanceType message. Also converts values to other types if specified.
     * @param message MaajanXueZhanBalanceType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanXueZhanBalanceType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanXueZhanBalanceType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MaajanXueZhanBlanacePlayer. */
export interface IMaajanXueZhanBlanacePlayer {

    /** MaajanXueZhanBlanacePlayer chairId */
    chairId?: (number|null);

    /** MaajanXueZhanBlanacePlayer hu */
    hu?: (number|null);

    /** MaajanXueZhanBlanacePlayer huFan */
    huFan?: (number|null);

    /** MaajanXueZhanBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** MaajanXueZhanBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** MaajanXueZhanBlanacePlayer items */
    items?: (IMaajanXueZhanBalanceType[]|null);

    /** MaajanXueZhanBlanacePlayer status */
    status?: (number|null);

    /** MaajanXueZhanBlanacePlayer huTile */
    huTile?: (number|null);

    /** MaajanXueZhanBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** MaajanXueZhanBlanacePlayer totalMoney */
    totalMoney?: (number|null);

    /** MaajanXueZhanBlanacePlayer huIndex */
    huIndex?: (number|null);
}

/** Represents a MaajanXueZhanBlanacePlayer. */
export class MaajanXueZhanBlanacePlayer implements IMaajanXueZhanBlanacePlayer {

    /**
     * Constructs a new MaajanXueZhanBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanXueZhanBlanacePlayer);

    /** MaajanXueZhanBlanacePlayer chairId. */
    public chairId: number;

    /** MaajanXueZhanBlanacePlayer hu. */
    public hu: number;

    /** MaajanXueZhanBlanacePlayer huFan. */
    public huFan: number;

    /** MaajanXueZhanBlanacePlayer totalScore. */
    public totalScore: number;

    /** MaajanXueZhanBlanacePlayer roundScore. */
    public roundScore: number;

    /** MaajanXueZhanBlanacePlayer items. */
    public items: IMaajanXueZhanBalanceType[];

    /** MaajanXueZhanBlanacePlayer status. */
    public status: number;

    /** MaajanXueZhanBlanacePlayer huTile. */
    public huTile: number;

    /** MaajanXueZhanBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** MaajanXueZhanBlanacePlayer totalMoney. */
    public totalMoney: number;

    /** MaajanXueZhanBlanacePlayer huIndex. */
    public huIndex: number;

    /**
     * Creates a new MaajanXueZhanBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanXueZhanBlanacePlayer instance
     */
    public static create(properties?: IMaajanXueZhanBlanacePlayer): MaajanXueZhanBlanacePlayer;

    /**
     * Encodes the specified MaajanXueZhanBlanacePlayer message. Does not implicitly {@link MaajanXueZhanBlanacePlayer.verify|verify} messages.
     * @param message MaajanXueZhanBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanXueZhanBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanXueZhanBlanacePlayer message, length delimited. Does not implicitly {@link MaajanXueZhanBlanacePlayer.verify|verify} messages.
     * @param message MaajanXueZhanBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanXueZhanBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanXueZhanBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanXueZhanBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanXueZhanBlanacePlayer;

    /**
     * Decodes a MaajanXueZhanBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanXueZhanBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanXueZhanBlanacePlayer;

    /**
     * Verifies a MaajanXueZhanBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanXueZhanBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanXueZhanBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): MaajanXueZhanBlanacePlayer;

    /**
     * Creates a plain object from a MaajanXueZhanBlanacePlayer message. Also converts values to other types if specified.
     * @param message MaajanXueZhanBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanXueZhanBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanXueZhanBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_MaajanXueZhanGameFinish. */
export interface ISC_MaajanXueZhanGameFinish {

    /** SC_MaajanXueZhanGameFinish players */
    players?: (IMaajan_Player_Info[]|null);

    /** SC_MaajanXueZhanGameFinish playerBalance */
    playerBalance?: (IMaajanXueZhanBlanacePlayer[]|null);
}

/** Represents a SC_MaajanXueZhanGameFinish. */
export class SC_MaajanXueZhanGameFinish implements ISC_MaajanXueZhanGameFinish {

    /**
     * Constructs a new SC_MaajanXueZhanGameFinish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanXueZhanGameFinish);

    /** SC_MaajanXueZhanGameFinish players. */
    public players: IMaajan_Player_Info[];

    /** SC_MaajanXueZhanGameFinish playerBalance. */
    public playerBalance: IMaajanXueZhanBlanacePlayer[];

    /**
     * Creates a new SC_MaajanXueZhanGameFinish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanXueZhanGameFinish instance
     */
    public static create(properties?: ISC_MaajanXueZhanGameFinish): SC_MaajanXueZhanGameFinish;

    /**
     * Encodes the specified SC_MaajanXueZhanGameFinish message. Does not implicitly {@link SC_MaajanXueZhanGameFinish.verify|verify} messages.
     * @param message SC_MaajanXueZhanGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanXueZhanGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanXueZhanGameFinish message, length delimited. Does not implicitly {@link SC_MaajanXueZhanGameFinish.verify|verify} messages.
     * @param message SC_MaajanXueZhanGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanXueZhanGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanXueZhanGameFinish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanXueZhanGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanXueZhanGameFinish;

    /**
     * Decodes a SC_MaajanXueZhanGameFinish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanXueZhanGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanXueZhanGameFinish;

    /**
     * Verifies a SC_MaajanXueZhanGameFinish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanXueZhanGameFinish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanXueZhanGameFinish
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanXueZhanGameFinish;

    /**
     * Creates a plain object from a SC_MaajanXueZhanGameFinish message. Also converts values to other types if specified.
     * @param message SC_MaajanXueZhanGameFinish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanXueZhanGameFinish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanXueZhanGameFinish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanXueZhanGameFinish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23133
    }
}

/** Properties of a TingTilesInfo. */
export interface ITingTilesInfo {

    /** TingTilesInfo tile */
    tile?: (number|null);

    /** TingTilesInfo fan */
    fan?: (number|null);
}

/** Represents a TingTilesInfo. */
export class TingTilesInfo implements ITingTilesInfo {

    /**
     * Constructs a new TingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITingTilesInfo);

    /** TingTilesInfo tile. */
    public tile: number;

    /** TingTilesInfo fan. */
    public fan: number;

    /**
     * Creates a new TingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TingTilesInfo instance
     */
    public static create(properties?: ITingTilesInfo): TingTilesInfo;

    /**
     * Encodes the specified TingTilesInfo message. Does not implicitly {@link TingTilesInfo.verify|verify} messages.
     * @param message TingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TingTilesInfo message, length delimited. Does not implicitly {@link TingTilesInfo.verify|verify} messages.
     * @param message TingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TingTilesInfo;

    /**
     * Decodes a TingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TingTilesInfo;

    /**
     * Verifies a TingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): TingTilesInfo;

    /**
     * Creates a plain object from a TingTilesInfo message. Also converts values to other types if specified.
     * @param message TingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TingTips. */
export interface ITingTips {

    /** TingTips discard */
    discard?: (number|null);

    /** TingTips tilesInfo */
    tilesInfo?: (ITingTilesInfo[]|null);
}

/** Represents a TingTips. */
export class TingTips implements ITingTips {

    /**
     * Constructs a new TingTips.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITingTips);

    /** TingTips discard. */
    public discard: number;

    /** TingTips tilesInfo. */
    public tilesInfo: ITingTilesInfo[];

    /**
     * Creates a new TingTips instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TingTips instance
     */
    public static create(properties?: ITingTips): TingTips;

    /**
     * Encodes the specified TingTips message. Does not implicitly {@link TingTips.verify|verify} messages.
     * @param message TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TingTips message, length delimited. Does not implicitly {@link TingTips.verify|verify} messages.
     * @param message TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TingTips message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TingTips;

    /**
     * Decodes a TingTips message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TingTips;

    /**
     * Verifies a TingTips message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TingTips message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TingTips
     */
    public static fromObject(object: { [k: string]: any }): TingTips;

    /**
     * Creates a plain object from a TingTips message. Also converts values to other types if specified.
     * @param message TingTips
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TingTips, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TingTips to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_TingTips. */
export interface ISC_TingTips {

    /** SC_TingTips ting */
    ting?: (ITingTips[]|null);
}

/** Represents a SC_TingTips. */
export class SC_TingTips implements ISC_TingTips {

    /**
     * Constructs a new SC_TingTips.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_TingTips);

    /** SC_TingTips ting. */
    public ting: ITingTips[];

    /**
     * Creates a new SC_TingTips instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_TingTips instance
     */
    public static create(properties?: ISC_TingTips): SC_TingTips;

    /**
     * Encodes the specified SC_TingTips message. Does not implicitly {@link SC_TingTips.verify|verify} messages.
     * @param message SC_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_TingTips message, length delimited. Does not implicitly {@link SC_TingTips.verify|verify} messages.
     * @param message SC_TingTips message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_TingTips, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_TingTips message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_TingTips;

    /**
     * Decodes a SC_TingTips message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_TingTips
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_TingTips;

    /**
     * Verifies a SC_TingTips message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_TingTips message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_TingTips
     */
    public static fromObject(object: { [k: string]: any }): SC_TingTips;

    /**
     * Creates a plain object from a SC_TingTips message. Also converts values to other types if specified.
     * @param message SC_TingTips
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_TingTips, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_TingTips to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_TingTips {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23134
    }
}

/** Properties of a SC_PlayerHuStatus. */
export interface ISC_PlayerHuStatus {

    /** SC_PlayerHuStatus chairId */
    chairId?: (number|null);

    /** SC_PlayerHuStatus hu */
    hu?: (number|null);

    /** SC_PlayerHuStatus huTile */
    huTile?: (number|null);

    /** SC_PlayerHuStatus huIndex */
    huIndex?: (number|null);
}

/** Represents a SC_PlayerHuStatus. */
export class SC_PlayerHuStatus implements ISC_PlayerHuStatus {

    /**
     * Constructs a new SC_PlayerHuStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PlayerHuStatus);

    /** SC_PlayerHuStatus chairId. */
    public chairId: number;

    /** SC_PlayerHuStatus hu. */
    public hu: number;

    /** SC_PlayerHuStatus huTile. */
    public huTile: number;

    /** SC_PlayerHuStatus huIndex. */
    public huIndex: number;

    /**
     * Creates a new SC_PlayerHuStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PlayerHuStatus instance
     */
    public static create(properties?: ISC_PlayerHuStatus): SC_PlayerHuStatus;

    /**
     * Encodes the specified SC_PlayerHuStatus message. Does not implicitly {@link SC_PlayerHuStatus.verify|verify} messages.
     * @param message SC_PlayerHuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PlayerHuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PlayerHuStatus message, length delimited. Does not implicitly {@link SC_PlayerHuStatus.verify|verify} messages.
     * @param message SC_PlayerHuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PlayerHuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PlayerHuStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PlayerHuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PlayerHuStatus;

    /**
     * Decodes a SC_PlayerHuStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PlayerHuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PlayerHuStatus;

    /**
     * Verifies a SC_PlayerHuStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PlayerHuStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PlayerHuStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_PlayerHuStatus;

    /**
     * Creates a plain object from a SC_PlayerHuStatus message. Also converts values to other types if specified.
     * @param message SC_PlayerHuStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PlayerHuStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PlayerHuStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PlayerHuStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23135
    }
}

/** Properties of a SC_HuStatus. */
export interface ISC_HuStatus {

    /** SC_HuStatus status */
    status?: (ISC_PlayerHuStatus[]|null);
}

/** Represents a SC_HuStatus. */
export class SC_HuStatus implements ISC_HuStatus {

    /**
     * Constructs a new SC_HuStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_HuStatus);

    /** SC_HuStatus status. */
    public status: ISC_PlayerHuStatus[];

    /**
     * Creates a new SC_HuStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_HuStatus instance
     */
    public static create(properties?: ISC_HuStatus): SC_HuStatus;

    /**
     * Encodes the specified SC_HuStatus message. Does not implicitly {@link SC_HuStatus.verify|verify} messages.
     * @param message SC_HuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_HuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_HuStatus message, length delimited. Does not implicitly {@link SC_HuStatus.verify|verify} messages.
     * @param message SC_HuStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_HuStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_HuStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_HuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_HuStatus;

    /**
     * Decodes a SC_HuStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_HuStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_HuStatus;

    /**
     * Verifies a SC_HuStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_HuStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_HuStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_HuStatus;

    /**
     * Creates a plain object from a SC_HuStatus message. Also converts values to other types if specified.
     * @param message SC_HuStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_HuStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_HuStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_HuStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23136
    }
}

/** Properties of a MaajanXueZhanStatisticsItem. */
export interface IMaajanXueZhanStatisticsItem {

    /** MaajanXueZhanStatisticsItem type */
    type?: (string|null);

    /** MaajanXueZhanStatisticsItem count */
    count?: (number|null);
}

/** Represents a MaajanXueZhanStatisticsItem. */
export class MaajanXueZhanStatisticsItem implements IMaajanXueZhanStatisticsItem {

    /**
     * Constructs a new MaajanXueZhanStatisticsItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanXueZhanStatisticsItem);

    /** MaajanXueZhanStatisticsItem type. */
    public type: string;

    /** MaajanXueZhanStatisticsItem count. */
    public count: number;

    /**
     * Creates a new MaajanXueZhanStatisticsItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanXueZhanStatisticsItem instance
     */
    public static create(properties?: IMaajanXueZhanStatisticsItem): MaajanXueZhanStatisticsItem;

    /**
     * Encodes the specified MaajanXueZhanStatisticsItem message. Does not implicitly {@link MaajanXueZhanStatisticsItem.verify|verify} messages.
     * @param message MaajanXueZhanStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanXueZhanStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanXueZhanStatisticsItem message, length delimited. Does not implicitly {@link MaajanXueZhanStatisticsItem.verify|verify} messages.
     * @param message MaajanXueZhanStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanXueZhanStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanXueZhanStatisticsItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanXueZhanStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanXueZhanStatisticsItem;

    /**
     * Decodes a MaajanXueZhanStatisticsItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanXueZhanStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanXueZhanStatisticsItem;

    /**
     * Verifies a MaajanXueZhanStatisticsItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanXueZhanStatisticsItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanXueZhanStatisticsItem
     */
    public static fromObject(object: { [k: string]: any }): MaajanXueZhanStatisticsItem;

    /**
     * Creates a plain object from a MaajanXueZhanStatisticsItem message. Also converts values to other types if specified.
     * @param message MaajanXueZhanStatisticsItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanXueZhanStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanXueZhanStatisticsItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MaajanXueZhanFinalOverPlayerInfo. */
export interface IMaajanXueZhanFinalOverPlayerInfo {

    /** MaajanXueZhanFinalOverPlayerInfo chairId */
    chairId?: (number|null);

    /** MaajanXueZhanFinalOverPlayerInfo guid */
    guid?: (number|null);

    /** MaajanXueZhanFinalOverPlayerInfo score */
    score?: (number|null);

    /** MaajanXueZhanFinalOverPlayerInfo money */
    money?: (number|null);

    /** MaajanXueZhanFinalOverPlayerInfo statistics */
    statistics?: (IMaajanXueZhanStatisticsItem[]|null);
}

/** Represents a MaajanXueZhanFinalOverPlayerInfo. */
export class MaajanXueZhanFinalOverPlayerInfo implements IMaajanXueZhanFinalOverPlayerInfo {

    /**
     * Constructs a new MaajanXueZhanFinalOverPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanXueZhanFinalOverPlayerInfo);

    /** MaajanXueZhanFinalOverPlayerInfo chairId. */
    public chairId: number;

    /** MaajanXueZhanFinalOverPlayerInfo guid. */
    public guid: number;

    /** MaajanXueZhanFinalOverPlayerInfo score. */
    public score: number;

    /** MaajanXueZhanFinalOverPlayerInfo money. */
    public money: number;

    /** MaajanXueZhanFinalOverPlayerInfo statistics. */
    public statistics: IMaajanXueZhanStatisticsItem[];

    /**
     * Creates a new MaajanXueZhanFinalOverPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanXueZhanFinalOverPlayerInfo instance
     */
    public static create(properties?: IMaajanXueZhanFinalOverPlayerInfo): MaajanXueZhanFinalOverPlayerInfo;

    /**
     * Encodes the specified MaajanXueZhanFinalOverPlayerInfo message. Does not implicitly {@link MaajanXueZhanFinalOverPlayerInfo.verify|verify} messages.
     * @param message MaajanXueZhanFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanXueZhanFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanXueZhanFinalOverPlayerInfo message, length delimited. Does not implicitly {@link MaajanXueZhanFinalOverPlayerInfo.verify|verify} messages.
     * @param message MaajanXueZhanFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanXueZhanFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanXueZhanFinalOverPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanXueZhanFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanXueZhanFinalOverPlayerInfo;

    /**
     * Decodes a MaajanXueZhanFinalOverPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanXueZhanFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanXueZhanFinalOverPlayerInfo;

    /**
     * Verifies a MaajanXueZhanFinalOverPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanXueZhanFinalOverPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanXueZhanFinalOverPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): MaajanXueZhanFinalOverPlayerInfo;

    /**
     * Creates a plain object from a MaajanXueZhanFinalOverPlayerInfo message. Also converts values to other types if specified.
     * @param message MaajanXueZhanFinalOverPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanXueZhanFinalOverPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanXueZhanFinalOverPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_MaajanXueZhanFinalGameOver. */
export interface ISC_MaajanXueZhanFinalGameOver {

    /** SC_MaajanXueZhanFinalGameOver players */
    players?: (IMaajanXueZhanFinalOverPlayerInfo[]|null);
}

/** Represents a SC_MaajanXueZhanFinalGameOver. */
export class SC_MaajanXueZhanFinalGameOver implements ISC_MaajanXueZhanFinalGameOver {

    /**
     * Constructs a new SC_MaajanXueZhanFinalGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanXueZhanFinalGameOver);

    /** SC_MaajanXueZhanFinalGameOver players. */
    public players: IMaajanXueZhanFinalOverPlayerInfo[];

    /**
     * Creates a new SC_MaajanXueZhanFinalGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanXueZhanFinalGameOver instance
     */
    public static create(properties?: ISC_MaajanXueZhanFinalGameOver): SC_MaajanXueZhanFinalGameOver;

    /**
     * Encodes the specified SC_MaajanXueZhanFinalGameOver message. Does not implicitly {@link SC_MaajanXueZhanFinalGameOver.verify|verify} messages.
     * @param message SC_MaajanXueZhanFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanXueZhanFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanXueZhanFinalGameOver message, length delimited. Does not implicitly {@link SC_MaajanXueZhanFinalGameOver.verify|verify} messages.
     * @param message SC_MaajanXueZhanFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanXueZhanFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanXueZhanFinalGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanXueZhanFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanXueZhanFinalGameOver;

    /**
     * Decodes a SC_MaajanXueZhanFinalGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanXueZhanFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanXueZhanFinalGameOver;

    /**
     * Verifies a SC_MaajanXueZhanFinalGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanXueZhanFinalGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanXueZhanFinalGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanXueZhanFinalGameOver;

    /**
     * Creates a plain object from a SC_MaajanXueZhanFinalGameOver message. Also converts values to other types if specified.
     * @param message SC_MaajanXueZhanFinalGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanXueZhanFinalGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanXueZhanFinalGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanXueZhanFinalGameOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23137
    }
}

/** Properties of a SC_MaajanWaitingDiscard. */
export interface ISC_MaajanWaitingDiscard {

    /** SC_MaajanWaitingDiscard chairId */
    chairId?: (number|null);
}

/** Represents a SC_MaajanWaitingDiscard. */
export class SC_MaajanWaitingDiscard implements ISC_MaajanWaitingDiscard {

    /**
     * Constructs a new SC_MaajanWaitingDiscard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanWaitingDiscard);

    /** SC_MaajanWaitingDiscard chairId. */
    public chairId: number;

    /**
     * Creates a new SC_MaajanWaitingDiscard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanWaitingDiscard instance
     */
    public static create(properties?: ISC_MaajanWaitingDiscard): SC_MaajanWaitingDiscard;

    /**
     * Encodes the specified SC_MaajanWaitingDiscard message. Does not implicitly {@link SC_MaajanWaitingDiscard.verify|verify} messages.
     * @param message SC_MaajanWaitingDiscard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanWaitingDiscard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanWaitingDiscard message, length delimited. Does not implicitly {@link SC_MaajanWaitingDiscard.verify|verify} messages.
     * @param message SC_MaajanWaitingDiscard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanWaitingDiscard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanWaitingDiscard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanWaitingDiscard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanWaitingDiscard;

    /**
     * Decodes a SC_MaajanWaitingDiscard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanWaitingDiscard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanWaitingDiscard;

    /**
     * Verifies a SC_MaajanWaitingDiscard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanWaitingDiscard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanWaitingDiscard
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanWaitingDiscard;

    /**
     * Creates a plain object from a SC_MaajanWaitingDiscard message. Also converts values to other types if specified.
     * @param message SC_MaajanWaitingDiscard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanWaitingDiscard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanWaitingDiscard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanWaitingDiscard {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23138
    }
}

/** Properties of a SC_MaajanZhuoJiBeginGuMai. */
export interface ISC_MaajanZhuoJiBeginGuMai {
}

/** Represents a SC_MaajanZhuoJiBeginGuMai. */
export class SC_MaajanZhuoJiBeginGuMai implements ISC_MaajanZhuoJiBeginGuMai {

    /**
     * Constructs a new SC_MaajanZhuoJiBeginGuMai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanZhuoJiBeginGuMai);

    /**
     * Creates a new SC_MaajanZhuoJiBeginGuMai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanZhuoJiBeginGuMai instance
     */
    public static create(properties?: ISC_MaajanZhuoJiBeginGuMai): SC_MaajanZhuoJiBeginGuMai;

    /**
     * Encodes the specified SC_MaajanZhuoJiBeginGuMai message. Does not implicitly {@link SC_MaajanZhuoJiBeginGuMai.verify|verify} messages.
     * @param message SC_MaajanZhuoJiBeginGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanZhuoJiBeginGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanZhuoJiBeginGuMai message, length delimited. Does not implicitly {@link SC_MaajanZhuoJiBeginGuMai.verify|verify} messages.
     * @param message SC_MaajanZhuoJiBeginGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanZhuoJiBeginGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanZhuoJiBeginGuMai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanZhuoJiBeginGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanZhuoJiBeginGuMai;

    /**
     * Decodes a SC_MaajanZhuoJiBeginGuMai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanZhuoJiBeginGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanZhuoJiBeginGuMai;

    /**
     * Verifies a SC_MaajanZhuoJiBeginGuMai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanZhuoJiBeginGuMai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanZhuoJiBeginGuMai
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanZhuoJiBeginGuMai;

    /**
     * Creates a plain object from a SC_MaajanZhuoJiBeginGuMai message. Also converts values to other types if specified.
     * @param message SC_MaajanZhuoJiBeginGuMai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanZhuoJiBeginGuMai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanZhuoJiBeginGuMai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanZhuoJiBeginGuMai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23139
    }
}

/** Properties of a CS_MaajanZhuoJiGuMai. */
export interface ICS_MaajanZhuoJiGuMai {

    /** CS_MaajanZhuoJiGuMai score */
    score?: (number|null);
}

/** Represents a CS_MaajanZhuoJiGuMai. */
export class CS_MaajanZhuoJiGuMai implements ICS_MaajanZhuoJiGuMai {

    /**
     * Constructs a new CS_MaajanZhuoJiGuMai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_MaajanZhuoJiGuMai);

    /** CS_MaajanZhuoJiGuMai score. */
    public score: number;

    /**
     * Creates a new CS_MaajanZhuoJiGuMai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_MaajanZhuoJiGuMai instance
     */
    public static create(properties?: ICS_MaajanZhuoJiGuMai): CS_MaajanZhuoJiGuMai;

    /**
     * Encodes the specified CS_MaajanZhuoJiGuMai message. Does not implicitly {@link CS_MaajanZhuoJiGuMai.verify|verify} messages.
     * @param message CS_MaajanZhuoJiGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_MaajanZhuoJiGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_MaajanZhuoJiGuMai message, length delimited. Does not implicitly {@link CS_MaajanZhuoJiGuMai.verify|verify} messages.
     * @param message CS_MaajanZhuoJiGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_MaajanZhuoJiGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_MaajanZhuoJiGuMai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_MaajanZhuoJiGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_MaajanZhuoJiGuMai;

    /**
     * Decodes a CS_MaajanZhuoJiGuMai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_MaajanZhuoJiGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_MaajanZhuoJiGuMai;

    /**
     * Verifies a CS_MaajanZhuoJiGuMai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_MaajanZhuoJiGuMai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_MaajanZhuoJiGuMai
     */
    public static fromObject(object: { [k: string]: any }): CS_MaajanZhuoJiGuMai;

    /**
     * Creates a plain object from a CS_MaajanZhuoJiGuMai message. Also converts values to other types if specified.
     * @param message CS_MaajanZhuoJiGuMai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_MaajanZhuoJiGuMai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_MaajanZhuoJiGuMai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_MaajanZhuoJiGuMai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23140
    }
}

/** Properties of a SC_MaajanZhuoJiGuMai. */
export interface ISC_MaajanZhuoJiGuMai {

    /** SC_MaajanZhuoJiGuMai result */
    result?: (number|null);

    /** SC_MaajanZhuoJiGuMai chairId */
    chairId?: (number|null);

    /** SC_MaajanZhuoJiGuMai score */
    score?: (number|null);
}

/** Represents a SC_MaajanZhuoJiGuMai. */
export class SC_MaajanZhuoJiGuMai implements ISC_MaajanZhuoJiGuMai {

    /**
     * Constructs a new SC_MaajanZhuoJiGuMai.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanZhuoJiGuMai);

    /** SC_MaajanZhuoJiGuMai result. */
    public result: number;

    /** SC_MaajanZhuoJiGuMai chairId. */
    public chairId: number;

    /** SC_MaajanZhuoJiGuMai score. */
    public score: number;

    /**
     * Creates a new SC_MaajanZhuoJiGuMai instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanZhuoJiGuMai instance
     */
    public static create(properties?: ISC_MaajanZhuoJiGuMai): SC_MaajanZhuoJiGuMai;

    /**
     * Encodes the specified SC_MaajanZhuoJiGuMai message. Does not implicitly {@link SC_MaajanZhuoJiGuMai.verify|verify} messages.
     * @param message SC_MaajanZhuoJiGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanZhuoJiGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanZhuoJiGuMai message, length delimited. Does not implicitly {@link SC_MaajanZhuoJiGuMai.verify|verify} messages.
     * @param message SC_MaajanZhuoJiGuMai message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanZhuoJiGuMai, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanZhuoJiGuMai message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanZhuoJiGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanZhuoJiGuMai;

    /**
     * Decodes a SC_MaajanZhuoJiGuMai message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanZhuoJiGuMai
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanZhuoJiGuMai;

    /**
     * Verifies a SC_MaajanZhuoJiGuMai message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanZhuoJiGuMai message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanZhuoJiGuMai
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanZhuoJiGuMai;

    /**
     * Creates a plain object from a SC_MaajanZhuoJiGuMai message. Also converts values to other types if specified.
     * @param message SC_MaajanZhuoJiGuMai
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanZhuoJiGuMai, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanZhuoJiGuMai to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanZhuoJiGuMai {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23141
    }
}

/** Properties of a CS_MaajanGetTingTilesInfo. */
export interface ICS_MaajanGetTingTilesInfo {
}

/** Represents a CS_MaajanGetTingTilesInfo. */
export class CS_MaajanGetTingTilesInfo implements ICS_MaajanGetTingTilesInfo {

    /**
     * Constructs a new CS_MaajanGetTingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_MaajanGetTingTilesInfo);

    /**
     * Creates a new CS_MaajanGetTingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_MaajanGetTingTilesInfo instance
     */
    public static create(properties?: ICS_MaajanGetTingTilesInfo): CS_MaajanGetTingTilesInfo;

    /**
     * Encodes the specified CS_MaajanGetTingTilesInfo message. Does not implicitly {@link CS_MaajanGetTingTilesInfo.verify|verify} messages.
     * @param message CS_MaajanGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_MaajanGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_MaajanGetTingTilesInfo message, length delimited. Does not implicitly {@link CS_MaajanGetTingTilesInfo.verify|verify} messages.
     * @param message CS_MaajanGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_MaajanGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_MaajanGetTingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_MaajanGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_MaajanGetTingTilesInfo;

    /**
     * Decodes a CS_MaajanGetTingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_MaajanGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_MaajanGetTingTilesInfo;

    /**
     * Verifies a CS_MaajanGetTingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_MaajanGetTingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_MaajanGetTingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): CS_MaajanGetTingTilesInfo;

    /**
     * Creates a plain object from a CS_MaajanGetTingTilesInfo message. Also converts values to other types if specified.
     * @param message CS_MaajanGetTingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_MaajanGetTingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_MaajanGetTingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_MaajanGetTingTilesInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23143
    }
}

/** Properties of a SC_MaajanGetTingTilesInfo. */
export interface ISC_MaajanGetTingTilesInfo {

    /** SC_MaajanGetTingTilesInfo result */
    result?: (number|null);

    /** SC_MaajanGetTingTilesInfo tilesInfo */
    tilesInfo?: (ITingTilesInfo[]|null);
}

/** Represents a SC_MaajanGetTingTilesInfo. */
export class SC_MaajanGetTingTilesInfo implements ISC_MaajanGetTingTilesInfo {

    /**
     * Constructs a new SC_MaajanGetTingTilesInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanGetTingTilesInfo);

    /** SC_MaajanGetTingTilesInfo result. */
    public result: number;

    /** SC_MaajanGetTingTilesInfo tilesInfo. */
    public tilesInfo: ITingTilesInfo[];

    /**
     * Creates a new SC_MaajanGetTingTilesInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanGetTingTilesInfo instance
     */
    public static create(properties?: ISC_MaajanGetTingTilesInfo): SC_MaajanGetTingTilesInfo;

    /**
     * Encodes the specified SC_MaajanGetTingTilesInfo message. Does not implicitly {@link SC_MaajanGetTingTilesInfo.verify|verify} messages.
     * @param message SC_MaajanGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanGetTingTilesInfo message, length delimited. Does not implicitly {@link SC_MaajanGetTingTilesInfo.verify|verify} messages.
     * @param message SC_MaajanGetTingTilesInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanGetTingTilesInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanGetTingTilesInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanGetTingTilesInfo;

    /**
     * Decodes a SC_MaajanGetTingTilesInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanGetTingTilesInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanGetTingTilesInfo;

    /**
     * Verifies a SC_MaajanGetTingTilesInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanGetTingTilesInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanGetTingTilesInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanGetTingTilesInfo;

    /**
     * Creates a plain object from a SC_MaajanGetTingTilesInfo message. Also converts values to other types if specified.
     * @param message SC_MaajanGetTingTilesInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanGetTingTilesInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanGetTingTilesInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanGetTingTilesInfo {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23144
    }
}

/** Properties of a PiaoFenInfo. */
export interface IPiaoFenInfo {

    /** PiaoFenInfo chairId */
    chairId?: (number|null);

    /** PiaoFenInfo piao */
    piao?: (number|null);
}

/** Represents a PiaoFenInfo. */
export class PiaoFenInfo implements IPiaoFenInfo {

    /**
     * Constructs a new PiaoFenInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPiaoFenInfo);

    /** PiaoFenInfo chairId. */
    public chairId: number;

    /** PiaoFenInfo piao. */
    public piao: number;

    /**
     * Creates a new PiaoFenInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PiaoFenInfo instance
     */
    public static create(properties?: IPiaoFenInfo): PiaoFenInfo;

    /**
     * Encodes the specified PiaoFenInfo message. Does not implicitly {@link PiaoFenInfo.verify|verify} messages.
     * @param message PiaoFenInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPiaoFenInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PiaoFenInfo message, length delimited. Does not implicitly {@link PiaoFenInfo.verify|verify} messages.
     * @param message PiaoFenInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPiaoFenInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PiaoFenInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PiaoFenInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PiaoFenInfo;

    /**
     * Decodes a PiaoFenInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PiaoFenInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PiaoFenInfo;

    /**
     * Verifies a PiaoFenInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PiaoFenInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PiaoFenInfo
     */
    public static fromObject(object: { [k: string]: any }): PiaoFenInfo;

    /**
     * Creates a plain object from a PiaoFenInfo message. Also converts values to other types if specified.
     * @param message PiaoFenInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PiaoFenInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PiaoFenInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PiaoFenStatus. */
export interface IPiaoFenStatus {

    /** PiaoFenStatus chairId */
    chairId?: (number|null);

    /** PiaoFenStatus done */
    done?: (boolean|null);
}

/** Represents a PiaoFenStatus. */
export class PiaoFenStatus implements IPiaoFenStatus {

    /**
     * Constructs a new PiaoFenStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPiaoFenStatus);

    /** PiaoFenStatus chairId. */
    public chairId: number;

    /** PiaoFenStatus done. */
    public done: boolean;

    /**
     * Creates a new PiaoFenStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PiaoFenStatus instance
     */
    public static create(properties?: IPiaoFenStatus): PiaoFenStatus;

    /**
     * Encodes the specified PiaoFenStatus message. Does not implicitly {@link PiaoFenStatus.verify|verify} messages.
     * @param message PiaoFenStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPiaoFenStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PiaoFenStatus message, length delimited. Does not implicitly {@link PiaoFenStatus.verify|verify} messages.
     * @param message PiaoFenStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPiaoFenStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PiaoFenStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PiaoFenStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PiaoFenStatus;

    /**
     * Decodes a PiaoFenStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PiaoFenStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PiaoFenStatus;

    /**
     * Verifies a PiaoFenStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PiaoFenStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PiaoFenStatus
     */
    public static fromObject(object: { [k: string]: any }): PiaoFenStatus;

    /**
     * Creates a plain object from a PiaoFenStatus message. Also converts values to other types if specified.
     * @param message PiaoFenStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PiaoFenStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PiaoFenStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_AllowPiaoFen. */
export interface ISC_AllowPiaoFen {
}

/** Represents a SC_AllowPiaoFen. */
export class SC_AllowPiaoFen implements ISC_AllowPiaoFen {

    /**
     * Constructs a new SC_AllowPiaoFen.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowPiaoFen);

    /**
     * Creates a new SC_AllowPiaoFen instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowPiaoFen instance
     */
    public static create(properties?: ISC_AllowPiaoFen): SC_AllowPiaoFen;

    /**
     * Encodes the specified SC_AllowPiaoFen message. Does not implicitly {@link SC_AllowPiaoFen.verify|verify} messages.
     * @param message SC_AllowPiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowPiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowPiaoFen message, length delimited. Does not implicitly {@link SC_AllowPiaoFen.verify|verify} messages.
     * @param message SC_AllowPiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowPiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowPiaoFen message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowPiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowPiaoFen;

    /**
     * Decodes a SC_AllowPiaoFen message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowPiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowPiaoFen;

    /**
     * Verifies a SC_AllowPiaoFen message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowPiaoFen message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowPiaoFen
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowPiaoFen;

    /**
     * Creates a plain object from a SC_AllowPiaoFen message. Also converts values to other types if specified.
     * @param message SC_AllowPiaoFen
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowPiaoFen, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowPiaoFen to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowPiaoFen {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23145
    }
}

/** Properties of a CS_PiaoFen. */
export interface ICS_PiaoFen {

    /** CS_PiaoFen piao */
    piao?: (number|null);
}

/** Represents a CS_PiaoFen. */
export class CS_PiaoFen implements ICS_PiaoFen {

    /**
     * Constructs a new CS_PiaoFen.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PiaoFen);

    /** CS_PiaoFen piao. */
    public piao: number;

    /**
     * Creates a new CS_PiaoFen instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PiaoFen instance
     */
    public static create(properties?: ICS_PiaoFen): CS_PiaoFen;

    /**
     * Encodes the specified CS_PiaoFen message. Does not implicitly {@link CS_PiaoFen.verify|verify} messages.
     * @param message CS_PiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PiaoFen message, length delimited. Does not implicitly {@link CS_PiaoFen.verify|verify} messages.
     * @param message CS_PiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PiaoFen message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PiaoFen;

    /**
     * Decodes a CS_PiaoFen message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PiaoFen;

    /**
     * Verifies a CS_PiaoFen message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PiaoFen message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PiaoFen
     */
    public static fromObject(object: { [k: string]: any }): CS_PiaoFen;

    /**
     * Creates a plain object from a CS_PiaoFen message. Also converts values to other types if specified.
     * @param message CS_PiaoFen
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PiaoFen, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PiaoFen to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PiaoFen {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23146
    }
}

/** Properties of a SC_PiaoFen. */
export interface ISC_PiaoFen {

    /** SC_PiaoFen result */
    result?: (number|null);

    /** SC_PiaoFen status */
    status?: (IPiaoFenStatus|null);
}

/** Represents a SC_PiaoFen. */
export class SC_PiaoFen implements ISC_PiaoFen {

    /**
     * Constructs a new SC_PiaoFen.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PiaoFen);

    /** SC_PiaoFen result. */
    public result: number;

    /** SC_PiaoFen status. */
    public status?: (IPiaoFenStatus|null);

    /**
     * Creates a new SC_PiaoFen instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PiaoFen instance
     */
    public static create(properties?: ISC_PiaoFen): SC_PiaoFen;

    /**
     * Encodes the specified SC_PiaoFen message. Does not implicitly {@link SC_PiaoFen.verify|verify} messages.
     * @param message SC_PiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PiaoFen message, length delimited. Does not implicitly {@link SC_PiaoFen.verify|verify} messages.
     * @param message SC_PiaoFen message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PiaoFen, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PiaoFen message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PiaoFen;

    /**
     * Decodes a SC_PiaoFen message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PiaoFen
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PiaoFen;

    /**
     * Verifies a SC_PiaoFen message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PiaoFen message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PiaoFen
     */
    public static fromObject(object: { [k: string]: any }): SC_PiaoFen;

    /**
     * Creates a plain object from a SC_PiaoFen message. Also converts values to other types if specified.
     * @param message SC_PiaoFen
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PiaoFen, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PiaoFen to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PiaoFen {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23147
    }
}

/** Properties of a SC_PiaoFenStatus. */
export interface ISC_PiaoFenStatus {

    /** SC_PiaoFenStatus piaoStatus */
    piaoStatus?: (IPiaoFenStatus[]|null);

    /** SC_PiaoFenStatus piaoInfo */
    piaoInfo?: (IPiaoFenInfo[]|null);
}

/** Represents a SC_PiaoFenStatus. */
export class SC_PiaoFenStatus implements ISC_PiaoFenStatus {

    /**
     * Constructs a new SC_PiaoFenStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PiaoFenStatus);

    /** SC_PiaoFenStatus piaoStatus. */
    public piaoStatus: IPiaoFenStatus[];

    /** SC_PiaoFenStatus piaoInfo. */
    public piaoInfo: IPiaoFenInfo[];

    /**
     * Creates a new SC_PiaoFenStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PiaoFenStatus instance
     */
    public static create(properties?: ISC_PiaoFenStatus): SC_PiaoFenStatus;

    /**
     * Encodes the specified SC_PiaoFenStatus message. Does not implicitly {@link SC_PiaoFenStatus.verify|verify} messages.
     * @param message SC_PiaoFenStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PiaoFenStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PiaoFenStatus message, length delimited. Does not implicitly {@link SC_PiaoFenStatus.verify|verify} messages.
     * @param message SC_PiaoFenStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PiaoFenStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PiaoFenStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PiaoFenStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PiaoFenStatus;

    /**
     * Decodes a SC_PiaoFenStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PiaoFenStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PiaoFenStatus;

    /**
     * Verifies a SC_PiaoFenStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PiaoFenStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PiaoFenStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_PiaoFenStatus;

    /**
     * Creates a plain object from a SC_PiaoFenStatus message. Also converts values to other types if specified.
     * @param message SC_PiaoFenStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PiaoFenStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PiaoFenStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PiaoFenStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23148
    }
}

/** Properties of a SC_PiaoFenCommit. */
export interface ISC_PiaoFenCommit {

    /** SC_PiaoFenCommit piaoFens */
    piaoFens?: (IPiaoFenInfo[]|null);
}

/** Represents a SC_PiaoFenCommit. */
export class SC_PiaoFenCommit implements ISC_PiaoFenCommit {

    /**
     * Constructs a new SC_PiaoFenCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PiaoFenCommit);

    /** SC_PiaoFenCommit piaoFens. */
    public piaoFens: IPiaoFenInfo[];

    /**
     * Creates a new SC_PiaoFenCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PiaoFenCommit instance
     */
    public static create(properties?: ISC_PiaoFenCommit): SC_PiaoFenCommit;

    /**
     * Encodes the specified SC_PiaoFenCommit message. Does not implicitly {@link SC_PiaoFenCommit.verify|verify} messages.
     * @param message SC_PiaoFenCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PiaoFenCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PiaoFenCommit message, length delimited. Does not implicitly {@link SC_PiaoFenCommit.verify|verify} messages.
     * @param message SC_PiaoFenCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PiaoFenCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PiaoFenCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PiaoFenCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PiaoFenCommit;

    /**
     * Decodes a SC_PiaoFenCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PiaoFenCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PiaoFenCommit;

    /**
     * Verifies a SC_PiaoFenCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PiaoFenCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PiaoFenCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_PiaoFenCommit;

    /**
     * Creates a plain object from a SC_PiaoFenCommit message. Also converts values to other types if specified.
     * @param message SC_PiaoFenCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PiaoFenCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PiaoFenCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PiaoFenCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23149
    }
}

/** Properties of a MaajanHongZhongBalanceType. */
export interface IMaajanHongZhongBalanceType {

    /** MaajanHongZhongBalanceType type */
    type?: (number|null);

    /** MaajanHongZhongBalanceType score */
    score?: (number|null);
}

/** Represents a MaajanHongZhongBalanceType. */
export class MaajanHongZhongBalanceType implements IMaajanHongZhongBalanceType {

    /**
     * Constructs a new MaajanHongZhongBalanceType.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanHongZhongBalanceType);

    /** MaajanHongZhongBalanceType type. */
    public type: number;

    /** MaajanHongZhongBalanceType score. */
    public score: number;

    /**
     * Creates a new MaajanHongZhongBalanceType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanHongZhongBalanceType instance
     */
    public static create(properties?: IMaajanHongZhongBalanceType): MaajanHongZhongBalanceType;

    /**
     * Encodes the specified MaajanHongZhongBalanceType message. Does not implicitly {@link MaajanHongZhongBalanceType.verify|verify} messages.
     * @param message MaajanHongZhongBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanHongZhongBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanHongZhongBalanceType message, length delimited. Does not implicitly {@link MaajanHongZhongBalanceType.verify|verify} messages.
     * @param message MaajanHongZhongBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanHongZhongBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanHongZhongBalanceType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanHongZhongBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanHongZhongBalanceType;

    /**
     * Decodes a MaajanHongZhongBalanceType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanHongZhongBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanHongZhongBalanceType;

    /**
     * Verifies a MaajanHongZhongBalanceType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanHongZhongBalanceType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanHongZhongBalanceType
     */
    public static fromObject(object: { [k: string]: any }): MaajanHongZhongBalanceType;

    /**
     * Creates a plain object from a MaajanHongZhongBalanceType message. Also converts values to other types if specified.
     * @param message MaajanHongZhongBalanceType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanHongZhongBalanceType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanHongZhongBalanceType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MaajanHongZhongBlanacePlayer. */
export interface IMaajanHongZhongBlanacePlayer {

    /** MaajanHongZhongBlanacePlayer chairId */
    chairId?: (number|null);

    /** MaajanHongZhongBlanacePlayer hu */
    hu?: (number|null);

    /** MaajanHongZhongBlanacePlayer huFan */
    huFan?: (number|null);

    /** MaajanHongZhongBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer items */
    items?: (IMaajanHongZhongBalanceType[]|null);

    /** MaajanHongZhongBlanacePlayer status */
    status?: (number|null);

    /** MaajanHongZhongBlanacePlayer huTile */
    huTile?: (number|null);

    /** MaajanHongZhongBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** MaajanHongZhongBlanacePlayer totalMoney */
    totalMoney?: (number|null);

    /** MaajanHongZhongBlanacePlayer huIndex */
    huIndex?: (number|null);

    /** MaajanHongZhongBlanacePlayer piaoScore */
    piaoScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer hupiaoScore */
    hupiaoScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer gangScore */
    gangScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer zhongniaoScore */
    zhongniaoScore?: (number|null);

    /** MaajanHongZhongBlanacePlayer huScore */
    huScore?: (number|null);
}

/** Represents a MaajanHongZhongBlanacePlayer. */
export class MaajanHongZhongBlanacePlayer implements IMaajanHongZhongBlanacePlayer {

    /**
     * Constructs a new MaajanHongZhongBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanHongZhongBlanacePlayer);

    /** MaajanHongZhongBlanacePlayer chairId. */
    public chairId: number;

    /** MaajanHongZhongBlanacePlayer hu. */
    public hu: number;

    /** MaajanHongZhongBlanacePlayer huFan. */
    public huFan: number;

    /** MaajanHongZhongBlanacePlayer totalScore. */
    public totalScore: number;

    /** MaajanHongZhongBlanacePlayer roundScore. */
    public roundScore: number;

    /** MaajanHongZhongBlanacePlayer items. */
    public items: IMaajanHongZhongBalanceType[];

    /** MaajanHongZhongBlanacePlayer status. */
    public status: number;

    /** MaajanHongZhongBlanacePlayer huTile. */
    public huTile: number;

    /** MaajanHongZhongBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** MaajanHongZhongBlanacePlayer totalMoney. */
    public totalMoney: number;

    /** MaajanHongZhongBlanacePlayer huIndex. */
    public huIndex: number;

    /** MaajanHongZhongBlanacePlayer piaoScore. */
    public piaoScore: number;

    /** MaajanHongZhongBlanacePlayer hupiaoScore. */
    public hupiaoScore: number;

    /** MaajanHongZhongBlanacePlayer gangScore. */
    public gangScore: number;

    /** MaajanHongZhongBlanacePlayer zhongniaoScore. */
    public zhongniaoScore: number;

    /** MaajanHongZhongBlanacePlayer huScore. */
    public huScore: number;

    /**
     * Creates a new MaajanHongZhongBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanHongZhongBlanacePlayer instance
     */
    public static create(properties?: IMaajanHongZhongBlanacePlayer): MaajanHongZhongBlanacePlayer;

    /**
     * Encodes the specified MaajanHongZhongBlanacePlayer message. Does not implicitly {@link MaajanHongZhongBlanacePlayer.verify|verify} messages.
     * @param message MaajanHongZhongBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanHongZhongBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanHongZhongBlanacePlayer message, length delimited. Does not implicitly {@link MaajanHongZhongBlanacePlayer.verify|verify} messages.
     * @param message MaajanHongZhongBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanHongZhongBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanHongZhongBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanHongZhongBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanHongZhongBlanacePlayer;

    /**
     * Decodes a MaajanHongZhongBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanHongZhongBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanHongZhongBlanacePlayer;

    /**
     * Verifies a MaajanHongZhongBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanHongZhongBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanHongZhongBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): MaajanHongZhongBlanacePlayer;

    /**
     * Creates a plain object from a MaajanHongZhongBlanacePlayer message. Also converts values to other types if specified.
     * @param message MaajanHongZhongBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanHongZhongBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanHongZhongBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Mapai_Info. */
export interface IMaajan_Mapai_Info {

    /** Maajan_Mapai_Info pai */
    pai?: (number|null);

    /** Maajan_Mapai_Info zhong */
    zhong?: (boolean|null);
}

/** Represents a Maajan_Mapai_Info. */
export class Maajan_Mapai_Info implements IMaajan_Mapai_Info {

    /**
     * Constructs a new Maajan_Mapai_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Mapai_Info);

    /** Maajan_Mapai_Info pai. */
    public pai: number;

    /** Maajan_Mapai_Info zhong. */
    public zhong: boolean;

    /**
     * Creates a new Maajan_Mapai_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Mapai_Info instance
     */
    public static create(properties?: IMaajan_Mapai_Info): Maajan_Mapai_Info;

    /**
     * Encodes the specified Maajan_Mapai_Info message. Does not implicitly {@link Maajan_Mapai_Info.verify|verify} messages.
     * @param message Maajan_Mapai_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Mapai_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Mapai_Info message, length delimited. Does not implicitly {@link Maajan_Mapai_Info.verify|verify} messages.
     * @param message Maajan_Mapai_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Mapai_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Mapai_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Mapai_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Mapai_Info;

    /**
     * Decodes a Maajan_Mapai_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Mapai_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Mapai_Info;

    /**
     * Verifies a Maajan_Mapai_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Mapai_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Mapai_Info
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Mapai_Info;

    /**
     * Creates a plain object from a Maajan_Mapai_Info message. Also converts values to other types if specified.
     * @param message Maajan_Mapai_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Mapai_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Mapai_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_MaajanHongZhongGameFinish. */
export interface ISC_MaajanHongZhongGameFinish {

    /** SC_MaajanHongZhongGameFinish players */
    players?: (IMaajan_Player_Info[]|null);

    /** SC_MaajanHongZhongGameFinish playerBalance */
    playerBalance?: (IMaajanHongZhongBlanacePlayer[]|null);

    /** SC_MaajanHongZhongGameFinish mapais */
    mapais?: (IMaajan_Mapai_Info[]|null);
}

/** Represents a SC_MaajanHongZhongGameFinish. */
export class SC_MaajanHongZhongGameFinish implements ISC_MaajanHongZhongGameFinish {

    /**
     * Constructs a new SC_MaajanHongZhongGameFinish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanHongZhongGameFinish);

    /** SC_MaajanHongZhongGameFinish players. */
    public players: IMaajan_Player_Info[];

    /** SC_MaajanHongZhongGameFinish playerBalance. */
    public playerBalance: IMaajanHongZhongBlanacePlayer[];

    /** SC_MaajanHongZhongGameFinish mapais. */
    public mapais: IMaajan_Mapai_Info[];

    /**
     * Creates a new SC_MaajanHongZhongGameFinish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanHongZhongGameFinish instance
     */
    public static create(properties?: ISC_MaajanHongZhongGameFinish): SC_MaajanHongZhongGameFinish;

    /**
     * Encodes the specified SC_MaajanHongZhongGameFinish message. Does not implicitly {@link SC_MaajanHongZhongGameFinish.verify|verify} messages.
     * @param message SC_MaajanHongZhongGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanHongZhongGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanHongZhongGameFinish message, length delimited. Does not implicitly {@link SC_MaajanHongZhongGameFinish.verify|verify} messages.
     * @param message SC_MaajanHongZhongGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanHongZhongGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanHongZhongGameFinish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanHongZhongGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanHongZhongGameFinish;

    /**
     * Decodes a SC_MaajanHongZhongGameFinish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanHongZhongGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanHongZhongGameFinish;

    /**
     * Verifies a SC_MaajanHongZhongGameFinish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanHongZhongGameFinish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanHongZhongGameFinish
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanHongZhongGameFinish;

    /**
     * Creates a plain object from a SC_MaajanHongZhongGameFinish message. Also converts values to other types if specified.
     * @param message SC_MaajanHongZhongGameFinish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanHongZhongGameFinish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanHongZhongGameFinish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanHongZhongGameFinish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23150
    }
}

/** Properties of a BaotingInfo. */
export interface IBaotingInfo {

    /** BaotingInfo chairId */
    chairId?: (number|null);

    /** BaotingInfo baoting */
    baoting?: (boolean|null);
}

/** Represents a BaotingInfo. */
export class BaotingInfo implements IBaotingInfo {

    /**
     * Constructs a new BaotingInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBaotingInfo);

    /** BaotingInfo chairId. */
    public chairId: number;

    /** BaotingInfo baoting. */
    public baoting: boolean;

    /**
     * Creates a new BaotingInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BaotingInfo instance
     */
    public static create(properties?: IBaotingInfo): BaotingInfo;

    /**
     * Encodes the specified BaotingInfo message. Does not implicitly {@link BaotingInfo.verify|verify} messages.
     * @param message BaotingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBaotingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BaotingInfo message, length delimited. Does not implicitly {@link BaotingInfo.verify|verify} messages.
     * @param message BaotingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBaotingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BaotingInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BaotingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BaotingInfo;

    /**
     * Decodes a BaotingInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BaotingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BaotingInfo;

    /**
     * Verifies a BaotingInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BaotingInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BaotingInfo
     */
    public static fromObject(object: { [k: string]: any }): BaotingInfo;

    /**
     * Creates a plain object from a BaotingInfo message. Also converts values to other types if specified.
     * @param message BaotingInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BaotingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BaotingInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BaotingStatus. */
export interface IBaotingStatus {

    /** BaotingStatus chairId */
    chairId?: (number|null);

    /** BaotingStatus done */
    done?: (boolean|null);
}

/** Represents a BaotingStatus. */
export class BaotingStatus implements IBaotingStatus {

    /**
     * Constructs a new BaotingStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBaotingStatus);

    /** BaotingStatus chairId. */
    public chairId: number;

    /** BaotingStatus done. */
    public done: boolean;

    /**
     * Creates a new BaotingStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BaotingStatus instance
     */
    public static create(properties?: IBaotingStatus): BaotingStatus;

    /**
     * Encodes the specified BaotingStatus message. Does not implicitly {@link BaotingStatus.verify|verify} messages.
     * @param message BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BaotingStatus message, length delimited. Does not implicitly {@link BaotingStatus.verify|verify} messages.
     * @param message BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BaotingStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BaotingStatus;

    /**
     * Decodes a BaotingStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BaotingStatus;

    /**
     * Verifies a BaotingStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BaotingStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BaotingStatus
     */
    public static fromObject(object: { [k: string]: any }): BaotingStatus;

    /**
     * Creates a plain object from a BaotingStatus message. Also converts values to other types if specified.
     * @param message BaotingStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BaotingStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BaotingStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_AllowBaoting. */
export interface ISC_AllowBaoting {
}

/** Represents a SC_AllowBaoting. */
export class SC_AllowBaoting implements ISC_AllowBaoting {

    /**
     * Constructs a new SC_AllowBaoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowBaoting);

    /**
     * Creates a new SC_AllowBaoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowBaoting instance
     */
    public static create(properties?: ISC_AllowBaoting): SC_AllowBaoting;

    /**
     * Encodes the specified SC_AllowBaoting message. Does not implicitly {@link SC_AllowBaoting.verify|verify} messages.
     * @param message SC_AllowBaoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowBaoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowBaoting message, length delimited. Does not implicitly {@link SC_AllowBaoting.verify|verify} messages.
     * @param message SC_AllowBaoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowBaoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowBaoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowBaoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowBaoting;

    /**
     * Decodes a SC_AllowBaoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowBaoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowBaoting;

    /**
     * Verifies a SC_AllowBaoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowBaoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowBaoting
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowBaoting;

    /**
     * Creates a plain object from a SC_AllowBaoting message. Also converts values to other types if specified.
     * @param message SC_AllowBaoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowBaoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowBaoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowBaoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23151
    }
}

/** Properties of a CS_Baoting. */
export interface ICS_Baoting {

    /** CS_Baoting baoting */
    baoting?: (number|null);
}

/** Represents a CS_Baoting. */
export class CS_Baoting implements ICS_Baoting {

    /**
     * Constructs a new CS_Baoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_Baoting);

    /** CS_Baoting baoting. */
    public baoting: number;

    /**
     * Creates a new CS_Baoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_Baoting instance
     */
    public static create(properties?: ICS_Baoting): CS_Baoting;

    /**
     * Encodes the specified CS_Baoting message. Does not implicitly {@link CS_Baoting.verify|verify} messages.
     * @param message CS_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_Baoting message, length delimited. Does not implicitly {@link CS_Baoting.verify|verify} messages.
     * @param message CS_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_Baoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_Baoting;

    /**
     * Decodes a CS_Baoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_Baoting;

    /**
     * Verifies a CS_Baoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_Baoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_Baoting
     */
    public static fromObject(object: { [k: string]: any }): CS_Baoting;

    /**
     * Creates a plain object from a CS_Baoting message. Also converts values to other types if specified.
     * @param message CS_Baoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_Baoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_Baoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_Baoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23152
    }
}

/** Properties of a SC_Baoting. */
export interface ISC_Baoting {

    /** SC_Baoting result */
    result?: (number|null);

    /** SC_Baoting status */
    status?: (IBaotingStatus|null);
}

/** Represents a SC_Baoting. */
export class SC_Baoting implements ISC_Baoting {

    /**
     * Constructs a new SC_Baoting.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_Baoting);

    /** SC_Baoting result. */
    public result: number;

    /** SC_Baoting status. */
    public status?: (IBaotingStatus|null);

    /**
     * Creates a new SC_Baoting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_Baoting instance
     */
    public static create(properties?: ISC_Baoting): SC_Baoting;

    /**
     * Encodes the specified SC_Baoting message. Does not implicitly {@link SC_Baoting.verify|verify} messages.
     * @param message SC_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_Baoting message, length delimited. Does not implicitly {@link SC_Baoting.verify|verify} messages.
     * @param message SC_Baoting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_Baoting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_Baoting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_Baoting;

    /**
     * Decodes a SC_Baoting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_Baoting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_Baoting;

    /**
     * Verifies a SC_Baoting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_Baoting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_Baoting
     */
    public static fromObject(object: { [k: string]: any }): SC_Baoting;

    /**
     * Creates a plain object from a SC_Baoting message. Also converts values to other types if specified.
     * @param message SC_Baoting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_Baoting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_Baoting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_Baoting {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23153
    }
}

/** Properties of a SC_BaotingStatus. */
export interface ISC_BaotingStatus {

    /** SC_BaotingStatus baotingStatus */
    baotingStatus?: (IBaotingStatus[]|null);

    /** SC_BaotingStatus baotingInfo */
    baotingInfo?: (IBaotingInfo[]|null);
}

/** Represents a SC_BaotingStatus. */
export class SC_BaotingStatus implements ISC_BaotingStatus {

    /**
     * Constructs a new SC_BaotingStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BaotingStatus);

    /** SC_BaotingStatus baotingStatus. */
    public baotingStatus: IBaotingStatus[];

    /** SC_BaotingStatus baotingInfo. */
    public baotingInfo: IBaotingInfo[];

    /**
     * Creates a new SC_BaotingStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BaotingStatus instance
     */
    public static create(properties?: ISC_BaotingStatus): SC_BaotingStatus;

    /**
     * Encodes the specified SC_BaotingStatus message. Does not implicitly {@link SC_BaotingStatus.verify|verify} messages.
     * @param message SC_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BaotingStatus message, length delimited. Does not implicitly {@link SC_BaotingStatus.verify|verify} messages.
     * @param message SC_BaotingStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BaotingStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BaotingStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BaotingStatus;

    /**
     * Decodes a SC_BaotingStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BaotingStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BaotingStatus;

    /**
     * Verifies a SC_BaotingStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BaotingStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BaotingStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_BaotingStatus;

    /**
     * Creates a plain object from a SC_BaotingStatus message. Also converts values to other types if specified.
     * @param message SC_BaotingStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BaotingStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BaotingStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BaotingStatus {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23154
    }
}

/** Properties of a SC_BaotingCommit. */
export interface ISC_BaotingCommit {

    /** SC_BaotingCommit baotings */
    baotings?: (IBaotingInfo[]|null);
}

/** Represents a SC_BaotingCommit. */
export class SC_BaotingCommit implements ISC_BaotingCommit {

    /**
     * Constructs a new SC_BaotingCommit.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BaotingCommit);

    /** SC_BaotingCommit baotings. */
    public baotings: IBaotingInfo[];

    /**
     * Creates a new SC_BaotingCommit instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BaotingCommit instance
     */
    public static create(properties?: ISC_BaotingCommit): SC_BaotingCommit;

    /**
     * Encodes the specified SC_BaotingCommit message. Does not implicitly {@link SC_BaotingCommit.verify|verify} messages.
     * @param message SC_BaotingCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BaotingCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BaotingCommit message, length delimited. Does not implicitly {@link SC_BaotingCommit.verify|verify} messages.
     * @param message SC_BaotingCommit message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BaotingCommit, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BaotingCommit message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BaotingCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BaotingCommit;

    /**
     * Decodes a SC_BaotingCommit message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BaotingCommit
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BaotingCommit;

    /**
     * Verifies a SC_BaotingCommit message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BaotingCommit message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BaotingCommit
     */
    public static fromObject(object: { [k: string]: any }): SC_BaotingCommit;

    /**
     * Creates a plain object from a SC_BaotingCommit message. Also converts values to other types if specified.
     * @param message SC_BaotingCommit
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BaotingCommit, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BaotingCommit to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BaotingCommit {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23155
    }
}

/** Properties of a MaajanZiGongBalanceType. */
export interface IMaajanZiGongBalanceType {

    /** MaajanZiGongBalanceType type */
    type?: (number|null);

    /** MaajanZiGongBalanceType count */
    count?: (number|null);
}

/** Represents a MaajanZiGongBalanceType. */
export class MaajanZiGongBalanceType implements IMaajanZiGongBalanceType {

    /**
     * Constructs a new MaajanZiGongBalanceType.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanZiGongBalanceType);

    /** MaajanZiGongBalanceType type. */
    public type: number;

    /** MaajanZiGongBalanceType count. */
    public count: number;

    /**
     * Creates a new MaajanZiGongBalanceType instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanZiGongBalanceType instance
     */
    public static create(properties?: IMaajanZiGongBalanceType): MaajanZiGongBalanceType;

    /**
     * Encodes the specified MaajanZiGongBalanceType message. Does not implicitly {@link MaajanZiGongBalanceType.verify|verify} messages.
     * @param message MaajanZiGongBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanZiGongBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanZiGongBalanceType message, length delimited. Does not implicitly {@link MaajanZiGongBalanceType.verify|verify} messages.
     * @param message MaajanZiGongBalanceType message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanZiGongBalanceType, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanZiGongBalanceType message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanZiGongBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanZiGongBalanceType;

    /**
     * Decodes a MaajanZiGongBalanceType message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanZiGongBalanceType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanZiGongBalanceType;

    /**
     * Verifies a MaajanZiGongBalanceType message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanZiGongBalanceType message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanZiGongBalanceType
     */
    public static fromObject(object: { [k: string]: any }): MaajanZiGongBalanceType;

    /**
     * Creates a plain object from a MaajanZiGongBalanceType message. Also converts values to other types if specified.
     * @param message MaajanZiGongBalanceType
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanZiGongBalanceType, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanZiGongBalanceType to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MaajanZiGongBlanacePlayer. */
export interface IMaajanZiGongBlanacePlayer {

    /** MaajanZiGongBlanacePlayer chairId */
    chairId?: (number|null);

    /** MaajanZiGongBlanacePlayer hu */
    hu?: (number|null);

    /** MaajanZiGongBlanacePlayer huFan */
    huFan?: (number|null);

    /** MaajanZiGongBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** MaajanZiGongBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** MaajanZiGongBlanacePlayer items */
    items?: (IMaajanZiGongBalanceType[]|null);

    /** MaajanZiGongBlanacePlayer status */
    status?: (number|null);

    /** MaajanZiGongBlanacePlayer huTile */
    huTile?: (number|null);

    /** MaajanZiGongBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** MaajanZiGongBlanacePlayer totalMoney */
    totalMoney?: (number|null);

    /** MaajanZiGongBlanacePlayer huIndex */
    huIndex?: (number|null);

    /** MaajanZiGongBlanacePlayer piao */
    piao?: (number|null);

    /** MaajanZiGongBlanacePlayer gangScore */
    gangScore?: (number|null);

    /** MaajanZiGongBlanacePlayer luoboScore */
    luoboScore?: (number|null);

    /** MaajanZiGongBlanacePlayer huScore */
    huScore?: (number|null);

    /** MaajanZiGongBlanacePlayer baoting */
    baoting?: (boolean|null);

    /** MaajanZiGongBlanacePlayer luoboCount */
    luoboCount?: (number|null);
}

/** Represents a MaajanZiGongBlanacePlayer. */
export class MaajanZiGongBlanacePlayer implements IMaajanZiGongBlanacePlayer {

    /**
     * Constructs a new MaajanZiGongBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajanZiGongBlanacePlayer);

    /** MaajanZiGongBlanacePlayer chairId. */
    public chairId: number;

    /** MaajanZiGongBlanacePlayer hu. */
    public hu: number;

    /** MaajanZiGongBlanacePlayer huFan. */
    public huFan: number;

    /** MaajanZiGongBlanacePlayer totalScore. */
    public totalScore: number;

    /** MaajanZiGongBlanacePlayer roundScore. */
    public roundScore: number;

    /** MaajanZiGongBlanacePlayer items. */
    public items: IMaajanZiGongBalanceType[];

    /** MaajanZiGongBlanacePlayer status. */
    public status: number;

    /** MaajanZiGongBlanacePlayer huTile. */
    public huTile: number;

    /** MaajanZiGongBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** MaajanZiGongBlanacePlayer totalMoney. */
    public totalMoney: number;

    /** MaajanZiGongBlanacePlayer huIndex. */
    public huIndex: number;

    /** MaajanZiGongBlanacePlayer piao. */
    public piao: number;

    /** MaajanZiGongBlanacePlayer gangScore. */
    public gangScore: number;

    /** MaajanZiGongBlanacePlayer luoboScore. */
    public luoboScore: number;

    /** MaajanZiGongBlanacePlayer huScore. */
    public huScore: number;

    /** MaajanZiGongBlanacePlayer baoting. */
    public baoting: boolean;

    /** MaajanZiGongBlanacePlayer luoboCount. */
    public luoboCount: number;

    /**
     * Creates a new MaajanZiGongBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MaajanZiGongBlanacePlayer instance
     */
    public static create(properties?: IMaajanZiGongBlanacePlayer): MaajanZiGongBlanacePlayer;

    /**
     * Encodes the specified MaajanZiGongBlanacePlayer message. Does not implicitly {@link MaajanZiGongBlanacePlayer.verify|verify} messages.
     * @param message MaajanZiGongBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajanZiGongBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MaajanZiGongBlanacePlayer message, length delimited. Does not implicitly {@link MaajanZiGongBlanacePlayer.verify|verify} messages.
     * @param message MaajanZiGongBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajanZiGongBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MaajanZiGongBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MaajanZiGongBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MaajanZiGongBlanacePlayer;

    /**
     * Decodes a MaajanZiGongBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MaajanZiGongBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MaajanZiGongBlanacePlayer;

    /**
     * Verifies a MaajanZiGongBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MaajanZiGongBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MaajanZiGongBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): MaajanZiGongBlanacePlayer;

    /**
     * Creates a plain object from a MaajanZiGongBlanacePlayer message. Also converts values to other types if specified.
     * @param message MaajanZiGongBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MaajanZiGongBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MaajanZiGongBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Maajan_Luobo_Info. */
export interface IMaajan_Luobo_Info {

    /** Maajan_Luobo_Info pai */
    pai?: (number|null);
}

/** Represents a Maajan_Luobo_Info. */
export class Maajan_Luobo_Info implements IMaajan_Luobo_Info {

    /**
     * Constructs a new Maajan_Luobo_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMaajan_Luobo_Info);

    /** Maajan_Luobo_Info pai. */
    public pai: number;

    /**
     * Creates a new Maajan_Luobo_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Maajan_Luobo_Info instance
     */
    public static create(properties?: IMaajan_Luobo_Info): Maajan_Luobo_Info;

    /**
     * Encodes the specified Maajan_Luobo_Info message. Does not implicitly {@link Maajan_Luobo_Info.verify|verify} messages.
     * @param message Maajan_Luobo_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMaajan_Luobo_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Maajan_Luobo_Info message, length delimited. Does not implicitly {@link Maajan_Luobo_Info.verify|verify} messages.
     * @param message Maajan_Luobo_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMaajan_Luobo_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Maajan_Luobo_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Maajan_Luobo_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Maajan_Luobo_Info;

    /**
     * Decodes a Maajan_Luobo_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Maajan_Luobo_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Maajan_Luobo_Info;

    /**
     * Verifies a Maajan_Luobo_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Maajan_Luobo_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Maajan_Luobo_Info
     */
    public static fromObject(object: { [k: string]: any }): Maajan_Luobo_Info;

    /**
     * Creates a plain object from a Maajan_Luobo_Info message. Also converts values to other types if specified.
     * @param message Maajan_Luobo_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Maajan_Luobo_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Maajan_Luobo_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_MaajanZiGongGameFinish. */
export interface ISC_MaajanZiGongGameFinish {

    /** SC_MaajanZiGongGameFinish players */
    players?: (IMaajan_Player_Info[]|null);

    /** SC_MaajanZiGongGameFinish playerBalance */
    playerBalance?: (IMaajanZiGongBlanacePlayer[]|null);

    /** SC_MaajanZiGongGameFinish luobos */
    luobos?: (IMaajan_Luobo_Info[]|null);
}

/** Represents a SC_MaajanZiGongGameFinish. */
export class SC_MaajanZiGongGameFinish implements ISC_MaajanZiGongGameFinish {

    /**
     * Constructs a new SC_MaajanZiGongGameFinish.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_MaajanZiGongGameFinish);

    /** SC_MaajanZiGongGameFinish players. */
    public players: IMaajan_Player_Info[];

    /** SC_MaajanZiGongGameFinish playerBalance. */
    public playerBalance: IMaajanZiGongBlanacePlayer[];

    /** SC_MaajanZiGongGameFinish luobos. */
    public luobos: IMaajan_Luobo_Info[];

    /**
     * Creates a new SC_MaajanZiGongGameFinish instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_MaajanZiGongGameFinish instance
     */
    public static create(properties?: ISC_MaajanZiGongGameFinish): SC_MaajanZiGongGameFinish;

    /**
     * Encodes the specified SC_MaajanZiGongGameFinish message. Does not implicitly {@link SC_MaajanZiGongGameFinish.verify|verify} messages.
     * @param message SC_MaajanZiGongGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_MaajanZiGongGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_MaajanZiGongGameFinish message, length delimited. Does not implicitly {@link SC_MaajanZiGongGameFinish.verify|verify} messages.
     * @param message SC_MaajanZiGongGameFinish message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_MaajanZiGongGameFinish, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_MaajanZiGongGameFinish message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_MaajanZiGongGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_MaajanZiGongGameFinish;

    /**
     * Decodes a SC_MaajanZiGongGameFinish message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_MaajanZiGongGameFinish
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_MaajanZiGongGameFinish;

    /**
     * Verifies a SC_MaajanZiGongGameFinish message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_MaajanZiGongGameFinish message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_MaajanZiGongGameFinish
     */
    public static fromObject(object: { [k: string]: any }): SC_MaajanZiGongGameFinish;

    /**
     * Creates a plain object from a SC_MaajanZiGongGameFinish message. Also converts values to other types if specified.
     * @param message SC_MaajanZiGongGameFinish
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_MaajanZiGongGameFinish, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_MaajanZiGongGameFinish to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_MaajanZiGongGameFinish {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23156
    }
}

/** Properties of a SC_BaoTingInfos. */
export interface ISC_BaoTingInfos {

    /** SC_BaoTingInfos canbaoting */
    canbaoting?: (number|null);

    /** SC_BaoTingInfos ting */
    ting?: (ITingTips[]|null);
}

/** Represents a SC_BaoTingInfos. */
export class SC_BaoTingInfos implements ISC_BaoTingInfos {

    /**
     * Constructs a new SC_BaoTingInfos.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_BaoTingInfos);

    /** SC_BaoTingInfos canbaoting. */
    public canbaoting: number;

    /** SC_BaoTingInfos ting. */
    public ting: ITingTips[];

    /**
     * Creates a new SC_BaoTingInfos instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_BaoTingInfos instance
     */
    public static create(properties?: ISC_BaoTingInfos): SC_BaoTingInfos;

    /**
     * Encodes the specified SC_BaoTingInfos message. Does not implicitly {@link SC_BaoTingInfos.verify|verify} messages.
     * @param message SC_BaoTingInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_BaoTingInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_BaoTingInfos message, length delimited. Does not implicitly {@link SC_BaoTingInfos.verify|verify} messages.
     * @param message SC_BaoTingInfos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_BaoTingInfos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_BaoTingInfos message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_BaoTingInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_BaoTingInfos;

    /**
     * Decodes a SC_BaoTingInfos message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_BaoTingInfos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_BaoTingInfos;

    /**
     * Verifies a SC_BaoTingInfos message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_BaoTingInfos message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_BaoTingInfos
     */
    public static fromObject(object: { [k: string]: any }): SC_BaoTingInfos;

    /**
     * Creates a plain object from a SC_BaoTingInfos message. Also converts values to other types if specified.
     * @param message SC_BaoTingInfos
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_BaoTingInfos, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_BaoTingInfos to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_BaoTingInfos {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 23157
    }
}

/** OX_CARD_TYPE enum. */
export enum OX_CARD_TYPE {
    OX_CARD_TYPE_NIL = 0,
    OX_CARD_TYPE_OX_NONE = 1,
    OX_CARD_TYPE_OX_1 = 2,
    OX_CARD_TYPE_OX_2 = 3,
    OX_CARD_TYPE_OX_3 = 4,
    OX_CARD_TYPE_OX_4 = 5,
    OX_CARD_TYPE_OX_5 = 6,
    OX_CARD_TYPE_OX_6 = 7,
    OX_CARD_TYPE_OX_7 = 8,
    OX_CARD_TYPE_OX_8 = 9,
    OX_CARD_TYPE_OX_9 = 10,
    OX_CARD_TYPE_OX_10 = 11,
    OX_CARD_TYPE_OX_SHUNZI = 21,
    OX_CARD_TYPE_OX_TONGHUA = 22,
    OX_CARD_TYPE_OX_YINHUA = 23,
    OX_CARD_TYPE_OX_JINHUA = 24,
    OX_CARD_TYPE_OX_HULU = 25,
    OX_CARD_TYPE_OX_BOMB = 26,
    OX_CARD_TYPE_OX_SMALL_5 = 27,
    OX_CARD_TYPE_OX_TONGHUASHUN = 28
}

/** OX_SCORE_AREA enum. */
export enum OX_SCORE_AREA {
    OX_AREA_NIL = 0,
    OX_AREA_TIAN = 1,
    OX_AREA_DI = 2,
    OX_AREA_XUAN = 3,
    OX_AREA_HUANG = 4
}

/** OX_TABLE_STATUS enum. */
export enum OX_TABLE_STATUS {
    TS_NIL = 0,
    TS_FREE = 1,
    TS_BANKER = 2,
    TS_BET = 3,
    TS_SPLIT = 4,
    TS_END = 5
}

/** OX_PLAYER_STATUS enum. */
export enum OX_PLAYER_STATUS {
    PS_WATCHER = 0,
    PS_FREE = 1,
    PS_PLAY = 2,
    PS_BANKRUPTCY = 3
}

/** Properties of an OxCards. */
export interface IOxCards {

    /** OxCards cards */
    cards?: (number[]|null);
}

/** Represents an OxCards. */
export class OxCards implements IOxCards {

    /**
     * Constructs a new OxCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOxCards);

    /** OxCards cards. */
    public cards: number[];

    /**
     * Creates a new OxCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OxCards instance
     */
    public static create(properties?: IOxCards): OxCards;

    /**
     * Encodes the specified OxCards message. Does not implicitly {@link OxCards.verify|verify} messages.
     * @param message OxCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOxCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OxCards message, length delimited. Does not implicitly {@link OxCards.verify|verify} messages.
     * @param message OxCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOxCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OxCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OxCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OxCards;

    /**
     * Decodes an OxCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OxCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OxCards;

    /**
     * Verifies an OxCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OxCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OxCards
     */
    public static fromObject(object: { [k: string]: any }): OxCards;

    /**
     * Creates a plain object from an OxCards message. Also converts values to other types if specified.
     * @param message OxCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OxCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OxCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OxPlayerGamingInfo. */
export interface IOxPlayerGamingInfo {

    /** OxPlayerGamingInfo chairId */
    chairId?: (number|null);

    /** OxPlayerGamingInfo guid */
    guid?: (number|null);

    /** OxPlayerGamingInfo cards */
    cards?: (number[]|null);

    /** OxPlayerGamingInfo callBankerTimes */
    callBankerTimes?: (number|null);

    /** OxPlayerGamingInfo score */
    score?: (number|null);

    /** OxPlayerGamingInfo totalMoney */
    totalMoney?: (number|null);

    /** OxPlayerGamingInfo totalScore */
    totalScore?: (number|null);

    /** OxPlayerGamingInfo type */
    type?: (OX_CARD_TYPE|null);

    /** OxPlayerGamingInfo status */
    status?: (number|null);

    /** OxPlayerGamingInfo cardsPair */
    cardsPair?: (IOxCards[]|null);
}

/** Represents an OxPlayerGamingInfo. */
export class OxPlayerGamingInfo implements IOxPlayerGamingInfo {

    /**
     * Constructs a new OxPlayerGamingInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOxPlayerGamingInfo);

    /** OxPlayerGamingInfo chairId. */
    public chairId: number;

    /** OxPlayerGamingInfo guid. */
    public guid: number;

    /** OxPlayerGamingInfo cards. */
    public cards: number[];

    /** OxPlayerGamingInfo callBankerTimes. */
    public callBankerTimes: number;

    /** OxPlayerGamingInfo score. */
    public score: number;

    /** OxPlayerGamingInfo totalMoney. */
    public totalMoney: number;

    /** OxPlayerGamingInfo totalScore. */
    public totalScore: number;

    /** OxPlayerGamingInfo type. */
    public type: OX_CARD_TYPE;

    /** OxPlayerGamingInfo status. */
    public status: number;

    /** OxPlayerGamingInfo cardsPair. */
    public cardsPair: IOxCards[];

    /**
     * Creates a new OxPlayerGamingInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OxPlayerGamingInfo instance
     */
    public static create(properties?: IOxPlayerGamingInfo): OxPlayerGamingInfo;

    /**
     * Encodes the specified OxPlayerGamingInfo message. Does not implicitly {@link OxPlayerGamingInfo.verify|verify} messages.
     * @param message OxPlayerGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOxPlayerGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OxPlayerGamingInfo message, length delimited. Does not implicitly {@link OxPlayerGamingInfo.verify|verify} messages.
     * @param message OxPlayerGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOxPlayerGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OxPlayerGamingInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OxPlayerGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OxPlayerGamingInfo;

    /**
     * Decodes an OxPlayerGamingInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OxPlayerGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OxPlayerGamingInfo;

    /**
     * Verifies an OxPlayerGamingInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OxPlayerGamingInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OxPlayerGamingInfo
     */
    public static fromObject(object: { [k: string]: any }): OxPlayerGamingInfo;

    /**
     * Creates a plain object from an OxPlayerGamingInfo message. Also converts values to other types if specified.
     * @param message OxPlayerGamingInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OxPlayerGamingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OxPlayerGamingInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_OxStart. */
export interface ISC_OxStart {

    /** SC_OxStart players */
    players?: ({ [k: string]: IOxPlayerGamingInfo }|null);

    /** SC_OxStart curRound */
    curRound?: (number|null);

    /** SC_OxStart totalRound */
    totalRound?: (number|null);
}

/** Represents a SC_OxStart. */
export class SC_OxStart implements ISC_OxStart {

    /**
     * Constructs a new SC_OxStart.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxStart);

    /** SC_OxStart players. */
    public players: { [k: string]: IOxPlayerGamingInfo };

    /** SC_OxStart curRound. */
    public curRound: number;

    /** SC_OxStart totalRound. */
    public totalRound: number;

    /**
     * Creates a new SC_OxStart instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxStart instance
     */
    public static create(properties?: ISC_OxStart): SC_OxStart;

    /**
     * Encodes the specified SC_OxStart message. Does not implicitly {@link SC_OxStart.verify|verify} messages.
     * @param message SC_OxStart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxStart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxStart message, length delimited. Does not implicitly {@link SC_OxStart.verify|verify} messages.
     * @param message SC_OxStart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxStart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxStart message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxStart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxStart;

    /**
     * Decodes a SC_OxStart message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxStart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxStart;

    /**
     * Verifies a SC_OxStart message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxStart message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxStart
     */
    public static fromObject(object: { [k: string]: any }): SC_OxStart;

    /**
     * Creates a plain object from a SC_OxStart message. Also converts values to other types if specified.
     * @param message SC_OxStart
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxStart to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxStart {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26001
    }
}

/** Properties of a SC_AllowCallBanker. */
export interface ISC_AllowCallBanker {

    /** SC_AllowCallBanker timeout */
    timeout?: (number|null);
}

/** Represents a SC_AllowCallBanker. */
export class SC_AllowCallBanker implements ISC_AllowCallBanker {

    /**
     * Constructs a new SC_AllowCallBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowCallBanker);

    /** SC_AllowCallBanker timeout. */
    public timeout: number;

    /**
     * Creates a new SC_AllowCallBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowCallBanker instance
     */
    public static create(properties?: ISC_AllowCallBanker): SC_AllowCallBanker;

    /**
     * Encodes the specified SC_AllowCallBanker message. Does not implicitly {@link SC_AllowCallBanker.verify|verify} messages.
     * @param message SC_AllowCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowCallBanker message, length delimited. Does not implicitly {@link SC_AllowCallBanker.verify|verify} messages.
     * @param message SC_AllowCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowCallBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowCallBanker;

    /**
     * Decodes a SC_AllowCallBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowCallBanker;

    /**
     * Verifies a SC_AllowCallBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowCallBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowCallBanker
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowCallBanker;

    /**
     * Creates a plain object from a SC_AllowCallBanker message. Also converts values to other types if specified.
     * @param message SC_AllowCallBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowCallBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowCallBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowCallBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26002
    }
}

/** Properties of a CS_OxCallBanker. */
export interface ICS_OxCallBanker {

    /** CS_OxCallBanker times */
    times?: (number|null);
}

/** Represents a CS_OxCallBanker. */
export class CS_OxCallBanker implements ICS_OxCallBanker {

    /**
     * Constructs a new CS_OxCallBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxCallBanker);

    /** CS_OxCallBanker times. */
    public times: number;

    /**
     * Creates a new CS_OxCallBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxCallBanker instance
     */
    public static create(properties?: ICS_OxCallBanker): CS_OxCallBanker;

    /**
     * Encodes the specified CS_OxCallBanker message. Does not implicitly {@link CS_OxCallBanker.verify|verify} messages.
     * @param message CS_OxCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxCallBanker message, length delimited. Does not implicitly {@link CS_OxCallBanker.verify|verify} messages.
     * @param message CS_OxCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxCallBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxCallBanker;

    /**
     * Decodes a CS_OxCallBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxCallBanker;

    /**
     * Verifies a CS_OxCallBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxCallBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxCallBanker
     */
    public static fromObject(object: { [k: string]: any }): CS_OxCallBanker;

    /**
     * Creates a plain object from a CS_OxCallBanker message. Also converts values to other types if specified.
     * @param message CS_OxCallBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxCallBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxCallBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxCallBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26003
    }
}

/** Properties of a SC_OxCallBanker. */
export interface ISC_OxCallBanker {

    /** SC_OxCallBanker result */
    result?: (number|null);

    /** SC_OxCallBanker chairId */
    chairId?: (number|null);

    /** SC_OxCallBanker times */
    times?: (number|null);
}

/** Represents a SC_OxCallBanker. */
export class SC_OxCallBanker implements ISC_OxCallBanker {

    /**
     * Constructs a new SC_OxCallBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxCallBanker);

    /** SC_OxCallBanker result. */
    public result: number;

    /** SC_OxCallBanker chairId. */
    public chairId: number;

    /** SC_OxCallBanker times. */
    public times: number;

    /**
     * Creates a new SC_OxCallBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxCallBanker instance
     */
    public static create(properties?: ISC_OxCallBanker): SC_OxCallBanker;

    /**
     * Encodes the specified SC_OxCallBanker message. Does not implicitly {@link SC_OxCallBanker.verify|verify} messages.
     * @param message SC_OxCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxCallBanker message, length delimited. Does not implicitly {@link SC_OxCallBanker.verify|verify} messages.
     * @param message SC_OxCallBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxCallBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxCallBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxCallBanker;

    /**
     * Decodes a SC_OxCallBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxCallBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxCallBanker;

    /**
     * Verifies a SC_OxCallBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxCallBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxCallBanker
     */
    public static fromObject(object: { [k: string]: any }): SC_OxCallBanker;

    /**
     * Creates a plain object from a SC_OxCallBanker message. Also converts values to other types if specified.
     * @param message SC_OxCallBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxCallBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxCallBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxCallBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26004
    }
}

/** Properties of a SC_AllowAddScore. */
export interface ISC_AllowAddScore {

    /** SC_AllowAddScore timeout */
    timeout?: (number|null);
}

/** Represents a SC_AllowAddScore. */
export class SC_AllowAddScore implements ISC_AllowAddScore {

    /**
     * Constructs a new SC_AllowAddScore.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowAddScore);

    /** SC_AllowAddScore timeout. */
    public timeout: number;

    /**
     * Creates a new SC_AllowAddScore instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowAddScore instance
     */
    public static create(properties?: ISC_AllowAddScore): SC_AllowAddScore;

    /**
     * Encodes the specified SC_AllowAddScore message. Does not implicitly {@link SC_AllowAddScore.verify|verify} messages.
     * @param message SC_AllowAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowAddScore message, length delimited. Does not implicitly {@link SC_AllowAddScore.verify|verify} messages.
     * @param message SC_AllowAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowAddScore message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowAddScore;

    /**
     * Decodes a SC_AllowAddScore message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowAddScore;

    /**
     * Verifies a SC_AllowAddScore message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowAddScore message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowAddScore
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowAddScore;

    /**
     * Creates a plain object from a SC_AllowAddScore message. Also converts values to other types if specified.
     * @param message SC_AllowAddScore
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowAddScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowAddScore to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowAddScore {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26005
    }
}

/** Properties of a SC_OxAddScoreStatus. */
export interface ISC_OxAddScoreStatus {

    /** SC_OxAddScoreStatus maxScore */
    maxScore?: (number|Long|null);
}

/** Represents a SC_OxAddScoreStatus. */
export class SC_OxAddScoreStatus implements ISC_OxAddScoreStatus {

    /**
     * Constructs a new SC_OxAddScoreStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxAddScoreStatus);

    /** SC_OxAddScoreStatus maxScore. */
    public maxScore: (number|Long);

    /**
     * Creates a new SC_OxAddScoreStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxAddScoreStatus instance
     */
    public static create(properties?: ISC_OxAddScoreStatus): SC_OxAddScoreStatus;

    /**
     * Encodes the specified SC_OxAddScoreStatus message. Does not implicitly {@link SC_OxAddScoreStatus.verify|verify} messages.
     * @param message SC_OxAddScoreStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxAddScoreStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxAddScoreStatus message, length delimited. Does not implicitly {@link SC_OxAddScoreStatus.verify|verify} messages.
     * @param message SC_OxAddScoreStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxAddScoreStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxAddScoreStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxAddScoreStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxAddScoreStatus;

    /**
     * Decodes a SC_OxAddScoreStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxAddScoreStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxAddScoreStatus;

    /**
     * Verifies a SC_OxAddScoreStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxAddScoreStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxAddScoreStatus
     */
    public static fromObject(object: { [k: string]: any }): SC_OxAddScoreStatus;

    /**
     * Creates a plain object from a SC_OxAddScoreStatus message. Also converts values to other types if specified.
     * @param message SC_OxAddScoreStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxAddScoreStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxAddScoreStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxAddScoreStatus {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26006
    }
}

/** Properties of a CS_OxAddScore. */
export interface ICS_OxAddScore {

    /** CS_OxAddScore area */
    area?: (number|null);

    /** CS_OxAddScore score */
    score?: (number|null);
}

/** Represents a CS_OxAddScore. */
export class CS_OxAddScore implements ICS_OxAddScore {

    /**
     * Constructs a new CS_OxAddScore.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxAddScore);

    /** CS_OxAddScore area. */
    public area: number;

    /** CS_OxAddScore score. */
    public score: number;

    /**
     * Creates a new CS_OxAddScore instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxAddScore instance
     */
    public static create(properties?: ICS_OxAddScore): CS_OxAddScore;

    /**
     * Encodes the specified CS_OxAddScore message. Does not implicitly {@link CS_OxAddScore.verify|verify} messages.
     * @param message CS_OxAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxAddScore message, length delimited. Does not implicitly {@link CS_OxAddScore.verify|verify} messages.
     * @param message CS_OxAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxAddScore message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxAddScore;

    /**
     * Decodes a CS_OxAddScore message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxAddScore;

    /**
     * Verifies a CS_OxAddScore message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxAddScore message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxAddScore
     */
    public static fromObject(object: { [k: string]: any }): CS_OxAddScore;

    /**
     * Creates a plain object from a CS_OxAddScore message. Also converts values to other types if specified.
     * @param message CS_OxAddScore
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxAddScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxAddScore to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxAddScore {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26007
    }
}

/** Properties of a SC_OxAddScore. */
export interface ISC_OxAddScore {

    /** SC_OxAddScore result */
    result?: (number|null);

    /** SC_OxAddScore chairId */
    chairId?: (number|null);

    /** SC_OxAddScore area */
    area?: (number|null);

    /** SC_OxAddScore score */
    score?: (number|Long|null);

    /** SC_OxAddScore money */
    money?: (number|Long|null);
}

/** Represents a SC_OxAddScore. */
export class SC_OxAddScore implements ISC_OxAddScore {

    /**
     * Constructs a new SC_OxAddScore.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxAddScore);

    /** SC_OxAddScore result. */
    public result: number;

    /** SC_OxAddScore chairId. */
    public chairId: number;

    /** SC_OxAddScore area. */
    public area: number;

    /** SC_OxAddScore score. */
    public score: (number|Long);

    /** SC_OxAddScore money. */
    public money: (number|Long);

    /**
     * Creates a new SC_OxAddScore instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxAddScore instance
     */
    public static create(properties?: ISC_OxAddScore): SC_OxAddScore;

    /**
     * Encodes the specified SC_OxAddScore message. Does not implicitly {@link SC_OxAddScore.verify|verify} messages.
     * @param message SC_OxAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxAddScore message, length delimited. Does not implicitly {@link SC_OxAddScore.verify|verify} messages.
     * @param message SC_OxAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxAddScore message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxAddScore;

    /**
     * Decodes a SC_OxAddScore message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxAddScore;

    /**
     * Verifies a SC_OxAddScore message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxAddScore message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxAddScore
     */
    public static fromObject(object: { [k: string]: any }): SC_OxAddScore;

    /**
     * Creates a plain object from a SC_OxAddScore message. Also converts values to other types if specified.
     * @param message SC_OxAddScore
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxAddScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxAddScore to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxAddScore {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26008
    }
}

/** Properties of a SC_OxDealCard. */
export interface ISC_OxDealCard {

    /** SC_OxDealCard cards */
    cards?: (number[]|null);
}

/** Represents a SC_OxDealCard. */
export class SC_OxDealCard implements ISC_OxDealCard {

    /**
     * Constructs a new SC_OxDealCard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxDealCard);

    /** SC_OxDealCard cards. */
    public cards: number[];

    /**
     * Creates a new SC_OxDealCard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxDealCard instance
     */
    public static create(properties?: ISC_OxDealCard): SC_OxDealCard;

    /**
     * Encodes the specified SC_OxDealCard message. Does not implicitly {@link SC_OxDealCard.verify|verify} messages.
     * @param message SC_OxDealCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxDealCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxDealCard message, length delimited. Does not implicitly {@link SC_OxDealCard.verify|verify} messages.
     * @param message SC_OxDealCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxDealCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxDealCard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxDealCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxDealCard;

    /**
     * Decodes a SC_OxDealCard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxDealCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxDealCard;

    /**
     * Verifies a SC_OxDealCard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxDealCard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxDealCard
     */
    public static fromObject(object: { [k: string]: any }): SC_OxDealCard;

    /**
     * Creates a plain object from a SC_OxDealCard message. Also converts values to other types if specified.
     * @param message SC_OxDealCard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxDealCard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxDealCard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxDealCard {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26009
    }
}

/** Properties of a SC_AllowSplitCards. */
export interface ISC_AllowSplitCards {

    /** SC_AllowSplitCards cards */
    cards?: (number[]|null);

    /** SC_AllowSplitCards timeout */
    timeout?: (number|null);
}

/** Represents a SC_AllowSplitCards. */
export class SC_AllowSplitCards implements ISC_AllowSplitCards {

    /**
     * Constructs a new SC_AllowSplitCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllowSplitCards);

    /** SC_AllowSplitCards cards. */
    public cards: number[];

    /** SC_AllowSplitCards timeout. */
    public timeout: number;

    /**
     * Creates a new SC_AllowSplitCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllowSplitCards instance
     */
    public static create(properties?: ISC_AllowSplitCards): SC_AllowSplitCards;

    /**
     * Encodes the specified SC_AllowSplitCards message. Does not implicitly {@link SC_AllowSplitCards.verify|verify} messages.
     * @param message SC_AllowSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllowSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllowSplitCards message, length delimited. Does not implicitly {@link SC_AllowSplitCards.verify|verify} messages.
     * @param message SC_AllowSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllowSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllowSplitCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllowSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllowSplitCards;

    /**
     * Decodes a SC_AllowSplitCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllowSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllowSplitCards;

    /**
     * Verifies a SC_AllowSplitCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllowSplitCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllowSplitCards
     */
    public static fromObject(object: { [k: string]: any }): SC_AllowSplitCards;

    /**
     * Creates a plain object from a SC_AllowSplitCards message. Also converts values to other types if specified.
     * @param message SC_AllowSplitCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllowSplitCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllowSplitCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllowSplitCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26010
    }
}

/** Properties of a CS_OxSplitCards. */
export interface ICS_OxSplitCards {

    /** CS_OxSplitCards cardsPair */
    cardsPair?: (IOxCards[]|null);
}

/** Represents a CS_OxSplitCards. */
export class CS_OxSplitCards implements ICS_OxSplitCards {

    /**
     * Constructs a new CS_OxSplitCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxSplitCards);

    /** CS_OxSplitCards cardsPair. */
    public cardsPair: IOxCards[];

    /**
     * Creates a new CS_OxSplitCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxSplitCards instance
     */
    public static create(properties?: ICS_OxSplitCards): CS_OxSplitCards;

    /**
     * Encodes the specified CS_OxSplitCards message. Does not implicitly {@link CS_OxSplitCards.verify|verify} messages.
     * @param message CS_OxSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxSplitCards message, length delimited. Does not implicitly {@link CS_OxSplitCards.verify|verify} messages.
     * @param message CS_OxSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxSplitCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxSplitCards;

    /**
     * Decodes a CS_OxSplitCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxSplitCards;

    /**
     * Verifies a CS_OxSplitCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxSplitCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxSplitCards
     */
    public static fromObject(object: { [k: string]: any }): CS_OxSplitCards;

    /**
     * Creates a plain object from a CS_OxSplitCards message. Also converts values to other types if specified.
     * @param message CS_OxSplitCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxSplitCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxSplitCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxSplitCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26011
    }
}

/** Properties of a SC_OxSplitCards. */
export interface ISC_OxSplitCards {

    /** SC_OxSplitCards result */
    result?: (number|null);

    /** SC_OxSplitCards chairId */
    chairId?: (number|null);

    /** SC_OxSplitCards cardsPair */
    cardsPair?: (IOxCards[]|null);

    /** SC_OxSplitCards type */
    type?: (OX_CARD_TYPE|null);
}

/** Represents a SC_OxSplitCards. */
export class SC_OxSplitCards implements ISC_OxSplitCards {

    /**
     * Constructs a new SC_OxSplitCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxSplitCards);

    /** SC_OxSplitCards result. */
    public result: number;

    /** SC_OxSplitCards chairId. */
    public chairId: number;

    /** SC_OxSplitCards cardsPair. */
    public cardsPair: IOxCards[];

    /** SC_OxSplitCards type. */
    public type: OX_CARD_TYPE;

    /**
     * Creates a new SC_OxSplitCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxSplitCards instance
     */
    public static create(properties?: ISC_OxSplitCards): SC_OxSplitCards;

    /**
     * Encodes the specified SC_OxSplitCards message. Does not implicitly {@link SC_OxSplitCards.verify|verify} messages.
     * @param message SC_OxSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxSplitCards message, length delimited. Does not implicitly {@link SC_OxSplitCards.verify|verify} messages.
     * @param message SC_OxSplitCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxSplitCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxSplitCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxSplitCards;

    /**
     * Decodes a SC_OxSplitCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxSplitCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxSplitCards;

    /**
     * Verifies a SC_OxSplitCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxSplitCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxSplitCards
     */
    public static fromObject(object: { [k: string]: any }): SC_OxSplitCards;

    /**
     * Creates a plain object from a SC_OxSplitCards message. Also converts values to other types if specified.
     * @param message SC_OxSplitCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxSplitCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxSplitCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxSplitCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26012
    }
}

/** Properties of an OxPlayerBalance. */
export interface IOxPlayerBalance {

    /** OxPlayerBalance chairId */
    chairId?: (number|null);

    /** OxPlayerBalance guid */
    guid?: (number|null);

    /** OxPlayerBalance score */
    score?: (number|null);

    /** OxPlayerBalance money */
    money?: (number|null);

    /** OxPlayerBalance cardsPair */
    cardsPair?: (IOxCards[]|null);

    /** OxPlayerBalance type */
    type?: (OX_CARD_TYPE|null);

    /** OxPlayerBalance betMoney */
    betMoney?: (number|null);

    /** OxPlayerBalance totalScore */
    totalScore?: (number|null);

    /** OxPlayerBalance totalMoney */
    totalMoney?: (number|null);

    /** OxPlayerBalance pstatus */
    pstatus?: (OX_PLAYER_STATUS|null);
}

/** Represents an OxPlayerBalance. */
export class OxPlayerBalance implements IOxPlayerBalance {

    /**
     * Constructs a new OxPlayerBalance.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOxPlayerBalance);

    /** OxPlayerBalance chairId. */
    public chairId: number;

    /** OxPlayerBalance guid. */
    public guid: number;

    /** OxPlayerBalance score. */
    public score: number;

    /** OxPlayerBalance money. */
    public money: number;

    /** OxPlayerBalance cardsPair. */
    public cardsPair: IOxCards[];

    /** OxPlayerBalance type. */
    public type: OX_CARD_TYPE;

    /** OxPlayerBalance betMoney. */
    public betMoney: number;

    /** OxPlayerBalance totalScore. */
    public totalScore: number;

    /** OxPlayerBalance totalMoney. */
    public totalMoney: number;

    /** OxPlayerBalance pstatus. */
    public pstatus: OX_PLAYER_STATUS;

    /**
     * Creates a new OxPlayerBalance instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OxPlayerBalance instance
     */
    public static create(properties?: IOxPlayerBalance): OxPlayerBalance;

    /**
     * Encodes the specified OxPlayerBalance message. Does not implicitly {@link OxPlayerBalance.verify|verify} messages.
     * @param message OxPlayerBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOxPlayerBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OxPlayerBalance message, length delimited. Does not implicitly {@link OxPlayerBalance.verify|verify} messages.
     * @param message OxPlayerBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOxPlayerBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OxPlayerBalance message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OxPlayerBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OxPlayerBalance;

    /**
     * Decodes an OxPlayerBalance message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OxPlayerBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OxPlayerBalance;

    /**
     * Verifies an OxPlayerBalance message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OxPlayerBalance message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OxPlayerBalance
     */
    public static fromObject(object: { [k: string]: any }): OxPlayerBalance;

    /**
     * Creates a plain object from an OxPlayerBalance message. Also converts values to other types if specified.
     * @param message OxPlayerBalance
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OxPlayerBalance, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OxPlayerBalance to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BankerInfo. */
export interface IBankerInfo {

    /** BankerInfo chairId */
    chairId?: (number|null);

    /** BankerInfo base */
    base?: (IPLAYER_BASE_INFO|null);

    /** BankerInfo money */
    money?: (number|Long|null);

    /** BankerInfo bankertimes */
    bankertimes?: (number|null);

    /** BankerInfo maxScore */
    maxScore?: (number|Long|null);

    /** BankerInfo bankerScore */
    bankerScore?: (number|Long|null);

    /** BankerInfo leftScore */
    leftScore?: (number|Long|null);
}

/** Represents a BankerInfo. */
export class BankerInfo implements IBankerInfo {

    /**
     * Constructs a new BankerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBankerInfo);

    /** BankerInfo chairId. */
    public chairId: number;

    /** BankerInfo base. */
    public base?: (IPLAYER_BASE_INFO|null);

    /** BankerInfo money. */
    public money: (number|Long);

    /** BankerInfo bankertimes. */
    public bankertimes: number;

    /** BankerInfo maxScore. */
    public maxScore: (number|Long);

    /** BankerInfo bankerScore. */
    public bankerScore: (number|Long);

    /** BankerInfo leftScore. */
    public leftScore: (number|Long);

    /**
     * Creates a new BankerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BankerInfo instance
     */
    public static create(properties?: IBankerInfo): BankerInfo;

    /**
     * Encodes the specified BankerInfo message. Does not implicitly {@link BankerInfo.verify|verify} messages.
     * @param message BankerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBankerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BankerInfo message, length delimited. Does not implicitly {@link BankerInfo.verify|verify} messages.
     * @param message BankerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBankerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BankerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BankerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BankerInfo;

    /**
     * Decodes a BankerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BankerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BankerInfo;

    /**
     * Verifies a BankerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BankerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BankerInfo
     */
    public static fromObject(object: { [k: string]: any }): BankerInfo;

    /**
     * Creates a plain object from a BankerInfo message. Also converts values to other types if specified.
     * @param message BankerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BankerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BankerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_OxBankerInfo. */
export interface ISC_OxBankerInfo {

    /** SC_OxBankerInfo bankerInfo */
    bankerInfo?: (IBankerInfo|null);
}

/** Represents a SC_OxBankerInfo. */
export class SC_OxBankerInfo implements ISC_OxBankerInfo {

    /**
     * Constructs a new SC_OxBankerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxBankerInfo);

    /** SC_OxBankerInfo bankerInfo. */
    public bankerInfo?: (IBankerInfo|null);

    /**
     * Creates a new SC_OxBankerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxBankerInfo instance
     */
    public static create(properties?: ISC_OxBankerInfo): SC_OxBankerInfo;

    /**
     * Encodes the specified SC_OxBankerInfo message. Does not implicitly {@link SC_OxBankerInfo.verify|verify} messages.
     * @param message SC_OxBankerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxBankerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxBankerInfo message, length delimited. Does not implicitly {@link SC_OxBankerInfo.verify|verify} messages.
     * @param message SC_OxBankerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxBankerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxBankerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxBankerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxBankerInfo;

    /**
     * Decodes a SC_OxBankerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxBankerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxBankerInfo;

    /**
     * Verifies a SC_OxBankerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxBankerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxBankerInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_OxBankerInfo;

    /**
     * Creates a plain object from a SC_OxBankerInfo message. Also converts values to other types if specified.
     * @param message SC_OxBankerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxBankerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxBankerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxBankerInfo {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26013
    }
}

/** Properties of a SC_OxFinalOver. */
export interface ISC_OxFinalOver {

    /** SC_OxFinalOver balances */
    balances?: (IOxPlayerBalance[]|null);
}

/** Represents a SC_OxFinalOver. */
export class SC_OxFinalOver implements ISC_OxFinalOver {

    /**
     * Constructs a new SC_OxFinalOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxFinalOver);

    /** SC_OxFinalOver balances. */
    public balances: IOxPlayerBalance[];

    /**
     * Creates a new SC_OxFinalOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxFinalOver instance
     */
    public static create(properties?: ISC_OxFinalOver): SC_OxFinalOver;

    /**
     * Encodes the specified SC_OxFinalOver message. Does not implicitly {@link SC_OxFinalOver.verify|verify} messages.
     * @param message SC_OxFinalOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxFinalOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxFinalOver message, length delimited. Does not implicitly {@link SC_OxFinalOver.verify|verify} messages.
     * @param message SC_OxFinalOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxFinalOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxFinalOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxFinalOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxFinalOver;

    /**
     * Decodes a SC_OxFinalOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxFinalOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxFinalOver;

    /**
     * Verifies a SC_OxFinalOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxFinalOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxFinalOver
     */
    public static fromObject(object: { [k: string]: any }): SC_OxFinalOver;

    /**
     * Creates a plain object from a SC_OxFinalOver message. Also converts values to other types if specified.
     * @param message SC_OxFinalOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxFinalOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxFinalOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxFinalOver {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26014
    }
}

/** Properties of a CS_OxStartGame. */
export interface ICS_OxStartGame {
}

/** Represents a CS_OxStartGame. */
export class CS_OxStartGame implements ICS_OxStartGame {

    /**
     * Constructs a new CS_OxStartGame.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxStartGame);

    /**
     * Creates a new CS_OxStartGame instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxStartGame instance
     */
    public static create(properties?: ICS_OxStartGame): CS_OxStartGame;

    /**
     * Encodes the specified CS_OxStartGame message. Does not implicitly {@link CS_OxStartGame.verify|verify} messages.
     * @param message CS_OxStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxStartGame message, length delimited. Does not implicitly {@link CS_OxStartGame.verify|verify} messages.
     * @param message CS_OxStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxStartGame message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxStartGame;

    /**
     * Decodes a CS_OxStartGame message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxStartGame;

    /**
     * Verifies a CS_OxStartGame message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxStartGame message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxStartGame
     */
    public static fromObject(object: { [k: string]: any }): CS_OxStartGame;

    /**
     * Creates a plain object from a CS_OxStartGame message. Also converts values to other types if specified.
     * @param message CS_OxStartGame
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxStartGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxStartGame to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxStartGame {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26015
    }
}

/** Properties of a SC_OxStartGame. */
export interface ISC_OxStartGame {

    /** SC_OxStartGame result */
    result?: (number|null);
}

/** Represents a SC_OxStartGame. */
export class SC_OxStartGame implements ISC_OxStartGame {

    /**
     * Constructs a new SC_OxStartGame.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxStartGame);

    /** SC_OxStartGame result. */
    public result: number;

    /**
     * Creates a new SC_OxStartGame instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxStartGame instance
     */
    public static create(properties?: ISC_OxStartGame): SC_OxStartGame;

    /**
     * Encodes the specified SC_OxStartGame message. Does not implicitly {@link SC_OxStartGame.verify|verify} messages.
     * @param message SC_OxStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxStartGame message, length delimited. Does not implicitly {@link SC_OxStartGame.verify|verify} messages.
     * @param message SC_OxStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxStartGame message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxStartGame;

    /**
     * Decodes a SC_OxStartGame message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxStartGame;

    /**
     * Verifies a SC_OxStartGame message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxStartGame message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxStartGame
     */
    public static fromObject(object: { [k: string]: any }): SC_OxStartGame;

    /**
     * Creates a plain object from a SC_OxStartGame message. Also converts values to other types if specified.
     * @param message SC_OxStartGame
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxStartGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxStartGame to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxStartGame {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26016
    }
}

/** Properties of a SC_OxTableInfo. */
export interface ISC_OxTableInfo {

    /** SC_OxTableInfo banker */
    banker?: (number|null);

    /** SC_OxTableInfo players */
    players?: ({ [k: string]: IOxPlayerGamingInfo }|null);

    /** SC_OxTableInfo round */
    round?: (number|null);

    /** SC_OxTableInfo status */
    status?: (OX_TABLE_STATUS|null);

    /** SC_OxTableInfo pstatusList */
    pstatusList?: ({ [k: string]: OX_PLAYER_STATUS }|null);
}

/** Represents a SC_OxTableInfo. */
export class SC_OxTableInfo implements ISC_OxTableInfo {

    /**
     * Constructs a new SC_OxTableInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxTableInfo);

    /** SC_OxTableInfo banker. */
    public banker: number;

    /** SC_OxTableInfo players. */
    public players: { [k: string]: IOxPlayerGamingInfo };

    /** SC_OxTableInfo round. */
    public round: number;

    /** SC_OxTableInfo status. */
    public status: OX_TABLE_STATUS;

    /** SC_OxTableInfo pstatusList. */
    public pstatusList: { [k: string]: OX_PLAYER_STATUS };

    /**
     * Creates a new SC_OxTableInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxTableInfo instance
     */
    public static create(properties?: ISC_OxTableInfo): SC_OxTableInfo;

    /**
     * Encodes the specified SC_OxTableInfo message. Does not implicitly {@link SC_OxTableInfo.verify|verify} messages.
     * @param message SC_OxTableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxTableInfo message, length delimited. Does not implicitly {@link SC_OxTableInfo.verify|verify} messages.
     * @param message SC_OxTableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxTableInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxTableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxTableInfo;

    /**
     * Decodes a SC_OxTableInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxTableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxTableInfo;

    /**
     * Verifies a SC_OxTableInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxTableInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxTableInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_OxTableInfo;

    /**
     * Creates a plain object from a SC_OxTableInfo message. Also converts values to other types if specified.
     * @param message SC_OxTableInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxTableInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxTableInfo {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26017
    }
}

/** Properties of a CS_OxShowCards. */
export interface ICS_OxShowCards {

    /** CS_OxShowCards chairId */
    chairId?: (number|null);
}

/** Represents a CS_OxShowCards. */
export class CS_OxShowCards implements ICS_OxShowCards {

    /**
     * Constructs a new CS_OxShowCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxShowCards);

    /** CS_OxShowCards chairId. */
    public chairId: number;

    /**
     * Creates a new CS_OxShowCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxShowCards instance
     */
    public static create(properties?: ICS_OxShowCards): CS_OxShowCards;

    /**
     * Encodes the specified CS_OxShowCards message. Does not implicitly {@link CS_OxShowCards.verify|verify} messages.
     * @param message CS_OxShowCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxShowCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxShowCards message, length delimited. Does not implicitly {@link CS_OxShowCards.verify|verify} messages.
     * @param message CS_OxShowCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxShowCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxShowCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxShowCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxShowCards;

    /**
     * Decodes a CS_OxShowCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxShowCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxShowCards;

    /**
     * Verifies a CS_OxShowCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxShowCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxShowCards
     */
    public static fromObject(object: { [k: string]: any }): CS_OxShowCards;

    /**
     * Creates a plain object from a CS_OxShowCards message. Also converts values to other types if specified.
     * @param message CS_OxShowCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxShowCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxShowCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxShowCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26018
    }
}

/** Properties of a SC_OxShowCardsToAll. */
export interface ISC_OxShowCardsToAll {

    /** SC_OxShowCardsToAll result */
    result?: (number|null);

    /** SC_OxShowCardsToAll chairId */
    chairId?: (number|null);

    /** SC_OxShowCardsToAll cards */
    cards?: (number[]|null);

    /** SC_OxShowCardsToAll type */
    type?: (OX_CARD_TYPE|null);
}

/** Represents a SC_OxShowCardsToAll. */
export class SC_OxShowCardsToAll implements ISC_OxShowCardsToAll {

    /**
     * Constructs a new SC_OxShowCardsToAll.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxShowCardsToAll);

    /** SC_OxShowCardsToAll result. */
    public result: number;

    /** SC_OxShowCardsToAll chairId. */
    public chairId: number;

    /** SC_OxShowCardsToAll cards. */
    public cards: number[];

    /** SC_OxShowCardsToAll type. */
    public type: OX_CARD_TYPE;

    /**
     * Creates a new SC_OxShowCardsToAll instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxShowCardsToAll instance
     */
    public static create(properties?: ISC_OxShowCardsToAll): SC_OxShowCardsToAll;

    /**
     * Encodes the specified SC_OxShowCardsToAll message. Does not implicitly {@link SC_OxShowCardsToAll.verify|verify} messages.
     * @param message SC_OxShowCardsToAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxShowCardsToAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxShowCardsToAll message, length delimited. Does not implicitly {@link SC_OxShowCardsToAll.verify|verify} messages.
     * @param message SC_OxShowCardsToAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxShowCardsToAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxShowCardsToAll message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxShowCardsToAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxShowCardsToAll;

    /**
     * Decodes a SC_OxShowCardsToAll message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxShowCardsToAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxShowCardsToAll;

    /**
     * Verifies a SC_OxShowCardsToAll message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxShowCardsToAll message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxShowCardsToAll
     */
    public static fromObject(object: { [k: string]: any }): SC_OxShowCardsToAll;

    /**
     * Creates a plain object from a SC_OxShowCardsToAll message. Also converts values to other types if specified.
     * @param message SC_OxShowCardsToAll
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxShowCardsToAll, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxShowCardsToAll to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxShowCardsToAll {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26019
    }
}

/** Properties of a SC_OxBankerRequests. */
export interface ISC_OxBankerRequests {

    /** SC_OxBankerRequests bankerRequest */
    bankerRequest?: (IPLAYER_BASE_INFO[]|null);
}

/** Represents a SC_OxBankerRequests. */
export class SC_OxBankerRequests implements ISC_OxBankerRequests {

    /**
     * Constructs a new SC_OxBankerRequests.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxBankerRequests);

    /** SC_OxBankerRequests bankerRequest. */
    public bankerRequest: IPLAYER_BASE_INFO[];

    /**
     * Creates a new SC_OxBankerRequests instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxBankerRequests instance
     */
    public static create(properties?: ISC_OxBankerRequests): SC_OxBankerRequests;

    /**
     * Encodes the specified SC_OxBankerRequests message. Does not implicitly {@link SC_OxBankerRequests.verify|verify} messages.
     * @param message SC_OxBankerRequests message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxBankerRequests, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxBankerRequests message, length delimited. Does not implicitly {@link SC_OxBankerRequests.verify|verify} messages.
     * @param message SC_OxBankerRequests message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxBankerRequests, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxBankerRequests message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxBankerRequests
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxBankerRequests;

    /**
     * Decodes a SC_OxBankerRequests message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxBankerRequests
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxBankerRequests;

    /**
     * Verifies a SC_OxBankerRequests message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxBankerRequests message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxBankerRequests
     */
    public static fromObject(object: { [k: string]: any }): SC_OxBankerRequests;

    /**
     * Creates a plain object from a SC_OxBankerRequests message. Also converts values to other types if specified.
     * @param message SC_OxBankerRequests
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxBankerRequests, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxBankerRequests to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxBankerRequests {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26020
    }
}

/** Properties of an EveryAreaInfo. */
export interface IEveryAreaInfo {

    /** EveryAreaInfo maxBetScore */
    maxBetScore?: (number|Long|null);

    /** EveryAreaInfo betTianTotal */
    betTianTotal?: (number|Long|null);

    /** EveryAreaInfo betDiTotal */
    betDiTotal?: (number|Long|null);

    /** EveryAreaInfo betXuanTotal */
    betXuanTotal?: (number|Long|null);

    /** EveryAreaInfo betHuangTotal */
    betHuangTotal?: (number|Long|null);

    /** EveryAreaInfo leftMoneyBet */
    leftMoneyBet?: (number|Long|null);

    /** EveryAreaInfo allAreaBetMoney */
    allAreaBetMoney?: (number|Long|null);
}

/** Represents an EveryAreaInfo. */
export class EveryAreaInfo implements IEveryAreaInfo {

    /**
     * Constructs a new EveryAreaInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEveryAreaInfo);

    /** EveryAreaInfo maxBetScore. */
    public maxBetScore: (number|Long);

    /** EveryAreaInfo betTianTotal. */
    public betTianTotal: (number|Long);

    /** EveryAreaInfo betDiTotal. */
    public betDiTotal: (number|Long);

    /** EveryAreaInfo betXuanTotal. */
    public betXuanTotal: (number|Long);

    /** EveryAreaInfo betHuangTotal. */
    public betHuangTotal: (number|Long);

    /** EveryAreaInfo leftMoneyBet. */
    public leftMoneyBet: (number|Long);

    /** EveryAreaInfo allAreaBetMoney. */
    public allAreaBetMoney: (number|Long);

    /**
     * Creates a new EveryAreaInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EveryAreaInfo instance
     */
    public static create(properties?: IEveryAreaInfo): EveryAreaInfo;

    /**
     * Encodes the specified EveryAreaInfo message. Does not implicitly {@link EveryAreaInfo.verify|verify} messages.
     * @param message EveryAreaInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEveryAreaInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EveryAreaInfo message, length delimited. Does not implicitly {@link EveryAreaInfo.verify|verify} messages.
     * @param message EveryAreaInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEveryAreaInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EveryAreaInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EveryAreaInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EveryAreaInfo;

    /**
     * Decodes an EveryAreaInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EveryAreaInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EveryAreaInfo;

    /**
     * Verifies an EveryAreaInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EveryAreaInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EveryAreaInfo
     */
    public static fromObject(object: { [k: string]: any }): EveryAreaInfo;

    /**
     * Creates a plain object from an EveryAreaInfo message. Also converts values to other types if specified.
     * @param message EveryAreaInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EveryAreaInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EveryAreaInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_OxEveryArea. */
export interface ISC_OxEveryArea {

    /** SC_OxEveryArea AreaInfo */
    AreaInfo?: (IEveryAreaInfo|null);
}

/** Represents a SC_OxEveryArea. */
export class SC_OxEveryArea implements ISC_OxEveryArea {

    /**
     * Constructs a new SC_OxEveryArea.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxEveryArea);

    /** SC_OxEveryArea AreaInfo. */
    public AreaInfo?: (IEveryAreaInfo|null);

    /**
     * Creates a new SC_OxEveryArea instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxEveryArea instance
     */
    public static create(properties?: ISC_OxEveryArea): SC_OxEveryArea;

    /**
     * Encodes the specified SC_OxEveryArea message. Does not implicitly {@link SC_OxEveryArea.verify|verify} messages.
     * @param message SC_OxEveryArea message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxEveryArea, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxEveryArea message, length delimited. Does not implicitly {@link SC_OxEveryArea.verify|verify} messages.
     * @param message SC_OxEveryArea message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxEveryArea, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxEveryArea message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxEveryArea
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxEveryArea;

    /**
     * Decodes a SC_OxEveryArea message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxEveryArea
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxEveryArea;

    /**
     * Verifies a SC_OxEveryArea message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxEveryArea message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxEveryArea
     */
    public static fromObject(object: { [k: string]: any }): SC_OxEveryArea;

    /**
     * Creates a plain object from a SC_OxEveryArea message. Also converts values to other types if specified.
     * @param message SC_OxEveryArea
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxEveryArea, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxEveryArea to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxEveryArea {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26021
    }
}

/** Properties of a CS_OxRequestBanker. */
export interface ICS_OxRequestBanker {

    /** CS_OxRequestBanker multi */
    multi?: (number|null);
}

/** Represents a CS_OxRequestBanker. */
export class CS_OxRequestBanker implements ICS_OxRequestBanker {

    /**
     * Constructs a new CS_OxRequestBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxRequestBanker);

    /** CS_OxRequestBanker multi. */
    public multi: number;

    /**
     * Creates a new CS_OxRequestBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxRequestBanker instance
     */
    public static create(properties?: ICS_OxRequestBanker): CS_OxRequestBanker;

    /**
     * Encodes the specified CS_OxRequestBanker message. Does not implicitly {@link CS_OxRequestBanker.verify|verify} messages.
     * @param message CS_OxRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxRequestBanker message, length delimited. Does not implicitly {@link CS_OxRequestBanker.verify|verify} messages.
     * @param message CS_OxRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxRequestBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxRequestBanker;

    /**
     * Decodes a CS_OxRequestBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxRequestBanker;

    /**
     * Verifies a CS_OxRequestBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxRequestBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxRequestBanker
     */
    public static fromObject(object: { [k: string]: any }): CS_OxRequestBanker;

    /**
     * Creates a plain object from a CS_OxRequestBanker message. Also converts values to other types if specified.
     * @param message CS_OxRequestBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxRequestBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxRequestBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxRequestBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26022
    }
}

/** Properties of a SC_OxRequestBanker. */
export interface ISC_OxRequestBanker {

    /** SC_OxRequestBanker result */
    result?: (number|null);
}

/** Represents a SC_OxRequestBanker. */
export class SC_OxRequestBanker implements ISC_OxRequestBanker {

    /**
     * Constructs a new SC_OxRequestBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxRequestBanker);

    /** SC_OxRequestBanker result. */
    public result: number;

    /**
     * Creates a new SC_OxRequestBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxRequestBanker instance
     */
    public static create(properties?: ISC_OxRequestBanker): SC_OxRequestBanker;

    /**
     * Encodes the specified SC_OxRequestBanker message. Does not implicitly {@link SC_OxRequestBanker.verify|verify} messages.
     * @param message SC_OxRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxRequestBanker message, length delimited. Does not implicitly {@link SC_OxRequestBanker.verify|verify} messages.
     * @param message SC_OxRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxRequestBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxRequestBanker;

    /**
     * Decodes a SC_OxRequestBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxRequestBanker;

    /**
     * Verifies a SC_OxRequestBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxRequestBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxRequestBanker
     */
    public static fromObject(object: { [k: string]: any }): SC_OxRequestBanker;

    /**
     * Creates a plain object from a SC_OxRequestBanker message. Also converts values to other types if specified.
     * @param message SC_OxRequestBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxRequestBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxRequestBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxRequestBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26023
    }
}

/** Properties of a CS_OxUnRequestBanker. */
export interface ICS_OxUnRequestBanker {
}

/** Represents a CS_OxUnRequestBanker. */
export class CS_OxUnRequestBanker implements ICS_OxUnRequestBanker {

    /**
     * Constructs a new CS_OxUnRequestBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxUnRequestBanker);

    /**
     * Creates a new CS_OxUnRequestBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxUnRequestBanker instance
     */
    public static create(properties?: ICS_OxUnRequestBanker): CS_OxUnRequestBanker;

    /**
     * Encodes the specified CS_OxUnRequestBanker message. Does not implicitly {@link CS_OxUnRequestBanker.verify|verify} messages.
     * @param message CS_OxUnRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxUnRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxUnRequestBanker message, length delimited. Does not implicitly {@link CS_OxUnRequestBanker.verify|verify} messages.
     * @param message CS_OxUnRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxUnRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxUnRequestBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxUnRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxUnRequestBanker;

    /**
     * Decodes a CS_OxUnRequestBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxUnRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxUnRequestBanker;

    /**
     * Verifies a CS_OxUnRequestBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxUnRequestBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxUnRequestBanker
     */
    public static fromObject(object: { [k: string]: any }): CS_OxUnRequestBanker;

    /**
     * Creates a plain object from a CS_OxUnRequestBanker message. Also converts values to other types if specified.
     * @param message CS_OxUnRequestBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxUnRequestBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxUnRequestBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxUnRequestBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26024
    }
}

/** Properties of a SC_OxUnRequestBanker. */
export interface ISC_OxUnRequestBanker {

    /** SC_OxUnRequestBanker result */
    result?: (number|null);
}

/** Represents a SC_OxUnRequestBanker. */
export class SC_OxUnRequestBanker implements ISC_OxUnRequestBanker {

    /**
     * Constructs a new SC_OxUnRequestBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxUnRequestBanker);

    /** SC_OxUnRequestBanker result. */
    public result: number;

    /**
     * Creates a new SC_OxUnRequestBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxUnRequestBanker instance
     */
    public static create(properties?: ISC_OxUnRequestBanker): SC_OxUnRequestBanker;

    /**
     * Encodes the specified SC_OxUnRequestBanker message. Does not implicitly {@link SC_OxUnRequestBanker.verify|verify} messages.
     * @param message SC_OxUnRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxUnRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxUnRequestBanker message, length delimited. Does not implicitly {@link SC_OxUnRequestBanker.verify|verify} messages.
     * @param message SC_OxUnRequestBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxUnRequestBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxUnRequestBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxUnRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxUnRequestBanker;

    /**
     * Decodes a SC_OxUnRequestBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxUnRequestBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxUnRequestBanker;

    /**
     * Verifies a SC_OxUnRequestBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxUnRequestBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxUnRequestBanker
     */
    public static fromObject(object: { [k: string]: any }): SC_OxUnRequestBanker;

    /**
     * Creates a plain object from a SC_OxUnRequestBanker message. Also converts values to other types if specified.
     * @param message SC_OxUnRequestBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxUnRequestBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxUnRequestBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxUnRequestBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26025
    }
}

/** Properties of a CS_OxLeaveBanker. */
export interface ICS_OxLeaveBanker {
}

/** Represents a CS_OxLeaveBanker. */
export class CS_OxLeaveBanker implements ICS_OxLeaveBanker {

    /**
     * Constructs a new CS_OxLeaveBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_OxLeaveBanker);

    /**
     * Creates a new CS_OxLeaveBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_OxLeaveBanker instance
     */
    public static create(properties?: ICS_OxLeaveBanker): CS_OxLeaveBanker;

    /**
     * Encodes the specified CS_OxLeaveBanker message. Does not implicitly {@link CS_OxLeaveBanker.verify|verify} messages.
     * @param message CS_OxLeaveBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_OxLeaveBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_OxLeaveBanker message, length delimited. Does not implicitly {@link CS_OxLeaveBanker.verify|verify} messages.
     * @param message CS_OxLeaveBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_OxLeaveBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_OxLeaveBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_OxLeaveBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_OxLeaveBanker;

    /**
     * Decodes a CS_OxLeaveBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_OxLeaveBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_OxLeaveBanker;

    /**
     * Verifies a CS_OxLeaveBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_OxLeaveBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_OxLeaveBanker
     */
    public static fromObject(object: { [k: string]: any }): CS_OxLeaveBanker;

    /**
     * Creates a plain object from a CS_OxLeaveBanker message. Also converts values to other types if specified.
     * @param message CS_OxLeaveBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_OxLeaveBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_OxLeaveBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_OxLeaveBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26026
    }
}

/** Properties of a SC_OxLeaveBanker. */
export interface ISC_OxLeaveBanker {

    /** SC_OxLeaveBanker result */
    result?: (number|null);
}

/** Represents a SC_OxLeaveBanker. */
export class SC_OxLeaveBanker implements ISC_OxLeaveBanker {

    /**
     * Constructs a new SC_OxLeaveBanker.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxLeaveBanker);

    /** SC_OxLeaveBanker result. */
    public result: number;

    /**
     * Creates a new SC_OxLeaveBanker instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxLeaveBanker instance
     */
    public static create(properties?: ISC_OxLeaveBanker): SC_OxLeaveBanker;

    /**
     * Encodes the specified SC_OxLeaveBanker message. Does not implicitly {@link SC_OxLeaveBanker.verify|verify} messages.
     * @param message SC_OxLeaveBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxLeaveBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxLeaveBanker message, length delimited. Does not implicitly {@link SC_OxLeaveBanker.verify|verify} messages.
     * @param message SC_OxLeaveBanker message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxLeaveBanker, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxLeaveBanker message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxLeaveBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxLeaveBanker;

    /**
     * Decodes a SC_OxLeaveBanker message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxLeaveBanker
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxLeaveBanker;

    /**
     * Verifies a SC_OxLeaveBanker message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxLeaveBanker message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxLeaveBanker
     */
    public static fromObject(object: { [k: string]: any }): SC_OxLeaveBanker;

    /**
     * Creates a plain object from a SC_OxLeaveBanker message. Also converts values to other types if specified.
     * @param message SC_OxLeaveBanker
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxLeaveBanker, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxLeaveBanker to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxLeaveBanker {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26027
    }
}

/** Properties of a CardsTypeInfo. */
export interface ICardsTypeInfo {

    /** CardsTypeInfo area */
    area?: (number|null);

    /** CardsTypeInfo cardType */
    cardType?: (number|null);

    /** CardsTypeInfo cardTimes */
    cardTimes?: (number|null);
}

/** Represents a CardsTypeInfo. */
export class CardsTypeInfo implements ICardsTypeInfo {

    /**
     * Constructs a new CardsTypeInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICardsTypeInfo);

    /** CardsTypeInfo area. */
    public area: number;

    /** CardsTypeInfo cardType. */
    public cardType: number;

    /** CardsTypeInfo cardTimes. */
    public cardTimes: number;

    /**
     * Creates a new CardsTypeInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CardsTypeInfo instance
     */
    public static create(properties?: ICardsTypeInfo): CardsTypeInfo;

    /**
     * Encodes the specified CardsTypeInfo message. Does not implicitly {@link CardsTypeInfo.verify|verify} messages.
     * @param message CardsTypeInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICardsTypeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CardsTypeInfo message, length delimited. Does not implicitly {@link CardsTypeInfo.verify|verify} messages.
     * @param message CardsTypeInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICardsTypeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CardsTypeInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CardsTypeInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CardsTypeInfo;

    /**
     * Decodes a CardsTypeInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CardsTypeInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CardsTypeInfo;

    /**
     * Verifies a CardsTypeInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CardsTypeInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CardsTypeInfo
     */
    public static fromObject(object: { [k: string]: any }): CardsTypeInfo;

    /**
     * Creates a plain object from a CardsTypeInfo message. Also converts values to other types if specified.
     * @param message CardsTypeInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CardsTypeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CardsTypeInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_OxStatusInfo. */
export interface ISC_OxStatusInfo {

    /** SC_OxStatusInfo status */
    status?: (number|null);

    /** SC_OxStatusInfo banker */
    banker?: (number|null);

    /** SC_OxStatusInfo bankerList */
    bankerList?: (IPLAYER_BASE_INFO[]|null);

    /** SC_OxStatusInfo bets */
    bets?: ({ [k: string]: number }|null);

    /** SC_OxStatusInfo cards */
    cards?: (number[]|null);

    /** SC_OxStatusInfo result */
    result?: (ICardsTypeInfo[]|null);
}

/** Represents a SC_OxStatusInfo. */
export class SC_OxStatusInfo implements ISC_OxStatusInfo {

    /**
     * Constructs a new SC_OxStatusInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxStatusInfo);

    /** SC_OxStatusInfo status. */
    public status: number;

    /** SC_OxStatusInfo banker. */
    public banker: number;

    /** SC_OxStatusInfo bankerList. */
    public bankerList: IPLAYER_BASE_INFO[];

    /** SC_OxStatusInfo bets. */
    public bets: { [k: string]: number };

    /** SC_OxStatusInfo cards. */
    public cards: number[];

    /** SC_OxStatusInfo result. */
    public result: ICardsTypeInfo[];

    /**
     * Creates a new SC_OxStatusInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxStatusInfo instance
     */
    public static create(properties?: ISC_OxStatusInfo): SC_OxStatusInfo;

    /**
     * Encodes the specified SC_OxStatusInfo message. Does not implicitly {@link SC_OxStatusInfo.verify|verify} messages.
     * @param message SC_OxStatusInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxStatusInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxStatusInfo message, length delimited. Does not implicitly {@link SC_OxStatusInfo.verify|verify} messages.
     * @param message SC_OxStatusInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxStatusInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxStatusInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxStatusInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxStatusInfo;

    /**
     * Decodes a SC_OxStatusInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxStatusInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxStatusInfo;

    /**
     * Verifies a SC_OxStatusInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxStatusInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxStatusInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_OxStatusInfo;

    /**
     * Creates a plain object from a SC_OxStatusInfo message. Also converts values to other types if specified.
     * @param message SC_OxStatusInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxStatusInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxStatusInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxStatusInfo {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26028
    }
}

/** Properties of a SC_CardResult. */
export interface ISC_CardResult {

    /** SC_CardResult cardstype */
    cardstype?: (ICardsTypeInfo[]|null);
}

/** Represents a SC_CardResult. */
export class SC_CardResult implements ISC_CardResult {

    /**
     * Constructs a new SC_CardResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CardResult);

    /** SC_CardResult cardstype. */
    public cardstype: ICardsTypeInfo[];

    /**
     * Creates a new SC_CardResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CardResult instance
     */
    public static create(properties?: ISC_CardResult): SC_CardResult;

    /**
     * Encodes the specified SC_CardResult message. Does not implicitly {@link SC_CardResult.verify|verify} messages.
     * @param message SC_CardResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CardResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CardResult message, length delimited. Does not implicitly {@link SC_CardResult.verify|verify} messages.
     * @param message SC_CardResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CardResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CardResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CardResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CardResult;

    /**
     * Decodes a SC_CardResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CardResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CardResult;

    /**
     * Verifies a SC_CardResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CardResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CardResult
     */
    public static fromObject(object: { [k: string]: any }): SC_CardResult;

    /**
     * Creates a plain object from a SC_CardResult message. Also converts values to other types if specified.
     * @param message SC_CardResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CardResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CardResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CardResult {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26029
    }
}

/** Properties of a SC_OxBalance. */
export interface ISC_OxBalance {

    /** SC_OxBalance balances */
    balances?: (IOxPlayerBalance[]|null);
}

/** Represents a SC_OxBalance. */
export class SC_OxBalance implements ISC_OxBalance {

    /**
     * Constructs a new SC_OxBalance.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_OxBalance);

    /** SC_OxBalance balances. */
    public balances: IOxPlayerBalance[];

    /**
     * Creates a new SC_OxBalance instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_OxBalance instance
     */
    public static create(properties?: ISC_OxBalance): SC_OxBalance;

    /**
     * Encodes the specified SC_OxBalance message. Does not implicitly {@link SC_OxBalance.verify|verify} messages.
     * @param message SC_OxBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_OxBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_OxBalance message, length delimited. Does not implicitly {@link SC_OxBalance.verify|verify} messages.
     * @param message SC_OxBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_OxBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_OxBalance message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_OxBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_OxBalance;

    /**
     * Decodes a SC_OxBalance message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_OxBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_OxBalance;

    /**
     * Verifies a SC_OxBalance message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_OxBalance message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_OxBalance
     */
    public static fromObject(object: { [k: string]: any }): SC_OxBalance;

    /**
     * Creates a plain object from a SC_OxBalance message. Also converts values to other types if specified.
     * @param message SC_OxBalance
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_OxBalance, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_OxBalance to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_OxBalance {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26030
    }
}

/** Properties of a CardCompareResult. */
export interface ICardCompareResult {

    /** CardCompareResult area */
    area?: (number|null);

    /** CardCompareResult result */
    result?: (boolean|null);
}

/** Represents a CardCompareResult. */
export class CardCompareResult implements ICardCompareResult {

    /**
     * Constructs a new CardCompareResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICardCompareResult);

    /** CardCompareResult area. */
    public area: number;

    /** CardCompareResult result. */
    public result: boolean;

    /**
     * Creates a new CardCompareResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CardCompareResult instance
     */
    public static create(properties?: ICardCompareResult): CardCompareResult;

    /**
     * Encodes the specified CardCompareResult message. Does not implicitly {@link CardCompareResult.verify|verify} messages.
     * @param message CardCompareResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICardCompareResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CardCompareResult message, length delimited. Does not implicitly {@link CardCompareResult.verify|verify} messages.
     * @param message CardCompareResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICardCompareResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CardCompareResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CardCompareResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CardCompareResult;

    /**
     * Decodes a CardCompareResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CardCompareResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CardCompareResult;

    /**
     * Verifies a CardCompareResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CardCompareResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CardCompareResult
     */
    public static fromObject(object: { [k: string]: any }): CardCompareResult;

    /**
     * Creates a plain object from a CardCompareResult message. Also converts values to other types if specified.
     * @param message CardCompareResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CardCompareResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CardCompareResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_CardCompareResult. */
export interface ISC_CardCompareResult {

    /** SC_CardCompareResult CompareResult */
    CompareResult?: (ICardCompareResult[]|null);
}

/** Represents a SC_CardCompareResult. */
export class SC_CardCompareResult implements ISC_CardCompareResult {

    /**
     * Constructs a new SC_CardCompareResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_CardCompareResult);

    /** SC_CardCompareResult CompareResult. */
    public CompareResult: ICardCompareResult[];

    /**
     * Creates a new SC_CardCompareResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_CardCompareResult instance
     */
    public static create(properties?: ISC_CardCompareResult): SC_CardCompareResult;

    /**
     * Encodes the specified SC_CardCompareResult message. Does not implicitly {@link SC_CardCompareResult.verify|verify} messages.
     * @param message SC_CardCompareResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_CardCompareResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_CardCompareResult message, length delimited. Does not implicitly {@link SC_CardCompareResult.verify|verify} messages.
     * @param message SC_CardCompareResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_CardCompareResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_CardCompareResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_CardCompareResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_CardCompareResult;

    /**
     * Decodes a SC_CardCompareResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_CardCompareResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_CardCompareResult;

    /**
     * Verifies a SC_CardCompareResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_CardCompareResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_CardCompareResult
     */
    public static fromObject(object: { [k: string]: any }): SC_CardCompareResult;

    /**
     * Creates a plain object from a SC_CardCompareResult message. Also converts values to other types if specified.
     * @param message SC_CardCompareResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_CardCompareResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_CardCompareResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_CardCompareResult {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26032
    }
}

/** Properties of a PlayerBetInfoPerSecond. */
export interface IPlayerBetInfoPerSecond {

    /** PlayerBetInfoPerSecond guid */
    guid?: (number|null);

    /** PlayerBetInfoPerSecond area */
    area?: (number|null);

    /** PlayerBetInfoPerSecond score */
    score?: (number|Long|null);

    /** PlayerBetInfoPerSecond money */
    money?: (number|Long|null);
}

/** Represents a PlayerBetInfoPerSecond. */
export class PlayerBetInfoPerSecond implements IPlayerBetInfoPerSecond {

    /**
     * Constructs a new PlayerBetInfoPerSecond.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlayerBetInfoPerSecond);

    /** PlayerBetInfoPerSecond guid. */
    public guid: number;

    /** PlayerBetInfoPerSecond area. */
    public area: number;

    /** PlayerBetInfoPerSecond score. */
    public score: (number|Long);

    /** PlayerBetInfoPerSecond money. */
    public money: (number|Long);

    /**
     * Creates a new PlayerBetInfoPerSecond instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlayerBetInfoPerSecond instance
     */
    public static create(properties?: IPlayerBetInfoPerSecond): PlayerBetInfoPerSecond;

    /**
     * Encodes the specified PlayerBetInfoPerSecond message. Does not implicitly {@link PlayerBetInfoPerSecond.verify|verify} messages.
     * @param message PlayerBetInfoPerSecond message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlayerBetInfoPerSecond, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlayerBetInfoPerSecond message, length delimited. Does not implicitly {@link PlayerBetInfoPerSecond.verify|verify} messages.
     * @param message PlayerBetInfoPerSecond message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlayerBetInfoPerSecond, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlayerBetInfoPerSecond message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlayerBetInfoPerSecond
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlayerBetInfoPerSecond;

    /**
     * Decodes a PlayerBetInfoPerSecond message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlayerBetInfoPerSecond
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlayerBetInfoPerSecond;

    /**
     * Verifies a PlayerBetInfoPerSecond message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlayerBetInfoPerSecond message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlayerBetInfoPerSecond
     */
    public static fromObject(object: { [k: string]: any }): PlayerBetInfoPerSecond;

    /**
     * Creates a plain object from a PlayerBetInfoPerSecond message. Also converts values to other types if specified.
     * @param message PlayerBetInfoPerSecond
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlayerBetInfoPerSecond, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlayerBetInfoPerSecond to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_AllPlayersBetInfo. */
export interface ISC_AllPlayersBetInfo {

    /** SC_AllPlayersBetInfo betInfo */
    betInfo?: (IPlayerBetInfoPerSecond[]|null);
}

/** Represents a SC_AllPlayersBetInfo. */
export class SC_AllPlayersBetInfo implements ISC_AllPlayersBetInfo {

    /**
     * Constructs a new SC_AllPlayersBetInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_AllPlayersBetInfo);

    /** SC_AllPlayersBetInfo betInfo. */
    public betInfo: IPlayerBetInfoPerSecond[];

    /**
     * Creates a new SC_AllPlayersBetInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_AllPlayersBetInfo instance
     */
    public static create(properties?: ISC_AllPlayersBetInfo): SC_AllPlayersBetInfo;

    /**
     * Encodes the specified SC_AllPlayersBetInfo message. Does not implicitly {@link SC_AllPlayersBetInfo.verify|verify} messages.
     * @param message SC_AllPlayersBetInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_AllPlayersBetInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_AllPlayersBetInfo message, length delimited. Does not implicitly {@link SC_AllPlayersBetInfo.verify|verify} messages.
     * @param message SC_AllPlayersBetInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_AllPlayersBetInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_AllPlayersBetInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_AllPlayersBetInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_AllPlayersBetInfo;

    /**
     * Decodes a SC_AllPlayersBetInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_AllPlayersBetInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_AllPlayersBetInfo;

    /**
     * Verifies a SC_AllPlayersBetInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_AllPlayersBetInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_AllPlayersBetInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_AllPlayersBetInfo;

    /**
     * Creates a plain object from a SC_AllPlayersBetInfo message. Also converts values to other types if specified.
     * @param message SC_AllPlayersBetInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_AllPlayersBetInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_AllPlayersBetInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_AllPlayersBetInfo {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 26033
    }
}

/** PDK_ACTION enum. */
export enum PDK_ACTION {
    ACTION_NONE = 0,
    ACTION_PASS = 1,
    ACTION_DISCARD = 2
}

/** PDK_CARD_TYPE enum. */
export enum PDK_CARD_TYPE {
    ERROR = 0,
    SINGLE = 1,
    LAIZI_SINGLE = 2,
    DOUBLE = 3,
    LAIZI_DOUBLE = 4,
    THREE = 5,
    LAIZI_THREE = 6,
    THREE_WITH_ONE = 7,
    THREE_WITH_TWO = 8,
    FOUR_WITH_SINGLE = 9,
    FOUR_WITH_DOUBLE = 10,
    FOUR_WITH_THREE = 11,
    FOUR = 12,
    LAIZI_FOUR = 13,
    SINGLE_LINE = 14,
    DOUBLE_LINE = 15,
    PLANE = 16,
    PLANE_WITH_ONE = 17,
    PLANE_WITH_TWO = 18,
    PLANE_WITH_MIX = 19,
    SOFT_TRIPLE_BOMB = 20,
    TRIPLE_BOMB = 21,
    LAIZI_TRIPLE_BOMB = 22,
    SOFT_BOMB = 23,
    BOMB = 24,
    LAIZI_BOMB = 25,
    MISSLE = 26
}

/** Properties of a PdkPlayerInfo. */
export interface IPdkPlayerInfo {

    /** PdkPlayerInfo handCards */
    handCards?: (number[]|null);

    /** PdkPlayerInfo chairId */
    chairId?: (number|null);

    /** PdkPlayerInfo totalScore */
    totalScore?: (number|null);

    /** PdkPlayerInfo roundScore */
    roundScore?: (number|null);
}

/** Represents a PdkPlayerInfo. */
export class PdkPlayerInfo implements IPdkPlayerInfo {

    /**
     * Constructs a new PdkPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPdkPlayerInfo);

    /** PdkPlayerInfo handCards. */
    public handCards: number[];

    /** PdkPlayerInfo chairId. */
    public chairId: number;

    /** PdkPlayerInfo totalScore. */
    public totalScore: number;

    /** PdkPlayerInfo roundScore. */
    public roundScore: number;

    /**
     * Creates a new PdkPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PdkPlayerInfo instance
     */
    public static create(properties?: IPdkPlayerInfo): PdkPlayerInfo;

    /**
     * Encodes the specified PdkPlayerInfo message. Does not implicitly {@link PdkPlayerInfo.verify|verify} messages.
     * @param message PdkPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPdkPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PdkPlayerInfo message, length delimited. Does not implicitly {@link PdkPlayerInfo.verify|verify} messages.
     * @param message PdkPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPdkPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PdkPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PdkPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PdkPlayerInfo;

    /**
     * Decodes a PdkPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PdkPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PdkPlayerInfo;

    /**
     * Verifies a PdkPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PdkPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PdkPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): PdkPlayerInfo;

    /**
     * Creates a plain object from a PdkPlayerInfo message. Also converts values to other types if specified.
     * @param message PdkPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PdkPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PdkPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PdkReconnectData. */
export interface IPdkReconnectData {

    /** PdkReconnectData actLeftTime */
    actLeftTime?: (number|null);

    /** PdkReconnectData lastDiscardChair */
    lastDiscardChair?: (number|null);

    /** PdkReconnectData lastDiscard */
    lastDiscard?: (number[]|null);

    /** PdkReconnectData totalScores */
    totalScores?: ({ [k: string]: string }|null);

    /** PdkReconnectData laiziReplace */
    laiziReplace?: (number[]|null);

    /** PdkReconnectData totalMoney */
    totalMoney?: ({ [k: string]: string }|null);
}

/** Represents a PdkReconnectData. */
export class PdkReconnectData implements IPdkReconnectData {

    /**
     * Constructs a new PdkReconnectData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPdkReconnectData);

    /** PdkReconnectData actLeftTime. */
    public actLeftTime: number;

    /** PdkReconnectData lastDiscardChair. */
    public lastDiscardChair: number;

    /** PdkReconnectData lastDiscard. */
    public lastDiscard: number[];

    /** PdkReconnectData totalScores. */
    public totalScores: { [k: string]: string };

    /** PdkReconnectData laiziReplace. */
    public laiziReplace: number[];

    /** PdkReconnectData totalMoney. */
    public totalMoney: { [k: string]: string };

    /**
     * Creates a new PdkReconnectData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PdkReconnectData instance
     */
    public static create(properties?: IPdkReconnectData): PdkReconnectData;

    /**
     * Encodes the specified PdkReconnectData message. Does not implicitly {@link PdkReconnectData.verify|verify} messages.
     * @param message PdkReconnectData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPdkReconnectData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PdkReconnectData message, length delimited. Does not implicitly {@link PdkReconnectData.verify|verify} messages.
     * @param message PdkReconnectData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPdkReconnectData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PdkReconnectData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PdkReconnectData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PdkReconnectData;

    /**
     * Decodes a PdkReconnectData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PdkReconnectData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PdkReconnectData;

    /**
     * Verifies a PdkReconnectData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PdkReconnectData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PdkReconnectData
     */
    public static fromObject(object: { [k: string]: any }): PdkReconnectData;

    /**
     * Creates a plain object from a PdkReconnectData message. Also converts values to other types if specified.
     * @param message PdkReconnectData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PdkReconnectData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PdkReconnectData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_PdkDeskEnter. */
export interface ISC_PdkDeskEnter {

    /** SC_PdkDeskEnter pbPlayers */
    pbPlayers?: (IPdkPlayerInfo[]|null);

    /** SC_PdkDeskEnter status */
    status?: (number|null);

    /** SC_PdkDeskEnter zhuang */
    zhuang?: (number|null);

    /** SC_PdkDeskEnter selfChairId */
    selfChairId?: (number|null);

    /** SC_PdkDeskEnter actTimeLimit */
    actTimeLimit?: (number|null);

    /** SC_PdkDeskEnter isReconnect */
    isReconnect?: (boolean|null);

    /** SC_PdkDeskEnter pbRecData */
    pbRecData?: (IPdkReconnectData|null);

    /** SC_PdkDeskEnter round */
    round?: (number|null);

    /** SC_PdkDeskEnter laizi */
    laizi?: (number|null);
}

/** Represents a SC_PdkDeskEnter. */
export class SC_PdkDeskEnter implements ISC_PdkDeskEnter {

    /**
     * Constructs a new SC_PdkDeskEnter.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkDeskEnter);

    /** SC_PdkDeskEnter pbPlayers. */
    public pbPlayers: IPdkPlayerInfo[];

    /** SC_PdkDeskEnter status. */
    public status: number;

    /** SC_PdkDeskEnter zhuang. */
    public zhuang: number;

    /** SC_PdkDeskEnter selfChairId. */
    public selfChairId: number;

    /** SC_PdkDeskEnter actTimeLimit. */
    public actTimeLimit: number;

    /** SC_PdkDeskEnter isReconnect. */
    public isReconnect: boolean;

    /** SC_PdkDeskEnter pbRecData. */
    public pbRecData?: (IPdkReconnectData|null);

    /** SC_PdkDeskEnter round. */
    public round: number;

    /** SC_PdkDeskEnter laizi. */
    public laizi: number;

    /**
     * Creates a new SC_PdkDeskEnter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkDeskEnter instance
     */
    public static create(properties?: ISC_PdkDeskEnter): SC_PdkDeskEnter;

    /**
     * Encodes the specified SC_PdkDeskEnter message. Does not implicitly {@link SC_PdkDeskEnter.verify|verify} messages.
     * @param message SC_PdkDeskEnter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkDeskEnter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkDeskEnter message, length delimited. Does not implicitly {@link SC_PdkDeskEnter.verify|verify} messages.
     * @param message SC_PdkDeskEnter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkDeskEnter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkDeskEnter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkDeskEnter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkDeskEnter;

    /**
     * Decodes a SC_PdkDeskEnter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkDeskEnter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkDeskEnter;

    /**
     * Verifies a SC_PdkDeskEnter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkDeskEnter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkDeskEnter
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkDeskEnter;

    /**
     * Creates a plain object from a SC_PdkDeskEnter message. Also converts values to other types if specified.
     * @param message SC_PdkDeskEnter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkDeskEnter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkDeskEnter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkDeskEnter {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24100
    }
}

/** Properties of a SC_PdkDiscardRound. */
export interface ISC_PdkDiscardRound {

    /** SC_PdkDiscardRound chairId */
    chairId?: (number|null);
}

/** Represents a SC_PdkDiscardRound. */
export class SC_PdkDiscardRound implements ISC_PdkDiscardRound {

    /**
     * Constructs a new SC_PdkDiscardRound.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkDiscardRound);

    /** SC_PdkDiscardRound chairId. */
    public chairId: number;

    /**
     * Creates a new SC_PdkDiscardRound instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkDiscardRound instance
     */
    public static create(properties?: ISC_PdkDiscardRound): SC_PdkDiscardRound;

    /**
     * Encodes the specified SC_PdkDiscardRound message. Does not implicitly {@link SC_PdkDiscardRound.verify|verify} messages.
     * @param message SC_PdkDiscardRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkDiscardRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkDiscardRound message, length delimited. Does not implicitly {@link SC_PdkDiscardRound.verify|verify} messages.
     * @param message SC_PdkDiscardRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkDiscardRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkDiscardRound message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkDiscardRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkDiscardRound;

    /**
     * Decodes a SC_PdkDiscardRound message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkDiscardRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkDiscardRound;

    /**
     * Verifies a SC_PdkDiscardRound message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkDiscardRound message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkDiscardRound
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkDiscardRound;

    /**
     * Creates a plain object from a SC_PdkDiscardRound message. Also converts values to other types if specified.
     * @param message SC_PdkDiscardRound
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkDiscardRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkDiscardRound to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkDiscardRound {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24101
    }
}

/** Properties of a SC_PdkActTrustee. */
export interface ISC_PdkActTrustee {

    /** SC_PdkActTrustee chairId */
    chairId?: (number|null);

    /** SC_PdkActTrustee isTrustee */
    isTrustee?: (boolean|null);
}

/** Represents a SC_PdkActTrustee. */
export class SC_PdkActTrustee implements ISC_PdkActTrustee {

    /**
     * Constructs a new SC_PdkActTrustee.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkActTrustee);

    /** SC_PdkActTrustee chairId. */
    public chairId: number;

    /** SC_PdkActTrustee isTrustee. */
    public isTrustee: boolean;

    /**
     * Creates a new SC_PdkActTrustee instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkActTrustee instance
     */
    public static create(properties?: ISC_PdkActTrustee): SC_PdkActTrustee;

    /**
     * Encodes the specified SC_PdkActTrustee message. Does not implicitly {@link SC_PdkActTrustee.verify|verify} messages.
     * @param message SC_PdkActTrustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkActTrustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkActTrustee message, length delimited. Does not implicitly {@link SC_PdkActTrustee.verify|verify} messages.
     * @param message SC_PdkActTrustee message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkActTrustee, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkActTrustee message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkActTrustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkActTrustee;

    /**
     * Decodes a SC_PdkActTrustee message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkActTrustee
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkActTrustee;

    /**
     * Verifies a SC_PdkActTrustee message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkActTrustee message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkActTrustee
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkActTrustee;

    /**
     * Creates a plain object from a SC_PdkActTrustee message. Also converts values to other types if specified.
     * @param message SC_PdkActTrustee
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkActTrustee, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkActTrustee to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkActTrustee {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24103
    }
}

/** Properties of a CS_PdkDoAction. */
export interface ICS_PdkDoAction {

    /** CS_PdkDoAction action */
    action?: (number|null);

    /** CS_PdkDoAction cards */
    cards?: (number[]|null);

    /** CS_PdkDoAction laiziReplace */
    laiziReplace?: (number[]|null);
}

/** Represents a CS_PdkDoAction. */
export class CS_PdkDoAction implements ICS_PdkDoAction {

    /**
     * Constructs a new CS_PdkDoAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_PdkDoAction);

    /** CS_PdkDoAction action. */
    public action: number;

    /** CS_PdkDoAction cards. */
    public cards: number[];

    /** CS_PdkDoAction laiziReplace. */
    public laiziReplace: number[];

    /**
     * Creates a new CS_PdkDoAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_PdkDoAction instance
     */
    public static create(properties?: ICS_PdkDoAction): CS_PdkDoAction;

    /**
     * Encodes the specified CS_PdkDoAction message. Does not implicitly {@link CS_PdkDoAction.verify|verify} messages.
     * @param message CS_PdkDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_PdkDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_PdkDoAction message, length delimited. Does not implicitly {@link CS_PdkDoAction.verify|verify} messages.
     * @param message CS_PdkDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_PdkDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_PdkDoAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_PdkDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_PdkDoAction;

    /**
     * Decodes a CS_PdkDoAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_PdkDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_PdkDoAction;

    /**
     * Verifies a CS_PdkDoAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_PdkDoAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_PdkDoAction
     */
    public static fromObject(object: { [k: string]: any }): CS_PdkDoAction;

    /**
     * Creates a plain object from a CS_PdkDoAction message. Also converts values to other types if specified.
     * @param message CS_PdkDoAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_PdkDoAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_PdkDoAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_PdkDoAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24104
    }
}

/** Properties of a SC_PdkDoAction. */
export interface ISC_PdkDoAction {

    /** SC_PdkDoAction result */
    result?: (number|null);

    /** SC_PdkDoAction chairId */
    chairId?: (number|null);

    /** SC_PdkDoAction action */
    action?: (number|null);

    /** SC_PdkDoAction cards */
    cards?: (number[]|null);

    /** SC_PdkDoAction laiziReplace */
    laiziReplace?: (number[]|null);
}

/** Represents a SC_PdkDoAction. */
export class SC_PdkDoAction implements ISC_PdkDoAction {

    /**
     * Constructs a new SC_PdkDoAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkDoAction);

    /** SC_PdkDoAction result. */
    public result: number;

    /** SC_PdkDoAction chairId. */
    public chairId: number;

    /** SC_PdkDoAction action. */
    public action: number;

    /** SC_PdkDoAction cards. */
    public cards: number[];

    /** SC_PdkDoAction laiziReplace. */
    public laiziReplace: number[];

    /**
     * Creates a new SC_PdkDoAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkDoAction instance
     */
    public static create(properties?: ISC_PdkDoAction): SC_PdkDoAction;

    /**
     * Encodes the specified SC_PdkDoAction message. Does not implicitly {@link SC_PdkDoAction.verify|verify} messages.
     * @param message SC_PdkDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkDoAction message, length delimited. Does not implicitly {@link SC_PdkDoAction.verify|verify} messages.
     * @param message SC_PdkDoAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkDoAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkDoAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkDoAction;

    /**
     * Decodes a SC_PdkDoAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkDoAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkDoAction;

    /**
     * Verifies a SC_PdkDoAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkDoAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkDoAction
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkDoAction;

    /**
     * Creates a plain object from a SC_PdkDoAction message. Also converts values to other types if specified.
     * @param message SC_PdkDoAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkDoAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkDoAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkDoAction {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24105
    }
}

/** Properties of a PdkBlanacePlayer. */
export interface IPdkBlanacePlayer {

    /** PdkBlanacePlayer chairId */
    chairId?: (number|null);

    /** PdkBlanacePlayer handCards */
    handCards?: (number[]|null);

    /** PdkBlanacePlayer bombScore */
    bombScore?: (number|null);

    /** PdkBlanacePlayer totalScore */
    totalScore?: (number|null);

    /** PdkBlanacePlayer roundScore */
    roundScore?: (number|null);

    /** PdkBlanacePlayer roundMoney */
    roundMoney?: (number|null);

    /** PdkBlanacePlayer totalMoney */
    totalMoney?: (number|null);
}

/** Represents a PdkBlanacePlayer. */
export class PdkBlanacePlayer implements IPdkBlanacePlayer {

    /**
     * Constructs a new PdkBlanacePlayer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPdkBlanacePlayer);

    /** PdkBlanacePlayer chairId. */
    public chairId: number;

    /** PdkBlanacePlayer handCards. */
    public handCards: number[];

    /** PdkBlanacePlayer bombScore. */
    public bombScore: number;

    /** PdkBlanacePlayer totalScore. */
    public totalScore: number;

    /** PdkBlanacePlayer roundScore. */
    public roundScore: number;

    /** PdkBlanacePlayer roundMoney. */
    public roundMoney: number;

    /** PdkBlanacePlayer totalMoney. */
    public totalMoney: number;

    /**
     * Creates a new PdkBlanacePlayer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PdkBlanacePlayer instance
     */
    public static create(properties?: IPdkBlanacePlayer): PdkBlanacePlayer;

    /**
     * Encodes the specified PdkBlanacePlayer message. Does not implicitly {@link PdkBlanacePlayer.verify|verify} messages.
     * @param message PdkBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPdkBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PdkBlanacePlayer message, length delimited. Does not implicitly {@link PdkBlanacePlayer.verify|verify} messages.
     * @param message PdkBlanacePlayer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPdkBlanacePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PdkBlanacePlayer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PdkBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PdkBlanacePlayer;

    /**
     * Decodes a PdkBlanacePlayer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PdkBlanacePlayer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PdkBlanacePlayer;

    /**
     * Verifies a PdkBlanacePlayer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PdkBlanacePlayer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PdkBlanacePlayer
     */
    public static fromObject(object: { [k: string]: any }): PdkBlanacePlayer;

    /**
     * Creates a plain object from a PdkBlanacePlayer message. Also converts values to other types if specified.
     * @param message PdkBlanacePlayer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PdkBlanacePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PdkBlanacePlayer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_PdkGameOver. */
export interface ISC_PdkGameOver {

    /** SC_PdkGameOver playerBalance */
    playerBalance?: (IPdkBlanacePlayer[]|null);

    /** SC_PdkGameOver leftCards */
    leftCards?: (number[]|null);
}

/** Represents a SC_PdkGameOver. */
export class SC_PdkGameOver implements ISC_PdkGameOver {

    /**
     * Constructs a new SC_PdkGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkGameOver);

    /** SC_PdkGameOver playerBalance. */
    public playerBalance: IPdkBlanacePlayer[];

    /** SC_PdkGameOver leftCards. */
    public leftCards: number[];

    /**
     * Creates a new SC_PdkGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkGameOver instance
     */
    public static create(properties?: ISC_PdkGameOver): SC_PdkGameOver;

    /**
     * Encodes the specified SC_PdkGameOver message. Does not implicitly {@link SC_PdkGameOver.verify|verify} messages.
     * @param message SC_PdkGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkGameOver message, length delimited. Does not implicitly {@link SC_PdkGameOver.verify|verify} messages.
     * @param message SC_PdkGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkGameOver;

    /**
     * Decodes a SC_PdkGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkGameOver;

    /**
     * Verifies a SC_PdkGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkGameOver;

    /**
     * Creates a plain object from a SC_PdkGameOver message. Also converts values to other types if specified.
     * @param message SC_PdkGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkGameOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24106
    }
}

/** Properties of a PdkStatisticsItem. */
export interface IPdkStatisticsItem {

    /** PdkStatisticsItem type */
    type?: (number|null);

    /** PdkStatisticsItem count */
    count?: (number|null);
}

/** Represents a PdkStatisticsItem. */
export class PdkStatisticsItem implements IPdkStatisticsItem {

    /**
     * Constructs a new PdkStatisticsItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPdkStatisticsItem);

    /** PdkStatisticsItem type. */
    public type: number;

    /** PdkStatisticsItem count. */
    public count: number;

    /**
     * Creates a new PdkStatisticsItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PdkStatisticsItem instance
     */
    public static create(properties?: IPdkStatisticsItem): PdkStatisticsItem;

    /**
     * Encodes the specified PdkStatisticsItem message. Does not implicitly {@link PdkStatisticsItem.verify|verify} messages.
     * @param message PdkStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPdkStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PdkStatisticsItem message, length delimited. Does not implicitly {@link PdkStatisticsItem.verify|verify} messages.
     * @param message PdkStatisticsItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPdkStatisticsItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PdkStatisticsItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PdkStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PdkStatisticsItem;

    /**
     * Decodes a PdkStatisticsItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PdkStatisticsItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PdkStatisticsItem;

    /**
     * Verifies a PdkStatisticsItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PdkStatisticsItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PdkStatisticsItem
     */
    public static fromObject(object: { [k: string]: any }): PdkStatisticsItem;

    /**
     * Creates a plain object from a PdkStatisticsItem message. Also converts values to other types if specified.
     * @param message PdkStatisticsItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PdkStatisticsItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PdkStatisticsItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PdkFinalOverPlayerInfo. */
export interface IPdkFinalOverPlayerInfo {

    /** PdkFinalOverPlayerInfo chairId */
    chairId?: (number|null);

    /** PdkFinalOverPlayerInfo guid */
    guid?: (number|null);

    /** PdkFinalOverPlayerInfo score */
    score?: (number|null);

    /** PdkFinalOverPlayerInfo money */
    money?: (number|null);

    /** PdkFinalOverPlayerInfo statistics */
    statistics?: (IPdkStatisticsItem[]|null);
}

/** Represents a PdkFinalOverPlayerInfo. */
export class PdkFinalOverPlayerInfo implements IPdkFinalOverPlayerInfo {

    /**
     * Constructs a new PdkFinalOverPlayerInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPdkFinalOverPlayerInfo);

    /** PdkFinalOverPlayerInfo chairId. */
    public chairId: number;

    /** PdkFinalOverPlayerInfo guid. */
    public guid: number;

    /** PdkFinalOverPlayerInfo score. */
    public score: number;

    /** PdkFinalOverPlayerInfo money. */
    public money: number;

    /** PdkFinalOverPlayerInfo statistics. */
    public statistics: IPdkStatisticsItem[];

    /**
     * Creates a new PdkFinalOverPlayerInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PdkFinalOverPlayerInfo instance
     */
    public static create(properties?: IPdkFinalOverPlayerInfo): PdkFinalOverPlayerInfo;

    /**
     * Encodes the specified PdkFinalOverPlayerInfo message. Does not implicitly {@link PdkFinalOverPlayerInfo.verify|verify} messages.
     * @param message PdkFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPdkFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PdkFinalOverPlayerInfo message, length delimited. Does not implicitly {@link PdkFinalOverPlayerInfo.verify|verify} messages.
     * @param message PdkFinalOverPlayerInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPdkFinalOverPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PdkFinalOverPlayerInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PdkFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PdkFinalOverPlayerInfo;

    /**
     * Decodes a PdkFinalOverPlayerInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PdkFinalOverPlayerInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PdkFinalOverPlayerInfo;

    /**
     * Verifies a PdkFinalOverPlayerInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PdkFinalOverPlayerInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PdkFinalOverPlayerInfo
     */
    public static fromObject(object: { [k: string]: any }): PdkFinalOverPlayerInfo;

    /**
     * Creates a plain object from a PdkFinalOverPlayerInfo message. Also converts values to other types if specified.
     * @param message PdkFinalOverPlayerInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PdkFinalOverPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PdkFinalOverPlayerInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_PdkFinalGameOver. */
export interface ISC_PdkFinalGameOver {

    /** SC_PdkFinalGameOver players */
    players?: (IPdkFinalOverPlayerInfo[]|null);
}

/** Represents a SC_PdkFinalGameOver. */
export class SC_PdkFinalGameOver implements ISC_PdkFinalGameOver {

    /**
     * Constructs a new SC_PdkFinalGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_PdkFinalGameOver);

    /** SC_PdkFinalGameOver players. */
    public players: IPdkFinalOverPlayerInfo[];

    /**
     * Creates a new SC_PdkFinalGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_PdkFinalGameOver instance
     */
    public static create(properties?: ISC_PdkFinalGameOver): SC_PdkFinalGameOver;

    /**
     * Encodes the specified SC_PdkFinalGameOver message. Does not implicitly {@link SC_PdkFinalGameOver.verify|verify} messages.
     * @param message SC_PdkFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_PdkFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_PdkFinalGameOver message, length delimited. Does not implicitly {@link SC_PdkFinalGameOver.verify|verify} messages.
     * @param message SC_PdkFinalGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_PdkFinalGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_PdkFinalGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_PdkFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_PdkFinalGameOver;

    /**
     * Decodes a SC_PdkFinalGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_PdkFinalGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_PdkFinalGameOver;

    /**
     * Verifies a SC_PdkFinalGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_PdkFinalGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_PdkFinalGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_PdkFinalGameOver;

    /**
     * Creates a plain object from a SC_PdkFinalGameOver message. Also converts values to other types if specified.
     * @param message SC_PdkFinalGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_PdkFinalGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_PdkFinalGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_PdkFinalGameOver {

    /** MsgID enum. */
    enum MsgID {
        Nil = 0,
        ID = 24107
    }
}

/** ZHAJINHUA_CARD_TYPE enum. */
export enum ZHAJINHUA_CARD_TYPE {
    ZHAJINHUA_CARD_TYPE_ERROR = 0,
    ZHAJINHUA_CARD_TYPE_235 = 1,
    ZHAJINHUA_CARD_TYPE_SINGLE = 2,
    ZHAJINHUA_CARD_TYPE_DOUBLE = 3,
    ZHAJINHUA_CARD_TYPE_SHUN_ZI = 4,
    ZHAJINHUA_CARD_TYPE_JIN_HUA = 5,
    ZHAJINHUA_CARD_TYPE_SHUN_JIN = 6,
    ZHAJINHUA_CARD_TYPE_BAO_ZI = 7
}

/** ZHAJINHUA_ACTION enum. */
export enum ZHAJINHUA_ACTION {
    ZHAJINHUA_ACTION_NONE = 0,
    ZHAJINHUA_ACTION_ADD_SCORE = 1,
    ZHAJINHUA_ACTION_DROP = 2,
    ZHAJINHUA_ACTION_LOOK_CARDS = 3,
    ZHAJINHUA_ACTION_ALL_IN = 4,
    ZHAJINHUA_ACTION_COMPARE = 5,
    ZHAJINHUA_ACTION_FOLLOW = 6
}

/** ZHAJINHUA_PLAYER_STATUS enum. */
export enum ZHAJINHUA_PLAYER_STATUS {
    PS_WATCHER = 0,
    PS_FREE = 1,
    PS_READY = 2,
    PS_WAIT = 3,
    PS_CONTROL = 4,
    PS_LOOK = 5,
    PS_COMPARE = 6,
    PS_DROP = 7,
    PS_LOSE = 8,
    PS_EXIT = 9,
    PS_BANKRUPTCY = 10
}

/** ZHAJINHUA_TABLE_STATUS enum. */
export enum ZHAJINHUA_TABLE_STATUS {
    TS_NIL = 0,
    TS_FREE = 1,
    TS_PLAY = 2,
    TS_END = 3
}

/** Properties of a SC_ZhaJinHuaStart. */
export interface ISC_ZhaJinHuaStart {

    /** SC_ZhaJinHuaStart banker */
    banker?: (number|null);

    /** SC_ZhaJinHuaStart allChairs */
    allChairs?: (number[]|null);

    /** SC_ZhaJinHuaStart allGuids */
    allGuids?: (number[]|null);

    /** SC_ZhaJinHuaStart curRound */
    curRound?: (number|null);

    /** SC_ZhaJinHuaStart totalRound */
    totalRound?: (number|null);
}

/** Represents a SC_ZhaJinHuaStart. */
export class SC_ZhaJinHuaStart implements ISC_ZhaJinHuaStart {

    /**
     * Constructs a new SC_ZhaJinHuaStart.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaStart);

    /** SC_ZhaJinHuaStart banker. */
    public banker: number;

    /** SC_ZhaJinHuaStart allChairs. */
    public allChairs: number[];

    /** SC_ZhaJinHuaStart allGuids. */
    public allGuids: number[];

    /** SC_ZhaJinHuaStart curRound. */
    public curRound: number;

    /** SC_ZhaJinHuaStart totalRound. */
    public totalRound: number;

    /**
     * Creates a new SC_ZhaJinHuaStart instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaStart instance
     */
    public static create(properties?: ISC_ZhaJinHuaStart): SC_ZhaJinHuaStart;

    /**
     * Encodes the specified SC_ZhaJinHuaStart message. Does not implicitly {@link SC_ZhaJinHuaStart.verify|verify} messages.
     * @param message SC_ZhaJinHuaStart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaStart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaStart message, length delimited. Does not implicitly {@link SC_ZhaJinHuaStart.verify|verify} messages.
     * @param message SC_ZhaJinHuaStart message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaStart, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaStart message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaStart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaStart;

    /**
     * Decodes a SC_ZhaJinHuaStart message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaStart
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaStart;

    /**
     * Verifies a SC_ZhaJinHuaStart message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaStart message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaStart
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaStart;

    /**
     * Creates a plain object from a SC_ZhaJinHuaStart message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaStart
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaStart to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaStart {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25001
    }
}

/** Properties of a SC_ZhaJinHuaTurn. */
export interface ISC_ZhaJinHuaTurn {

    /** SC_ZhaJinHuaTurn chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaTurn actions */
    actions?: (number[]|null);
}

/** Represents a SC_ZhaJinHuaTurn. */
export class SC_ZhaJinHuaTurn implements ISC_ZhaJinHuaTurn {

    /**
     * Constructs a new SC_ZhaJinHuaTurn.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaTurn);

    /** SC_ZhaJinHuaTurn chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaTurn actions. */
    public actions: number[];

    /**
     * Creates a new SC_ZhaJinHuaTurn instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaTurn instance
     */
    public static create(properties?: ISC_ZhaJinHuaTurn): SC_ZhaJinHuaTurn;

    /**
     * Encodes the specified SC_ZhaJinHuaTurn message. Does not implicitly {@link SC_ZhaJinHuaTurn.verify|verify} messages.
     * @param message SC_ZhaJinHuaTurn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaTurn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaTurn message, length delimited. Does not implicitly {@link SC_ZhaJinHuaTurn.verify|verify} messages.
     * @param message SC_ZhaJinHuaTurn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaTurn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaTurn message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaTurn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaTurn;

    /**
     * Decodes a SC_ZhaJinHuaTurn message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaTurn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaTurn;

    /**
     * Verifies a SC_ZhaJinHuaTurn message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaTurn message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaTurn
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaTurn;

    /**
     * Creates a plain object from a SC_ZhaJinHuaTurn message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaTurn
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaTurn, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaTurn to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaTurn {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25002
    }
}

/** Properties of a CS_ZhaJinHuaAddScore. */
export interface ICS_ZhaJinHuaAddScore {

    /** CS_ZhaJinHuaAddScore score */
    score?: (number|Long|null);
}

/** Represents a CS_ZhaJinHuaAddScore. */
export class CS_ZhaJinHuaAddScore implements ICS_ZhaJinHuaAddScore {

    /**
     * Constructs a new CS_ZhaJinHuaAddScore.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaAddScore);

    /** CS_ZhaJinHuaAddScore score. */
    public score: (number|Long);

    /**
     * Creates a new CS_ZhaJinHuaAddScore instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaAddScore instance
     */
    public static create(properties?: ICS_ZhaJinHuaAddScore): CS_ZhaJinHuaAddScore;

    /**
     * Encodes the specified CS_ZhaJinHuaAddScore message. Does not implicitly {@link CS_ZhaJinHuaAddScore.verify|verify} messages.
     * @param message CS_ZhaJinHuaAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaAddScore message, length delimited. Does not implicitly {@link CS_ZhaJinHuaAddScore.verify|verify} messages.
     * @param message CS_ZhaJinHuaAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaAddScore message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaAddScore;

    /**
     * Decodes a CS_ZhaJinHuaAddScore message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaAddScore;

    /**
     * Verifies a CS_ZhaJinHuaAddScore message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaAddScore message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaAddScore
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaAddScore;

    /**
     * Creates a plain object from a CS_ZhaJinHuaAddScore message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaAddScore
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaAddScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaAddScore to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaAddScore {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25004
    }
}

/** Properties of a SC_ZhaJinHuaAddScore. */
export interface ISC_ZhaJinHuaAddScore {

    /** SC_ZhaJinHuaAddScore result */
    result?: (number|null);

    /** SC_ZhaJinHuaAddScore chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaAddScore score */
    score?: (number|Long|null);

    /** SC_ZhaJinHuaAddScore money */
    money?: (number|Long|null);
}

/** Represents a SC_ZhaJinHuaAddScore. */
export class SC_ZhaJinHuaAddScore implements ISC_ZhaJinHuaAddScore {

    /**
     * Constructs a new SC_ZhaJinHuaAddScore.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaAddScore);

    /** SC_ZhaJinHuaAddScore result. */
    public result: number;

    /** SC_ZhaJinHuaAddScore chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaAddScore score. */
    public score: (number|Long);

    /** SC_ZhaJinHuaAddScore money. */
    public money: (number|Long);

    /**
     * Creates a new SC_ZhaJinHuaAddScore instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaAddScore instance
     */
    public static create(properties?: ISC_ZhaJinHuaAddScore): SC_ZhaJinHuaAddScore;

    /**
     * Encodes the specified SC_ZhaJinHuaAddScore message. Does not implicitly {@link SC_ZhaJinHuaAddScore.verify|verify} messages.
     * @param message SC_ZhaJinHuaAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaAddScore message, length delimited. Does not implicitly {@link SC_ZhaJinHuaAddScore.verify|verify} messages.
     * @param message SC_ZhaJinHuaAddScore message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaAddScore, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaAddScore message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaAddScore;

    /**
     * Decodes a SC_ZhaJinHuaAddScore message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaAddScore
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaAddScore;

    /**
     * Verifies a SC_ZhaJinHuaAddScore message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaAddScore message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaAddScore
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaAddScore;

    /**
     * Creates a plain object from a SC_ZhaJinHuaAddScore message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaAddScore
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaAddScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaAddScore to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaAddScore {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25005
    }
}

/** Properties of a CS_ZhaJinHuaGiveUp. */
export interface ICS_ZhaJinHuaGiveUp {
}

/** Represents a CS_ZhaJinHuaGiveUp. */
export class CS_ZhaJinHuaGiveUp implements ICS_ZhaJinHuaGiveUp {

    /**
     * Constructs a new CS_ZhaJinHuaGiveUp.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaGiveUp);

    /**
     * Creates a new CS_ZhaJinHuaGiveUp instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaGiveUp instance
     */
    public static create(properties?: ICS_ZhaJinHuaGiveUp): CS_ZhaJinHuaGiveUp;

    /**
     * Encodes the specified CS_ZhaJinHuaGiveUp message. Does not implicitly {@link CS_ZhaJinHuaGiveUp.verify|verify} messages.
     * @param message CS_ZhaJinHuaGiveUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaGiveUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaGiveUp message, length delimited. Does not implicitly {@link CS_ZhaJinHuaGiveUp.verify|verify} messages.
     * @param message CS_ZhaJinHuaGiveUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaGiveUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaGiveUp message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaGiveUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaGiveUp;

    /**
     * Decodes a CS_ZhaJinHuaGiveUp message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaGiveUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaGiveUp;

    /**
     * Verifies a CS_ZhaJinHuaGiveUp message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaGiveUp message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaGiveUp
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaGiveUp;

    /**
     * Creates a plain object from a CS_ZhaJinHuaGiveUp message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaGiveUp
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaGiveUp, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaGiveUp to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaGiveUp {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25006
    }
}

/** Properties of a SC_ZhaJinHuaGiveUp. */
export interface ISC_ZhaJinHuaGiveUp {

    /** SC_ZhaJinHuaGiveUp result */
    result?: (number|null);

    /** SC_ZhaJinHuaGiveUp chairId */
    chairId?: (number|null);
}

/** Represents a SC_ZhaJinHuaGiveUp. */
export class SC_ZhaJinHuaGiveUp implements ISC_ZhaJinHuaGiveUp {

    /**
     * Constructs a new SC_ZhaJinHuaGiveUp.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaGiveUp);

    /** SC_ZhaJinHuaGiveUp result. */
    public result: number;

    /** SC_ZhaJinHuaGiveUp chairId. */
    public chairId: number;

    /**
     * Creates a new SC_ZhaJinHuaGiveUp instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaGiveUp instance
     */
    public static create(properties?: ISC_ZhaJinHuaGiveUp): SC_ZhaJinHuaGiveUp;

    /**
     * Encodes the specified SC_ZhaJinHuaGiveUp message. Does not implicitly {@link SC_ZhaJinHuaGiveUp.verify|verify} messages.
     * @param message SC_ZhaJinHuaGiveUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaGiveUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaGiveUp message, length delimited. Does not implicitly {@link SC_ZhaJinHuaGiveUp.verify|verify} messages.
     * @param message SC_ZhaJinHuaGiveUp message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaGiveUp, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaGiveUp message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaGiveUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaGiveUp;

    /**
     * Decodes a SC_ZhaJinHuaGiveUp message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaGiveUp
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaGiveUp;

    /**
     * Verifies a SC_ZhaJinHuaGiveUp message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaGiveUp message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaGiveUp
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaGiveUp;

    /**
     * Creates a plain object from a SC_ZhaJinHuaGiveUp message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaGiveUp
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaGiveUp, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaGiveUp to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaGiveUp {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25007
    }
}

/** Properties of a CS_ZhaJinHuaLookCard. */
export interface ICS_ZhaJinHuaLookCard {
}

/** Represents a CS_ZhaJinHuaLookCard. */
export class CS_ZhaJinHuaLookCard implements ICS_ZhaJinHuaLookCard {

    /**
     * Constructs a new CS_ZhaJinHuaLookCard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaLookCard);

    /**
     * Creates a new CS_ZhaJinHuaLookCard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaLookCard instance
     */
    public static create(properties?: ICS_ZhaJinHuaLookCard): CS_ZhaJinHuaLookCard;

    /**
     * Encodes the specified CS_ZhaJinHuaLookCard message. Does not implicitly {@link CS_ZhaJinHuaLookCard.verify|verify} messages.
     * @param message CS_ZhaJinHuaLookCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaLookCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaLookCard message, length delimited. Does not implicitly {@link CS_ZhaJinHuaLookCard.verify|verify} messages.
     * @param message CS_ZhaJinHuaLookCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaLookCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaLookCard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaLookCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaLookCard;

    /**
     * Decodes a CS_ZhaJinHuaLookCard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaLookCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaLookCard;

    /**
     * Verifies a CS_ZhaJinHuaLookCard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaLookCard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaLookCard
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaLookCard;

    /**
     * Creates a plain object from a CS_ZhaJinHuaLookCard message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaLookCard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaLookCard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaLookCard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaLookCard {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25008
    }
}

/** Properties of a SC_ZhaJinHuaLookCard. */
export interface ISC_ZhaJinHuaLookCard {

    /** SC_ZhaJinHuaLookCard result */
    result?: (number|null);

    /** SC_ZhaJinHuaLookCard chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaLookCard cards */
    cards?: (number[]|null);
}

/** Represents a SC_ZhaJinHuaLookCard. */
export class SC_ZhaJinHuaLookCard implements ISC_ZhaJinHuaLookCard {

    /**
     * Constructs a new SC_ZhaJinHuaLookCard.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaLookCard);

    /** SC_ZhaJinHuaLookCard result. */
    public result: number;

    /** SC_ZhaJinHuaLookCard chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaLookCard cards. */
    public cards: number[];

    /**
     * Creates a new SC_ZhaJinHuaLookCard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaLookCard instance
     */
    public static create(properties?: ISC_ZhaJinHuaLookCard): SC_ZhaJinHuaLookCard;

    /**
     * Encodes the specified SC_ZhaJinHuaLookCard message. Does not implicitly {@link SC_ZhaJinHuaLookCard.verify|verify} messages.
     * @param message SC_ZhaJinHuaLookCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaLookCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaLookCard message, length delimited. Does not implicitly {@link SC_ZhaJinHuaLookCard.verify|verify} messages.
     * @param message SC_ZhaJinHuaLookCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaLookCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaLookCard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaLookCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaLookCard;

    /**
     * Decodes a SC_ZhaJinHuaLookCard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaLookCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaLookCard;

    /**
     * Verifies a SC_ZhaJinHuaLookCard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaLookCard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaLookCard
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaLookCard;

    /**
     * Creates a plain object from a SC_ZhaJinHuaLookCard message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaLookCard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaLookCard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaLookCard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaLookCard {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25009
    }
}

/** Properties of a CS_ZhaJinHuaCompareCards. */
export interface ICS_ZhaJinHuaCompareCards {

    /** CS_ZhaJinHuaCompareCards compareWith */
    compareWith?: (number|null);
}

/** Represents a CS_ZhaJinHuaCompareCards. */
export class CS_ZhaJinHuaCompareCards implements ICS_ZhaJinHuaCompareCards {

    /**
     * Constructs a new CS_ZhaJinHuaCompareCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaCompareCards);

    /** CS_ZhaJinHuaCompareCards compareWith. */
    public compareWith: number;

    /**
     * Creates a new CS_ZhaJinHuaCompareCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaCompareCards instance
     */
    public static create(properties?: ICS_ZhaJinHuaCompareCards): CS_ZhaJinHuaCompareCards;

    /**
     * Encodes the specified CS_ZhaJinHuaCompareCards message. Does not implicitly {@link CS_ZhaJinHuaCompareCards.verify|verify} messages.
     * @param message CS_ZhaJinHuaCompareCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaCompareCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaCompareCards message, length delimited. Does not implicitly {@link CS_ZhaJinHuaCompareCards.verify|verify} messages.
     * @param message CS_ZhaJinHuaCompareCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaCompareCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaCompareCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaCompareCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaCompareCards;

    /**
     * Decodes a CS_ZhaJinHuaCompareCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaCompareCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaCompareCards;

    /**
     * Verifies a CS_ZhaJinHuaCompareCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaCompareCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaCompareCards
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaCompareCards;

    /**
     * Creates a plain object from a CS_ZhaJinHuaCompareCards message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaCompareCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaCompareCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaCompareCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaCompareCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25010
    }
}

/** Properties of a SC_ZhaJinHuaCompareCards. */
export interface ISC_ZhaJinHuaCompareCards {

    /** SC_ZhaJinHuaCompareCards result */
    result?: (number|null);

    /** SC_ZhaJinHuaCompareCards comparer */
    comparer?: (number|null);

    /** SC_ZhaJinHuaCompareCards compareWith */
    compareWith?: (number|null);

    /** SC_ZhaJinHuaCompareCards winner */
    winner?: (number|null);

    /** SC_ZhaJinHuaCompareCards loser */
    loser?: (number|null);

    /** SC_ZhaJinHuaCompareCards score */
    score?: (number|null);
}

/** Represents a SC_ZhaJinHuaCompareCards. */
export class SC_ZhaJinHuaCompareCards implements ISC_ZhaJinHuaCompareCards {

    /**
     * Constructs a new SC_ZhaJinHuaCompareCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaCompareCards);

    /** SC_ZhaJinHuaCompareCards result. */
    public result: number;

    /** SC_ZhaJinHuaCompareCards comparer. */
    public comparer: number;

    /** SC_ZhaJinHuaCompareCards compareWith. */
    public compareWith: number;

    /** SC_ZhaJinHuaCompareCards winner. */
    public winner: number;

    /** SC_ZhaJinHuaCompareCards loser. */
    public loser: number;

    /** SC_ZhaJinHuaCompareCards score. */
    public score: number;

    /**
     * Creates a new SC_ZhaJinHuaCompareCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaCompareCards instance
     */
    public static create(properties?: ISC_ZhaJinHuaCompareCards): SC_ZhaJinHuaCompareCards;

    /**
     * Encodes the specified SC_ZhaJinHuaCompareCards message. Does not implicitly {@link SC_ZhaJinHuaCompareCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaCompareCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaCompareCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaCompareCards message, length delimited. Does not implicitly {@link SC_ZhaJinHuaCompareCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaCompareCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaCompareCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaCompareCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaCompareCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaCompareCards;

    /**
     * Decodes a SC_ZhaJinHuaCompareCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaCompareCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaCompareCards;

    /**
     * Verifies a SC_ZhaJinHuaCompareCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaCompareCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaCompareCards
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaCompareCards;

    /**
     * Creates a plain object from a SC_ZhaJinHuaCompareCards message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaCompareCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaCompareCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaCompareCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaCompareCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25011
    }
}

/** Properties of a CS_ZhaJinHuaFollowBet. */
export interface ICS_ZhaJinHuaFollowBet {
}

/** Represents a CS_ZhaJinHuaFollowBet. */
export class CS_ZhaJinHuaFollowBet implements ICS_ZhaJinHuaFollowBet {

    /**
     * Constructs a new CS_ZhaJinHuaFollowBet.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaFollowBet);

    /**
     * Creates a new CS_ZhaJinHuaFollowBet instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaFollowBet instance
     */
    public static create(properties?: ICS_ZhaJinHuaFollowBet): CS_ZhaJinHuaFollowBet;

    /**
     * Encodes the specified CS_ZhaJinHuaFollowBet message. Does not implicitly {@link CS_ZhaJinHuaFollowBet.verify|verify} messages.
     * @param message CS_ZhaJinHuaFollowBet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaFollowBet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaFollowBet message, length delimited. Does not implicitly {@link CS_ZhaJinHuaFollowBet.verify|verify} messages.
     * @param message CS_ZhaJinHuaFollowBet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaFollowBet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaFollowBet message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaFollowBet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaFollowBet;

    /**
     * Decodes a CS_ZhaJinHuaFollowBet message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaFollowBet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaFollowBet;

    /**
     * Verifies a CS_ZhaJinHuaFollowBet message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaFollowBet message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaFollowBet
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaFollowBet;

    /**
     * Creates a plain object from a CS_ZhaJinHuaFollowBet message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaFollowBet
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaFollowBet, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaFollowBet to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaFollowBet {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25012
    }
}

/** Properties of a SC_ZhaJinHuaFollowBet. */
export interface ISC_ZhaJinHuaFollowBet {

    /** SC_ZhaJinHuaFollowBet result */
    result?: (number|null);

    /** SC_ZhaJinHuaFollowBet chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaFollowBet score */
    score?: (number|null);
}

/** Represents a SC_ZhaJinHuaFollowBet. */
export class SC_ZhaJinHuaFollowBet implements ISC_ZhaJinHuaFollowBet {

    /**
     * Constructs a new SC_ZhaJinHuaFollowBet.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaFollowBet);

    /** SC_ZhaJinHuaFollowBet result. */
    public result: number;

    /** SC_ZhaJinHuaFollowBet chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaFollowBet score. */
    public score: number;

    /**
     * Creates a new SC_ZhaJinHuaFollowBet instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaFollowBet instance
     */
    public static create(properties?: ISC_ZhaJinHuaFollowBet): SC_ZhaJinHuaFollowBet;

    /**
     * Encodes the specified SC_ZhaJinHuaFollowBet message. Does not implicitly {@link SC_ZhaJinHuaFollowBet.verify|verify} messages.
     * @param message SC_ZhaJinHuaFollowBet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaFollowBet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaFollowBet message, length delimited. Does not implicitly {@link SC_ZhaJinHuaFollowBet.verify|verify} messages.
     * @param message SC_ZhaJinHuaFollowBet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaFollowBet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaFollowBet message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaFollowBet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaFollowBet;

    /**
     * Decodes a SC_ZhaJinHuaFollowBet message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaFollowBet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaFollowBet;

    /**
     * Verifies a SC_ZhaJinHuaFollowBet message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaFollowBet message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaFollowBet
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaFollowBet;

    /**
     * Creates a plain object from a SC_ZhaJinHuaFollowBet message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaFollowBet
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaFollowBet, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaFollowBet to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaFollowBet {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25013
    }
}

/** Properties of a CS_ZhaJinHuaAllIn. */
export interface ICS_ZhaJinHuaAllIn {
}

/** Represents a CS_ZhaJinHuaAllIn. */
export class CS_ZhaJinHuaAllIn implements ICS_ZhaJinHuaAllIn {

    /**
     * Constructs a new CS_ZhaJinHuaAllIn.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaAllIn);

    /**
     * Creates a new CS_ZhaJinHuaAllIn instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaAllIn instance
     */
    public static create(properties?: ICS_ZhaJinHuaAllIn): CS_ZhaJinHuaAllIn;

    /**
     * Encodes the specified CS_ZhaJinHuaAllIn message. Does not implicitly {@link CS_ZhaJinHuaAllIn.verify|verify} messages.
     * @param message CS_ZhaJinHuaAllIn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaAllIn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaAllIn message, length delimited. Does not implicitly {@link CS_ZhaJinHuaAllIn.verify|verify} messages.
     * @param message CS_ZhaJinHuaAllIn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaAllIn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaAllIn message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaAllIn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaAllIn;

    /**
     * Decodes a CS_ZhaJinHuaAllIn message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaAllIn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaAllIn;

    /**
     * Verifies a CS_ZhaJinHuaAllIn message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaAllIn message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaAllIn
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaAllIn;

    /**
     * Creates a plain object from a CS_ZhaJinHuaAllIn message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaAllIn
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaAllIn, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaAllIn to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaAllIn {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25014
    }
}

/** Properties of a SC_ZhaJinHuaAllIn. */
export interface ISC_ZhaJinHuaAllIn {

    /** SC_ZhaJinHuaAllIn result */
    result?: (number|null);

    /** SC_ZhaJinHuaAllIn chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaAllIn score */
    score?: (number|null);

    /** SC_ZhaJinHuaAllIn isWin */
    isWin?: (boolean|null);
}

/** Represents a SC_ZhaJinHuaAllIn. */
export class SC_ZhaJinHuaAllIn implements ISC_ZhaJinHuaAllIn {

    /**
     * Constructs a new SC_ZhaJinHuaAllIn.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaAllIn);

    /** SC_ZhaJinHuaAllIn result. */
    public result: number;

    /** SC_ZhaJinHuaAllIn chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaAllIn score. */
    public score: number;

    /** SC_ZhaJinHuaAllIn isWin. */
    public isWin: boolean;

    /**
     * Creates a new SC_ZhaJinHuaAllIn instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaAllIn instance
     */
    public static create(properties?: ISC_ZhaJinHuaAllIn): SC_ZhaJinHuaAllIn;

    /**
     * Encodes the specified SC_ZhaJinHuaAllIn message. Does not implicitly {@link SC_ZhaJinHuaAllIn.verify|verify} messages.
     * @param message SC_ZhaJinHuaAllIn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaAllIn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaAllIn message, length delimited. Does not implicitly {@link SC_ZhaJinHuaAllIn.verify|verify} messages.
     * @param message SC_ZhaJinHuaAllIn message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaAllIn, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaAllIn message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaAllIn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaAllIn;

    /**
     * Decodes a SC_ZhaJinHuaAllIn message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaAllIn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaAllIn;

    /**
     * Verifies a SC_ZhaJinHuaAllIn message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaAllIn message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaAllIn
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaAllIn;

    /**
     * Creates a plain object from a SC_ZhaJinHuaAllIn message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaAllIn
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaAllIn, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaAllIn to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaAllIn {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25015
    }
}

/** Properties of a ZhaJinHuaPlayerBalance. */
export interface IZhaJinHuaPlayerBalance {

    /** ZhaJinHuaPlayerBalance chairId */
    chairId?: (number|null);

    /** ZhaJinHuaPlayerBalance guid */
    guid?: (number|null);

    /** ZhaJinHuaPlayerBalance score */
    score?: (number|null);

    /** ZhaJinHuaPlayerBalance money */
    money?: (number|null);

    /** ZhaJinHuaPlayerBalance cards */
    cards?: (number[]|null);

    /** ZhaJinHuaPlayerBalance betMoney */
    betMoney?: (number|null);

    /** ZhaJinHuaPlayerBalance status */
    status?: (number|null);

    /** ZhaJinHuaPlayerBalance totalScore */
    totalScore?: (number|null);

    /** ZhaJinHuaPlayerBalance totalMoney */
    totalMoney?: (number|null);

    /** ZhaJinHuaPlayerBalance pstatus */
    pstatus?: (ZHAJINHUA_PLAYER_STATUS|null);
}

/** Represents a ZhaJinHuaPlayerBalance. */
export class ZhaJinHuaPlayerBalance implements IZhaJinHuaPlayerBalance {

    /**
     * Constructs a new ZhaJinHuaPlayerBalance.
     * @param [properties] Properties to set
     */
    constructor(properties?: IZhaJinHuaPlayerBalance);

    /** ZhaJinHuaPlayerBalance chairId. */
    public chairId: number;

    /** ZhaJinHuaPlayerBalance guid. */
    public guid: number;

    /** ZhaJinHuaPlayerBalance score. */
    public score: number;

    /** ZhaJinHuaPlayerBalance money. */
    public money: number;

    /** ZhaJinHuaPlayerBalance cards. */
    public cards: number[];

    /** ZhaJinHuaPlayerBalance betMoney. */
    public betMoney: number;

    /** ZhaJinHuaPlayerBalance status. */
    public status: number;

    /** ZhaJinHuaPlayerBalance totalScore. */
    public totalScore: number;

    /** ZhaJinHuaPlayerBalance totalMoney. */
    public totalMoney: number;

    /** ZhaJinHuaPlayerBalance pstatus. */
    public pstatus: ZHAJINHUA_PLAYER_STATUS;

    /**
     * Creates a new ZhaJinHuaPlayerBalance instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ZhaJinHuaPlayerBalance instance
     */
    public static create(properties?: IZhaJinHuaPlayerBalance): ZhaJinHuaPlayerBalance;

    /**
     * Encodes the specified ZhaJinHuaPlayerBalance message. Does not implicitly {@link ZhaJinHuaPlayerBalance.verify|verify} messages.
     * @param message ZhaJinHuaPlayerBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IZhaJinHuaPlayerBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ZhaJinHuaPlayerBalance message, length delimited. Does not implicitly {@link ZhaJinHuaPlayerBalance.verify|verify} messages.
     * @param message ZhaJinHuaPlayerBalance message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IZhaJinHuaPlayerBalance, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ZhaJinHuaPlayerBalance message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ZhaJinHuaPlayerBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ZhaJinHuaPlayerBalance;

    /**
     * Decodes a ZhaJinHuaPlayerBalance message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ZhaJinHuaPlayerBalance
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ZhaJinHuaPlayerBalance;

    /**
     * Verifies a ZhaJinHuaPlayerBalance message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ZhaJinHuaPlayerBalance message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ZhaJinHuaPlayerBalance
     */
    public static fromObject(object: { [k: string]: any }): ZhaJinHuaPlayerBalance;

    /**
     * Creates a plain object from a ZhaJinHuaPlayerBalance message. Also converts values to other types if specified.
     * @param message ZhaJinHuaPlayerBalance
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ZhaJinHuaPlayerBalance, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ZhaJinHuaPlayerBalance to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_ZhaJinHuaGameOver. */
export interface ISC_ZhaJinHuaGameOver {

    /** SC_ZhaJinHuaGameOver winner */
    winner?: (number|null);

    /** SC_ZhaJinHuaGameOver balances */
    balances?: (IZhaJinHuaPlayerBalance[]|null);

    /** SC_ZhaJinHuaGameOver tax */
    tax?: (number|null);

    /** SC_ZhaJinHuaGameOver cardsType */
    cardsType?: (number|null);
}

/** Represents a SC_ZhaJinHuaGameOver. */
export class SC_ZhaJinHuaGameOver implements ISC_ZhaJinHuaGameOver {

    /**
     * Constructs a new SC_ZhaJinHuaGameOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaGameOver);

    /** SC_ZhaJinHuaGameOver winner. */
    public winner: number;

    /** SC_ZhaJinHuaGameOver balances. */
    public balances: IZhaJinHuaPlayerBalance[];

    /** SC_ZhaJinHuaGameOver tax. */
    public tax: number;

    /** SC_ZhaJinHuaGameOver cardsType. */
    public cardsType: number;

    /**
     * Creates a new SC_ZhaJinHuaGameOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaGameOver instance
     */
    public static create(properties?: ISC_ZhaJinHuaGameOver): SC_ZhaJinHuaGameOver;

    /**
     * Encodes the specified SC_ZhaJinHuaGameOver message. Does not implicitly {@link SC_ZhaJinHuaGameOver.verify|verify} messages.
     * @param message SC_ZhaJinHuaGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaGameOver message, length delimited. Does not implicitly {@link SC_ZhaJinHuaGameOver.verify|verify} messages.
     * @param message SC_ZhaJinHuaGameOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaGameOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaGameOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaGameOver;

    /**
     * Decodes a SC_ZhaJinHuaGameOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaGameOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaGameOver;

    /**
     * Verifies a SC_ZhaJinHuaGameOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaGameOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaGameOver
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaGameOver;

    /**
     * Creates a plain object from a SC_ZhaJinHuaGameOver message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaGameOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaGameOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaGameOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaGameOver {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25016
    }
}

/** Properties of a ZhaJinHuaPlayerGamingInfo. */
export interface IZhaJinHuaPlayerGamingInfo {

    /** ZhaJinHuaPlayerGamingInfo cards */
    cards?: (number[]|null);

    /** ZhaJinHuaPlayerGamingInfo betScore */
    betScore?: (number|null);

    /** ZhaJinHuaPlayerGamingInfo betChips */
    betChips?: (number[]|null);

    /** ZhaJinHuaPlayerGamingInfo totalMoney */
    totalMoney?: (number|null);

    /** ZhaJinHuaPlayerGamingInfo totalScore */
    totalScore?: (number|null);

    /** ZhaJinHuaPlayerGamingInfo status */
    status?: (number|null);

    /** ZhaJinHuaPlayerGamingInfo isLookCards */
    isLookCards?: (boolean|null);

    /** ZhaJinHuaPlayerGamingInfo pstatus */
    pstatus?: (ZHAJINHUA_PLAYER_STATUS|null);
}

/** Represents a ZhaJinHuaPlayerGamingInfo. */
export class ZhaJinHuaPlayerGamingInfo implements IZhaJinHuaPlayerGamingInfo {

    /**
     * Constructs a new ZhaJinHuaPlayerGamingInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IZhaJinHuaPlayerGamingInfo);

    /** ZhaJinHuaPlayerGamingInfo cards. */
    public cards: number[];

    /** ZhaJinHuaPlayerGamingInfo betScore. */
    public betScore: number;

    /** ZhaJinHuaPlayerGamingInfo betChips. */
    public betChips: number[];

    /** ZhaJinHuaPlayerGamingInfo totalMoney. */
    public totalMoney: number;

    /** ZhaJinHuaPlayerGamingInfo totalScore. */
    public totalScore: number;

    /** ZhaJinHuaPlayerGamingInfo status. */
    public status: number;

    /** ZhaJinHuaPlayerGamingInfo isLookCards. */
    public isLookCards: boolean;

    /** ZhaJinHuaPlayerGamingInfo pstatus. */
    public pstatus: ZHAJINHUA_PLAYER_STATUS;

    /**
     * Creates a new ZhaJinHuaPlayerGamingInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ZhaJinHuaPlayerGamingInfo instance
     */
    public static create(properties?: IZhaJinHuaPlayerGamingInfo): ZhaJinHuaPlayerGamingInfo;

    /**
     * Encodes the specified ZhaJinHuaPlayerGamingInfo message. Does not implicitly {@link ZhaJinHuaPlayerGamingInfo.verify|verify} messages.
     * @param message ZhaJinHuaPlayerGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IZhaJinHuaPlayerGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ZhaJinHuaPlayerGamingInfo message, length delimited. Does not implicitly {@link ZhaJinHuaPlayerGamingInfo.verify|verify} messages.
     * @param message ZhaJinHuaPlayerGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IZhaJinHuaPlayerGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ZhaJinHuaPlayerGamingInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ZhaJinHuaPlayerGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ZhaJinHuaPlayerGamingInfo;

    /**
     * Decodes a ZhaJinHuaPlayerGamingInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ZhaJinHuaPlayerGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ZhaJinHuaPlayerGamingInfo;

    /**
     * Verifies a ZhaJinHuaPlayerGamingInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ZhaJinHuaPlayerGamingInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ZhaJinHuaPlayerGamingInfo
     */
    public static fromObject(object: { [k: string]: any }): ZhaJinHuaPlayerGamingInfo;

    /**
     * Creates a plain object from a ZhaJinHuaPlayerGamingInfo message. Also converts values to other types if specified.
     * @param message ZhaJinHuaPlayerGamingInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ZhaJinHuaPlayerGamingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ZhaJinHuaPlayerGamingInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SC_ZhaJinHuaReconnect. */
export interface ISC_ZhaJinHuaReconnect {

    /** SC_ZhaJinHuaReconnect banker */
    banker?: (number|null);

    /** SC_ZhaJinHuaReconnect players */
    players?: ({ [k: string]: IZhaJinHuaPlayerGamingInfo }|null);

    /** SC_ZhaJinHuaReconnect deskScore */
    deskScore?: (number|null);

    /** SC_ZhaJinHuaReconnect betRound */
    betRound?: (number|null);

    /** SC_ZhaJinHuaReconnect deskChips */
    deskChips?: (number[]|null);

    /** SC_ZhaJinHuaReconnect round */
    round?: (number|null);

    /** SC_ZhaJinHuaReconnect status */
    status?: (number|null);

    /** SC_ZhaJinHuaReconnect baseScore */
    baseScore?: (number|null);

    /** SC_ZhaJinHuaReconnect curBetScore */
    curBetScore?: (number|null);
}

/** Represents a SC_ZhaJinHuaReconnect. */
export class SC_ZhaJinHuaReconnect implements ISC_ZhaJinHuaReconnect {

    /**
     * Constructs a new SC_ZhaJinHuaReconnect.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaReconnect);

    /** SC_ZhaJinHuaReconnect banker. */
    public banker: number;

    /** SC_ZhaJinHuaReconnect players. */
    public players: { [k: string]: IZhaJinHuaPlayerGamingInfo };

    /** SC_ZhaJinHuaReconnect deskScore. */
    public deskScore: number;

    /** SC_ZhaJinHuaReconnect betRound. */
    public betRound: number;

    /** SC_ZhaJinHuaReconnect deskChips. */
    public deskChips: number[];

    /** SC_ZhaJinHuaReconnect round. */
    public round: number;

    /** SC_ZhaJinHuaReconnect status. */
    public status: number;

    /** SC_ZhaJinHuaReconnect baseScore. */
    public baseScore: number;

    /** SC_ZhaJinHuaReconnect curBetScore. */
    public curBetScore: number;

    /**
     * Creates a new SC_ZhaJinHuaReconnect instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaReconnect instance
     */
    public static create(properties?: ISC_ZhaJinHuaReconnect): SC_ZhaJinHuaReconnect;

    /**
     * Encodes the specified SC_ZhaJinHuaReconnect message. Does not implicitly {@link SC_ZhaJinHuaReconnect.verify|verify} messages.
     * @param message SC_ZhaJinHuaReconnect message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaReconnect, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaReconnect message, length delimited. Does not implicitly {@link SC_ZhaJinHuaReconnect.verify|verify} messages.
     * @param message SC_ZhaJinHuaReconnect message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaReconnect, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaReconnect message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaReconnect
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaReconnect;

    /**
     * Decodes a SC_ZhaJinHuaReconnect message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaReconnect
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaReconnect;

    /**
     * Verifies a SC_ZhaJinHuaReconnect message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaReconnect message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaReconnect
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaReconnect;

    /**
     * Creates a plain object from a SC_ZhaJinHuaReconnect message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaReconnect
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaReconnect, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaReconnect to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaReconnect {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25017
    }
}

/** Properties of a SC_ZhaJinHuaLostCards. */
export interface ISC_ZhaJinHuaLostCards {

    /** SC_ZhaJinHuaLostCards winerCards */
    winerCards?: (number[]|null);

    /** SC_ZhaJinHuaLostCards losterCards */
    losterCards?: (number[]|null);
}

/** Represents a SC_ZhaJinHuaLostCards. */
export class SC_ZhaJinHuaLostCards implements ISC_ZhaJinHuaLostCards {

    /**
     * Constructs a new SC_ZhaJinHuaLostCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaLostCards);

    /** SC_ZhaJinHuaLostCards winerCards. */
    public winerCards: number[];

    /** SC_ZhaJinHuaLostCards losterCards. */
    public losterCards: number[];

    /**
     * Creates a new SC_ZhaJinHuaLostCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaLostCards instance
     */
    public static create(properties?: ISC_ZhaJinHuaLostCards): SC_ZhaJinHuaLostCards;

    /**
     * Encodes the specified SC_ZhaJinHuaLostCards message. Does not implicitly {@link SC_ZhaJinHuaLostCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaLostCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaLostCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaLostCards message, length delimited. Does not implicitly {@link SC_ZhaJinHuaLostCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaLostCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaLostCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaLostCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaLostCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaLostCards;

    /**
     * Decodes a SC_ZhaJinHuaLostCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaLostCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaLostCards;

    /**
     * Verifies a SC_ZhaJinHuaLostCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaLostCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaLostCards
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaLostCards;

    /**
     * Creates a plain object from a SC_ZhaJinHuaLostCards message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaLostCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaLostCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaLostCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaLostCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25018
    }
}

/** Properties of a SC_ZhaJinHuaRound. */
export interface ISC_ZhaJinHuaRound {

    /** SC_ZhaJinHuaRound round */
    round?: (number|null);
}

/** Represents a SC_ZhaJinHuaRound. */
export class SC_ZhaJinHuaRound implements ISC_ZhaJinHuaRound {

    /**
     * Constructs a new SC_ZhaJinHuaRound.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaRound);

    /** SC_ZhaJinHuaRound round. */
    public round: number;

    /**
     * Creates a new SC_ZhaJinHuaRound instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaRound instance
     */
    public static create(properties?: ISC_ZhaJinHuaRound): SC_ZhaJinHuaRound;

    /**
     * Encodes the specified SC_ZhaJinHuaRound message. Does not implicitly {@link SC_ZhaJinHuaRound.verify|verify} messages.
     * @param message SC_ZhaJinHuaRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaRound message, length delimited. Does not implicitly {@link SC_ZhaJinHuaRound.verify|verify} messages.
     * @param message SC_ZhaJinHuaRound message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaRound, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaRound message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaRound;

    /**
     * Decodes a SC_ZhaJinHuaRound message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaRound
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaRound;

    /**
     * Verifies a SC_ZhaJinHuaRound message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaRound message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaRound
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaRound;

    /**
     * Creates a plain object from a SC_ZhaJinHuaRound message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaRound
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaRound, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaRound to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaRound {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25019
    }
}

/** Properties of a CS_ZhaJinHuaShowCards. */
export interface ICS_ZhaJinHuaShowCards {

    /** CS_ZhaJinHuaShowCards chairId */
    chairId?: (number|null);
}

/** Represents a CS_ZhaJinHuaShowCards. */
export class CS_ZhaJinHuaShowCards implements ICS_ZhaJinHuaShowCards {

    /**
     * Constructs a new CS_ZhaJinHuaShowCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaShowCards);

    /** CS_ZhaJinHuaShowCards chairId. */
    public chairId: number;

    /**
     * Creates a new CS_ZhaJinHuaShowCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaShowCards instance
     */
    public static create(properties?: ICS_ZhaJinHuaShowCards): CS_ZhaJinHuaShowCards;

    /**
     * Encodes the specified CS_ZhaJinHuaShowCards message. Does not implicitly {@link CS_ZhaJinHuaShowCards.verify|verify} messages.
     * @param message CS_ZhaJinHuaShowCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaShowCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaShowCards message, length delimited. Does not implicitly {@link CS_ZhaJinHuaShowCards.verify|verify} messages.
     * @param message CS_ZhaJinHuaShowCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaShowCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaShowCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaShowCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaShowCards;

    /**
     * Decodes a CS_ZhaJinHuaShowCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaShowCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaShowCards;

    /**
     * Verifies a CS_ZhaJinHuaShowCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaShowCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaShowCards
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaShowCards;

    /**
     * Creates a plain object from a CS_ZhaJinHuaShowCards message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaShowCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaShowCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaShowCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaShowCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25020
    }
}

/** Properties of a SC_ZhaJinHuaShowCardsToAll. */
export interface ISC_ZhaJinHuaShowCardsToAll {

    /** SC_ZhaJinHuaShowCardsToAll result */
    result?: (number|null);

    /** SC_ZhaJinHuaShowCardsToAll chairId */
    chairId?: (number|null);

    /** SC_ZhaJinHuaShowCardsToAll cards */
    cards?: (number[]|null);
}

/** Represents a SC_ZhaJinHuaShowCardsToAll. */
export class SC_ZhaJinHuaShowCardsToAll implements ISC_ZhaJinHuaShowCardsToAll {

    /**
     * Constructs a new SC_ZhaJinHuaShowCardsToAll.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaShowCardsToAll);

    /** SC_ZhaJinHuaShowCardsToAll result. */
    public result: number;

    /** SC_ZhaJinHuaShowCardsToAll chairId. */
    public chairId: number;

    /** SC_ZhaJinHuaShowCardsToAll cards. */
    public cards: number[];

    /**
     * Creates a new SC_ZhaJinHuaShowCardsToAll instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaShowCardsToAll instance
     */
    public static create(properties?: ISC_ZhaJinHuaShowCardsToAll): SC_ZhaJinHuaShowCardsToAll;

    /**
     * Encodes the specified SC_ZhaJinHuaShowCardsToAll message. Does not implicitly {@link SC_ZhaJinHuaShowCardsToAll.verify|verify} messages.
     * @param message SC_ZhaJinHuaShowCardsToAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaShowCardsToAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaShowCardsToAll message, length delimited. Does not implicitly {@link SC_ZhaJinHuaShowCardsToAll.verify|verify} messages.
     * @param message SC_ZhaJinHuaShowCardsToAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaShowCardsToAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaShowCardsToAll message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaShowCardsToAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaShowCardsToAll;

    /**
     * Decodes a SC_ZhaJinHuaShowCardsToAll message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaShowCardsToAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaShowCardsToAll;

    /**
     * Verifies a SC_ZhaJinHuaShowCardsToAll message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaShowCardsToAll message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaShowCardsToAll
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaShowCardsToAll;

    /**
     * Creates a plain object from a SC_ZhaJinHuaShowCardsToAll message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaShowCardsToAll
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaShowCardsToAll, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaShowCardsToAll to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaShowCardsToAll {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25021
    }
}

/** Properties of a SC_ZhaJinHuaAllComCards. */
export interface ISC_ZhaJinHuaAllComCards {

    /** SC_ZhaJinHuaAllComCards loser */
    loser?: (number|null);
}

/** Represents a SC_ZhaJinHuaAllComCards. */
export class SC_ZhaJinHuaAllComCards implements ISC_ZhaJinHuaAllComCards {

    /**
     * Constructs a new SC_ZhaJinHuaAllComCards.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaAllComCards);

    /** SC_ZhaJinHuaAllComCards loser. */
    public loser: number;

    /**
     * Creates a new SC_ZhaJinHuaAllComCards instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaAllComCards instance
     */
    public static create(properties?: ISC_ZhaJinHuaAllComCards): SC_ZhaJinHuaAllComCards;

    /**
     * Encodes the specified SC_ZhaJinHuaAllComCards message. Does not implicitly {@link SC_ZhaJinHuaAllComCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaAllComCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaAllComCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaAllComCards message, length delimited. Does not implicitly {@link SC_ZhaJinHuaAllComCards.verify|verify} messages.
     * @param message SC_ZhaJinHuaAllComCards message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaAllComCards, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaAllComCards message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaAllComCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaAllComCards;

    /**
     * Decodes a SC_ZhaJinHuaAllComCards message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaAllComCards
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaAllComCards;

    /**
     * Verifies a SC_ZhaJinHuaAllComCards message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaAllComCards message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaAllComCards
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaAllComCards;

    /**
     * Creates a plain object from a SC_ZhaJinHuaAllComCards message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaAllComCards
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaAllComCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaAllComCards to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaAllComCards {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25022
    }
}

/** Properties of a CS_ZhaJinHuaLastRecord. */
export interface ICS_ZhaJinHuaLastRecord {
}

/** Represents a CS_ZhaJinHuaLastRecord. */
export class CS_ZhaJinHuaLastRecord implements ICS_ZhaJinHuaLastRecord {

    /**
     * Constructs a new CS_ZhaJinHuaLastRecord.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaLastRecord);

    /**
     * Creates a new CS_ZhaJinHuaLastRecord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaLastRecord instance
     */
    public static create(properties?: ICS_ZhaJinHuaLastRecord): CS_ZhaJinHuaLastRecord;

    /**
     * Encodes the specified CS_ZhaJinHuaLastRecord message. Does not implicitly {@link CS_ZhaJinHuaLastRecord.verify|verify} messages.
     * @param message CS_ZhaJinHuaLastRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaLastRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaLastRecord message, length delimited. Does not implicitly {@link CS_ZhaJinHuaLastRecord.verify|verify} messages.
     * @param message CS_ZhaJinHuaLastRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaLastRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaLastRecord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaLastRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaLastRecord;

    /**
     * Decodes a CS_ZhaJinHuaLastRecord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaLastRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaLastRecord;

    /**
     * Verifies a CS_ZhaJinHuaLastRecord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaLastRecord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaLastRecord
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaLastRecord;

    /**
     * Creates a plain object from a CS_ZhaJinHuaLastRecord message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaLastRecord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaLastRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaLastRecord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaLastRecord {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25023
    }
}

/** Properties of a SC_ZhaJinHuaLastRecord. */
export interface ISC_ZhaJinHuaLastRecord {

    /** SC_ZhaJinHuaLastRecord winner */
    winner?: (number|null);

    /** SC_ZhaJinHuaLastRecord balances */
    balances?: (IZhaJinHuaPlayerBalance[]|null);

    /** SC_ZhaJinHuaLastRecord cardsType */
    cardsType?: (number|null);
}

/** Represents a SC_ZhaJinHuaLastRecord. */
export class SC_ZhaJinHuaLastRecord implements ISC_ZhaJinHuaLastRecord {

    /**
     * Constructs a new SC_ZhaJinHuaLastRecord.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaLastRecord);

    /** SC_ZhaJinHuaLastRecord winner. */
    public winner: number;

    /** SC_ZhaJinHuaLastRecord balances. */
    public balances: IZhaJinHuaPlayerBalance[];

    /** SC_ZhaJinHuaLastRecord cardsType. */
    public cardsType: number;

    /**
     * Creates a new SC_ZhaJinHuaLastRecord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaLastRecord instance
     */
    public static create(properties?: ISC_ZhaJinHuaLastRecord): SC_ZhaJinHuaLastRecord;

    /**
     * Encodes the specified SC_ZhaJinHuaLastRecord message. Does not implicitly {@link SC_ZhaJinHuaLastRecord.verify|verify} messages.
     * @param message SC_ZhaJinHuaLastRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaLastRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaLastRecord message, length delimited. Does not implicitly {@link SC_ZhaJinHuaLastRecord.verify|verify} messages.
     * @param message SC_ZhaJinHuaLastRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaLastRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaLastRecord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaLastRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaLastRecord;

    /**
     * Decodes a SC_ZhaJinHuaLastRecord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaLastRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaLastRecord;

    /**
     * Verifies a SC_ZhaJinHuaLastRecord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaLastRecord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaLastRecord
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaLastRecord;

    /**
     * Creates a plain object from a SC_ZhaJinHuaLastRecord message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaLastRecord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaLastRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaLastRecord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaLastRecord {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25024
    }
}

/** Properties of a SC_ZhaJinHuaFinalOver. */
export interface ISC_ZhaJinHuaFinalOver {

    /** SC_ZhaJinHuaFinalOver balances */
    balances?: (IZhaJinHuaPlayerBalance[]|null);
}

/** Represents a SC_ZhaJinHuaFinalOver. */
export class SC_ZhaJinHuaFinalOver implements ISC_ZhaJinHuaFinalOver {

    /**
     * Constructs a new SC_ZhaJinHuaFinalOver.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaFinalOver);

    /** SC_ZhaJinHuaFinalOver balances. */
    public balances: IZhaJinHuaPlayerBalance[];

    /**
     * Creates a new SC_ZhaJinHuaFinalOver instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaFinalOver instance
     */
    public static create(properties?: ISC_ZhaJinHuaFinalOver): SC_ZhaJinHuaFinalOver;

    /**
     * Encodes the specified SC_ZhaJinHuaFinalOver message. Does not implicitly {@link SC_ZhaJinHuaFinalOver.verify|verify} messages.
     * @param message SC_ZhaJinHuaFinalOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaFinalOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaFinalOver message, length delimited. Does not implicitly {@link SC_ZhaJinHuaFinalOver.verify|verify} messages.
     * @param message SC_ZhaJinHuaFinalOver message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaFinalOver, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaFinalOver message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaFinalOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaFinalOver;

    /**
     * Decodes a SC_ZhaJinHuaFinalOver message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaFinalOver
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaFinalOver;

    /**
     * Verifies a SC_ZhaJinHuaFinalOver message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaFinalOver message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaFinalOver
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaFinalOver;

    /**
     * Creates a plain object from a SC_ZhaJinHuaFinalOver message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaFinalOver
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaFinalOver, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaFinalOver to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaFinalOver {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25025
    }
}

/** Properties of a SC_ZhaJinHuaTableGamingInfo. */
export interface ISC_ZhaJinHuaTableGamingInfo {

    /** SC_ZhaJinHuaTableGamingInfo banker */
    banker?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo players */
    players?: ({ [k: string]: IZhaJinHuaPlayerGamingInfo }|null);

    /** SC_ZhaJinHuaTableGamingInfo deskScore */
    deskScore?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo betRound */
    betRound?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo deskChips */
    deskChips?: (number[]|null);

    /** SC_ZhaJinHuaTableGamingInfo round */
    round?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo status */
    status?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo baseScore */
    baseScore?: (number|null);

    /** SC_ZhaJinHuaTableGamingInfo curBetScore */
    curBetScore?: (number|null);
}

/** Represents a SC_ZhaJinHuaTableGamingInfo. */
export class SC_ZhaJinHuaTableGamingInfo implements ISC_ZhaJinHuaTableGamingInfo {

    /**
     * Constructs a new SC_ZhaJinHuaTableGamingInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaTableGamingInfo);

    /** SC_ZhaJinHuaTableGamingInfo banker. */
    public banker: number;

    /** SC_ZhaJinHuaTableGamingInfo players. */
    public players: { [k: string]: IZhaJinHuaPlayerGamingInfo };

    /** SC_ZhaJinHuaTableGamingInfo deskScore. */
    public deskScore: number;

    /** SC_ZhaJinHuaTableGamingInfo betRound. */
    public betRound: number;

    /** SC_ZhaJinHuaTableGamingInfo deskChips. */
    public deskChips: number[];

    /** SC_ZhaJinHuaTableGamingInfo round. */
    public round: number;

    /** SC_ZhaJinHuaTableGamingInfo status. */
    public status: number;

    /** SC_ZhaJinHuaTableGamingInfo baseScore. */
    public baseScore: number;

    /** SC_ZhaJinHuaTableGamingInfo curBetScore. */
    public curBetScore: number;

    /**
     * Creates a new SC_ZhaJinHuaTableGamingInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaTableGamingInfo instance
     */
    public static create(properties?: ISC_ZhaJinHuaTableGamingInfo): SC_ZhaJinHuaTableGamingInfo;

    /**
     * Encodes the specified SC_ZhaJinHuaTableGamingInfo message. Does not implicitly {@link SC_ZhaJinHuaTableGamingInfo.verify|verify} messages.
     * @param message SC_ZhaJinHuaTableGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaTableGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaTableGamingInfo message, length delimited. Does not implicitly {@link SC_ZhaJinHuaTableGamingInfo.verify|verify} messages.
     * @param message SC_ZhaJinHuaTableGamingInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaTableGamingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaTableGamingInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaTableGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaTableGamingInfo;

    /**
     * Decodes a SC_ZhaJinHuaTableGamingInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaTableGamingInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaTableGamingInfo;

    /**
     * Verifies a SC_ZhaJinHuaTableGamingInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaTableGamingInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaTableGamingInfo
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaTableGamingInfo;

    /**
     * Creates a plain object from a SC_ZhaJinHuaTableGamingInfo message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaTableGamingInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaTableGamingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaTableGamingInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaTableGamingInfo {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25026
    }
}

/** Properties of a CS_ZhaJinHuaStartGame. */
export interface ICS_ZhaJinHuaStartGame {
}

/** Represents a CS_ZhaJinHuaStartGame. */
export class CS_ZhaJinHuaStartGame implements ICS_ZhaJinHuaStartGame {

    /**
     * Constructs a new CS_ZhaJinHuaStartGame.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICS_ZhaJinHuaStartGame);

    /**
     * Creates a new CS_ZhaJinHuaStartGame instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CS_ZhaJinHuaStartGame instance
     */
    public static create(properties?: ICS_ZhaJinHuaStartGame): CS_ZhaJinHuaStartGame;

    /**
     * Encodes the specified CS_ZhaJinHuaStartGame message. Does not implicitly {@link CS_ZhaJinHuaStartGame.verify|verify} messages.
     * @param message CS_ZhaJinHuaStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICS_ZhaJinHuaStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CS_ZhaJinHuaStartGame message, length delimited. Does not implicitly {@link CS_ZhaJinHuaStartGame.verify|verify} messages.
     * @param message CS_ZhaJinHuaStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICS_ZhaJinHuaStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CS_ZhaJinHuaStartGame message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CS_ZhaJinHuaStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CS_ZhaJinHuaStartGame;

    /**
     * Decodes a CS_ZhaJinHuaStartGame message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CS_ZhaJinHuaStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CS_ZhaJinHuaStartGame;

    /**
     * Verifies a CS_ZhaJinHuaStartGame message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CS_ZhaJinHuaStartGame message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CS_ZhaJinHuaStartGame
     */
    public static fromObject(object: { [k: string]: any }): CS_ZhaJinHuaStartGame;

    /**
     * Creates a plain object from a CS_ZhaJinHuaStartGame message. Also converts values to other types if specified.
     * @param message CS_ZhaJinHuaStartGame
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CS_ZhaJinHuaStartGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CS_ZhaJinHuaStartGame to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace CS_ZhaJinHuaStartGame {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25027
    }
}

/** Properties of a SC_ZhaJinHuaStartGame. */
export interface ISC_ZhaJinHuaStartGame {

    /** SC_ZhaJinHuaStartGame result */
    result?: (number|null);
}

/** Represents a SC_ZhaJinHuaStartGame. */
export class SC_ZhaJinHuaStartGame implements ISC_ZhaJinHuaStartGame {

    /**
     * Constructs a new SC_ZhaJinHuaStartGame.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISC_ZhaJinHuaStartGame);

    /** SC_ZhaJinHuaStartGame result. */
    public result: number;

    /**
     * Creates a new SC_ZhaJinHuaStartGame instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SC_ZhaJinHuaStartGame instance
     */
    public static create(properties?: ISC_ZhaJinHuaStartGame): SC_ZhaJinHuaStartGame;

    /**
     * Encodes the specified SC_ZhaJinHuaStartGame message. Does not implicitly {@link SC_ZhaJinHuaStartGame.verify|verify} messages.
     * @param message SC_ZhaJinHuaStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISC_ZhaJinHuaStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SC_ZhaJinHuaStartGame message, length delimited. Does not implicitly {@link SC_ZhaJinHuaStartGame.verify|verify} messages.
     * @param message SC_ZhaJinHuaStartGame message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISC_ZhaJinHuaStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SC_ZhaJinHuaStartGame message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SC_ZhaJinHuaStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SC_ZhaJinHuaStartGame;

    /**
     * Decodes a SC_ZhaJinHuaStartGame message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SC_ZhaJinHuaStartGame
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SC_ZhaJinHuaStartGame;

    /**
     * Verifies a SC_ZhaJinHuaStartGame message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SC_ZhaJinHuaStartGame message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SC_ZhaJinHuaStartGame
     */
    public static fromObject(object: { [k: string]: any }): SC_ZhaJinHuaStartGame;

    /**
     * Creates a plain object from a SC_ZhaJinHuaStartGame message. Also converts values to other types if specified.
     * @param message SC_ZhaJinHuaStartGame
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SC_ZhaJinHuaStartGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SC_ZhaJinHuaStartGame to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SC_ZhaJinHuaStartGame {

    /** MsgID enum. */
    enum MsgID {
        NIL = 0,
        ID = 25028
    }
}
